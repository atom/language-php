id: 'php'
name: 'PHP'
type: 'tree-sitter'
parser: 'tree-sitter-php'

comments:
  start: '#'

fileTypes: [
  'php'
  'phpt'
]

folds: [
  {
    start: {type: '{', index: 0},
    end: {'}', index: -1}
  }
  {
    start: {type: '(', index: 0},
    end: {')', index: -1}
  }
]

scopes:
  '"echo"': 'support.function'
  'string': 'string.quoted'
  'float': 'constant.numeric'

  'function_call_expression > qualified_name': 'entity.name.function'
  'variable_name': 'variable'

  'program': 'source.php'
  'ERROR': 'syntax-error'


  'class_declaration > name': 'support.storage.type'
  'class_base_clause > qualified_name > name': 'storage.modifier.extends.php'

  'function_definition > name': 'entity.name.function'
  'function_call_expression > name': 'entity.name.function'

  'method_declaration > name': 'entity.name.function'
  'method_declaration > function_definition > name': 'entity.name.function'
  'constructor_definition > "__construct"': 'entity.name.function'

  'object_creation_expression > qualified_name > name': 'meta.class.instance.constructor'
  'object_creation_expression > new_variable > simple_variable': 'meta.class.instance.constructor'

  'integer': 'constant.numeric.decimal'
  'float': 'constant.numeric.decimal'
  'string': 'string.quoted.single'
  'regex': 'string.regexp'
  'true': 'constant.language.boolean.true'
  'false': 'constant.language.boolean.false'
  'comment': 'comment.block'

  '"("': 'punctuation.definition.parameters.begin.bracket.round'
  '")"': 'punctuation.definition.parameters.end.bracket.round'
  '"{"': 'punctuation.definition.function.body.begin.bracket.curly'
  '"}"': 'punctuation.definition.function.body.end.bracket.curly'

  '"static"': 'storage.modifier'
  '"public"': 'storage.modifier'
  '"private"': 'storage.modifier'
  '"protected"': 'storage.modifier'
  '"class"': 'storage.type.class'
  '"function"': 'storage.type.function'
  '"type"': 'storage.type.type'

  '"+"': 'keyword.operator'
  '"-"': 'keyword.operator'
  '"*"': 'keyword.operator'
  '"/"': 'keyword.operator'

  '"."': 'meta.delimiter.property.period'
  '","': 'meta.delimiter.object.comma'

  '"if"': 'keyword.control'
  '"do"': 'keyword.control'
  '"else"': 'keyword.control'
  '"elseif"': 'keyword.control'
  '"endif"': 'keyword.control'
  '"while"': 'keyword.control'
  '"endwhile"': 'keyword.control'
  '"for"': 'keyword.control'
  '"endfor"': 'keyword.control'
  '"foreach"': 'keyword.control'
  '"endforeach"': 'keyword.control'
  '"declare"': 'keyword.control'
  '"enddeclare"': 'keyword.control'
  '"return"': 'keyword.control'
  '"break"': 'keyword.control'
  '"continue"': 'keyword.control'
  '"throw"': 'keyword.control'
  '"try"': 'keyword.control'
  '"catch"': 'keyword.control'
  '"finally"': 'keyword.control'
  '"switch"': 'keyword.control'
  '"endswitch"': 'keyword.control'
  '"case"': 'keyword.control'
  '"default"': 'keyword.control'
