{
    ".source.php": {
        "editor": {
            "commentStart": "\/\/ "
        },
        "autocomplete": {
            "symbols": {
                "": {
                    "suggestions": [
                        {
                            "text": "override",
                            "type": "function",
                            "leftLabel": "mixed",
                            "rightLabel": "$callable $override"
                        },
                        {
                            "text": "map",
                            "type": "function",
                            "description": "map argument with #$argNum Literal value to one of expressions",
                            "leftLabel": "mixed",
                            "rightLabel": "$map"
                        },
                        {
                            "text": "type",
                            "type": "function",
                            "description": "type of argument #$argNum",
                            "leftLabel": "mixed",
                            "rightLabel": "$argNum"
                        },
                        {
                            "text": "elementType",
                            "type": "function",
                            "description": "element type of argument #$argNum",
                            "leftLabel": "mixed",
                            "rightLabel": "$argNum"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_array",
                            "type": "function",
                            "description": "Creates an array.",
                            "leftLabel": "array",
                            "rightLabel": "$_"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_list",
                            "type": "function",
                            "description": "Assigns a list of variables in one operation.",
                            "leftLabel": "array",
                            "rightLabel": "$var1 $_"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_die",
                            "type": "function",
                            "description": "Terminates execution of the script. Shutdown functions and object destructors will always be executed even if exit is called.\ndie is a language construct and it can be called without parentheses if no status is passed.",
                            "leftLabel": "void",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_exit",
                            "type": "function",
                            "description": "Terminates execution of the script. Shutdown functions and object destructors will always be executed even if exit is called.\nexit is a language construct and it can be called without parentheses if no status is passed.",
                            "leftLabel": "void",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_empty",
                            "type": "function",
                            "description": "Determine whether a variable is considered to be empty. A variable is considered empty if it does not exist or if its value\nequals FALSE. empty() does not generate a warning if the variable does not exist.",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_isset",
                            "type": "function",
                            "description": "Determine if a variable is set and is not NULL.\nIf a variable has been unset with unset(), it will no longer be set. isset() will return FALSE if testing a variable\nthat has been set to NULL. Also note that a null character (\"\\0\") is not equivalent to the PHP NULL constant.\nIf multiple parameters are supplied then isset() will return TRUE only if all of the parameters are set.",
                            "leftLabel": "bool",
                            "rightLabel": "$var $_"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_unset",
                            "type": "function",
                            "description": "Destroys the specified variables.\nThe behavior of unset() inside of a function can vary depending on what type of variable you are attempting to destroy.",
                            "leftLabel": "void",
                            "rightLabel": "$var $_"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_eval",
                            "type": "function",
                            "description": "Evaluates the given code as PHP.\nCaution: The eval() language construct is very dangerous because it allows execution of arbitrary PHP code. Its use thus is\ndiscouraged. If you have carefully verified that there is no other option than to use this construct, pay special attention not to\npass any user provided data into it without properly validating it beforehand.",
                            "leftLabel": "mixed",
                            "rightLabel": "$code"
                        },
                        {
                            "text": "apache_child_terminate",
                            "type": "function",
                            "description": "Terminate apache process after this request\napache_child_terminate() will register the Apache process executing the current PHP request for termination once execution of PHP code is completed. It may be used to terminate a process after a script with high memory consumption has been run as memory will usually only be freed internally but not given back to the operating system. Since PHP 4.0.5 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "apache_get_modules",
                            "type": "function",
                            "description": "Get a list of loaded Apache modules Since PHP 4.3.2 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "apache_get_version",
                            "type": "function",
                            "description": "Fetch the Apache version Since PHP 4.3.2 5.0",
                            "leftLabel": "string | false"
                        },
                        {
                            "text": "apache_getenv",
                            "type": "function",
                            "description": "Get an Apache subprocess_env variable\nRetrieve an Apache environment variable specified by $variable. Since PHP 4.3.0 5.0",
                            "leftLabel": "string | false",
                            "rightLabel": "$variable $walk_to_top"
                        },
                        {
                            "text": "apache_lookup_uri",
                            "type": "function",
                            "description": "Perform a partial request for the specified URI and return all info about it\nThis performs a partial request for a URI. It goes just far enough to obtain all the important information about the given resource. Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "apache_note",
                            "type": "function",
                            "description": "Get and set apache request notes\nThis function is a wrapper for Apache's table_get and table_set. It edits the table of notes that exists during a request. The table's purpose is to allow Apache modules to communicate. Since PHP 4.0 5.0",
                            "leftLabel": "string | false",
                            "rightLabel": "$note_name $note_value"
                        },
                        {
                            "text": "apache_request_headers",
                            "type": "function",
                            "description": "Fetches all HTTP request headers from the current request Since PHP 4.3.0 5.0",
                            "leftLabel": "array | false"
                        },
                        {
                            "text": "apache_reset_timeout",
                            "type": "function",
                            "description": "Reset the Apache write timer\napache_reset_timeout() resets the Apache write timer, which defaults to 300 seconds. With set_time_limit(0); ignore_user_abort(true) and periodic apache_reset_timeout() calls, Apache can theoretically run forever. Since PHP 5.1.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "apache_response_headers",
                            "type": "function",
                            "description": "Fetch all HTTP response headers Since PHP 4.3.0 5.0",
                            "leftLabel": "array | false"
                        },
                        {
                            "text": "apache_setenv",
                            "type": "function",
                            "description": "Sets the value of the Apache environment variable specified by variable. Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$variable $value $walk_to_top"
                        },
                        {
                            "text": "getallheaders",
                            "type": "function",
                            "description": "Fetches all HTTP headers from the current request. Since PHP 4.0 5.0",
                            "leftLabel": "array | false"
                        },
                        {
                            "text": "virtual",
                            "type": "function",
                            "description": "Perform an Apache sub-request\nvirtual() is an Apache-specific function which is similar to  Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "apcu_clear_cache",
                            "type": "function",
                            "description": "Clears the APCu cache",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "apcu_sma_info",
                            "type": "function",
                            "description": "Retrieves APCu Shared Memory Allocation information",
                            "leftLabel": "array | bool",
                            "rightLabel": "$limited"
                        },
                        {
                            "text": "apcu_store",
                            "type": "function",
                            "description": "Cache a variable in the data store",
                            "leftLabel": "bool | array",
                            "rightLabel": "$key $var $ttl"
                        },
                        {
                            "text": "apcu_fetch",
                            "type": "function",
                            "description": "Fetch a stored variable from the cache",
                            "leftLabel": "mixed",
                            "rightLabel": "$key $success"
                        },
                        {
                            "text": "apcu_delete",
                            "type": "function",
                            "description": "Removes a stored variable from the cache",
                            "leftLabel": "bool | string[]",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "apcu_add",
                            "type": "function",
                            "description": "Caches a variable in the data store, only if it's not already stored",
                            "leftLabel": "bool",
                            "rightLabel": "$key $var $ttl"
                        },
                        {
                            "text": "apcu_exists",
                            "type": "function",
                            "description": "Checks if APCu key exists",
                            "leftLabel": "bool | string[]",
                            "rightLabel": "$keys"
                        },
                        {
                            "text": "apcu_inc",
                            "type": "function",
                            "description": "Increase a stored number",
                            "leftLabel": "int | bool",
                            "rightLabel": "$key $step $success"
                        },
                        {
                            "text": "apcu_dec",
                            "type": "function",
                            "description": "Decrease a stored number",
                            "leftLabel": "int | bool",
                            "rightLabel": "$key $step $success"
                        },
                        {
                            "text": "apcu_cas",
                            "type": "function",
                            "description": "Updates an old value with a new value",
                            "leftLabel": "bool",
                            "rightLabel": "$key $old $new"
                        },
                        {
                            "text": "apcu_entry",
                            "type": "function",
                            "description": "Atomically fetch or generate a cache entry Since PHP APCu 5.1.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$key callable $generator $ttl"
                        },
                        {
                            "text": "dl",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$library"
                        },
                        {
                            "text": "cli_set_process_title",
                            "type": "function",
                            "description": "Sets the process title Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$title"
                        },
                        {
                            "text": "cli_get_process_title",
                            "type": "function",
                            "description": "Returns the current process title Since PHP 5.5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "gc_mem_caches",
                            "type": "function",
                            "description": "Reclaims memory used by the Zend Engine memory manager Since PHP 7.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "get_resources",
                            "type": "function",
                            "description": "Returns active resources Since PHP 7.0",
                            "leftLabel": "array",
                            "rightLabel": "$type"
                        },
                        {
                            "text": "bcadd",
                            "type": "function",
                            "description": "Add two arbitrary precision numbers Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $right_operand $scale"
                        },
                        {
                            "text": "bcsub",
                            "type": "function",
                            "description": "Subtract one arbitrary precision number from another Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $right_operand $scale"
                        },
                        {
                            "text": "bcmul",
                            "type": "function",
                            "description": "Multiply two arbitrary precision numbers Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $right_operand $scale"
                        },
                        {
                            "text": "bcdiv",
                            "type": "function",
                            "description": "Divide two arbitrary precision numbers Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $right_operand $scale"
                        },
                        {
                            "text": "bcmod",
                            "type": "function",
                            "description": "Get modulus of an arbitrary precision number Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $modulus"
                        },
                        {
                            "text": "bcpow",
                            "type": "function",
                            "description": "Raise an arbitrary precision number to another Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $right_operand $scale"
                        },
                        {
                            "text": "bcsqrt",
                            "type": "function",
                            "description": "Get the square root of an arbitrary precision number Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$operand $scale"
                        },
                        {
                            "text": "bcscale",
                            "type": "function",
                            "description": "Set default scale parameter for all bc math functions Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$scale"
                        },
                        {
                            "text": "bccomp",
                            "type": "function",
                            "description": "Compare two arbitrary precision numbers Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$left_operand $right_operand $scale"
                        },
                        {
                            "text": "bcpowmod",
                            "type": "function",
                            "description": "Raise an arbitrary precision number to another, reduced by a specified modulus Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$left_operand $right_operand $modulus $scale"
                        },
                        {
                            "text": "bzopen",
                            "type": "function",
                            "description": "Opens a bzip2 compressed file Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename $mode"
                        },
                        {
                            "text": "bzread",
                            "type": "function",
                            "description": "Binary safe bzip2 file read Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$bz $length"
                        },
                        {
                            "text": "bzwrite",
                            "type": "function",
                            "description": "Binary safe bzip2 file write Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$bz $data $length"
                        },
                        {
                            "text": "bzflush",
                            "type": "function",
                            "description": "Force a write of all buffered data Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$bz"
                        },
                        {
                            "text": "bzclose",
                            "type": "function",
                            "description": "Close a bzip2 file Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$bz"
                        },
                        {
                            "text": "bzerrno",
                            "type": "function",
                            "description": "Returns a bzip2 error number Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$bz"
                        },
                        {
                            "text": "bzerrstr",
                            "type": "function",
                            "description": "Returns a bzip2 error string Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$bz"
                        },
                        {
                            "text": "bzerror",
                            "type": "function",
                            "description": "Returns the bzip2 error number and error string in an array Since PHP 4.0.4 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$bz"
                        },
                        {
                            "text": "bzcompress",
                            "type": "function",
                            "description": "Compress a string into bzip2 encoded data Since PHP 4.0.4 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$source $blocksize $workfactor"
                        },
                        {
                            "text": "bzdecompress",
                            "type": "function",
                            "description": "Decompresses bzip2 encoded data Since PHP 4.0.4 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$source $small"
                        },
                        {
                            "text": "jdtogregorian",
                            "type": "function",
                            "description": "Start of calendar v.",
                            "rightLabel": "$julianday"
                        },
                        {
                            "text": "gregoriantojd",
                            "type": "function",
                            "description": "Converts a Gregorian date to Julian Day Count Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$month $day $year"
                        },
                        {
                            "text": "jdtojulian",
                            "type": "function",
                            "description": "Converts a Julian Day Count to a Julian Calendar Date Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$julianday"
                        },
                        {
                            "text": "juliantojd",
                            "type": "function",
                            "description": "Converts a Julian Calendar date to Julian Day Count Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$month $day $year"
                        },
                        {
                            "text": "jdtojewish",
                            "type": "function",
                            "description": "Converts a Julian day count to a Jewish calendar date Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$juliandaycount $hebrew $fl"
                        },
                        {
                            "text": "jewishtojd",
                            "type": "function",
                            "description": "Converts a date in the Jewish Calendar to Julian Day Count Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$month $day $year"
                        },
                        {
                            "text": "jdtofrench",
                            "type": "function",
                            "description": "Converts a Julian Day Count to the French Republican Calendar Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$juliandaycount"
                        },
                        {
                            "text": "frenchtojd",
                            "type": "function",
                            "description": "Converts a date from the French Republican Calendar to a Julian Day Count Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$month $day $year"
                        },
                        {
                            "text": "jddayofweek",
                            "type": "function",
                            "description": "Returns the day of the week Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$julianday $mode"
                        },
                        {
                            "text": "jdmonthname",
                            "type": "function",
                            "description": "Returns a month name Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$julianday $mode"
                        },
                        {
                            "text": "easter_date",
                            "type": "function",
                            "description": "Get Unix timestamp for midnight on Easter of a given year Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$year"
                        },
                        {
                            "text": "easter_days",
                            "type": "function",
                            "description": "Get number of days after March 21 on which Easter falls for a given year Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$year $method"
                        },
                        {
                            "text": "unixtojd",
                            "type": "function",
                            "description": "Convert Unix timestamp to Julian Day Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$timestamp"
                        },
                        {
                            "text": "jdtounix",
                            "type": "function",
                            "description": "Convert Julian Day to Unix timestamp Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$jday"
                        },
                        {
                            "text": "cal_to_jd",
                            "type": "function",
                            "description": "Converts from a supported calendar to Julian Day Count Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $month $day $year"
                        },
                        {
                            "text": "cal_from_jd",
                            "type": "function",
                            "description": "Converts from Julian Day Count to a supported calendar Since PHP 4.1.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$jd $calendar"
                        },
                        {
                            "text": "cal_days_in_month",
                            "type": "function",
                            "description": "Return the number of days in a month for a given year and calendar Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $month $year"
                        },
                        {
                            "text": "cal_info",
                            "type": "function",
                            "description": "Returns information about a particular calendar Since PHP 4.1.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "zend_version",
                            "type": "function",
                            "description": "Start of Core v.5.3.6-13ubuntu3.2"
                        },
                        {
                            "text": "func_num_args",
                            "type": "function",
                            "description": "Returns the number of arguments passed to the function Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "func_get_arg",
                            "type": "function",
                            "description": "Return an item from the argument list Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$arg_num"
                        },
                        {
                            "text": "func_get_args",
                            "type": "function",
                            "description": "Returns an array comprising a function's argument list Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "strlen",
                            "type": "function",
                            "description": "Get string length Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "strcmp",
                            "type": "function",
                            "description": "Binary safe string comparison Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2"
                        },
                        {
                            "text": "strncmp",
                            "type": "function",
                            "description": "Binary safe string comparison of the first n characters Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2 $len"
                        },
                        {
                            "text": "strcasecmp",
                            "type": "function",
                            "description": "Binary safe case-insensitive string comparison Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2"
                        },
                        {
                            "text": "strncasecmp",
                            "type": "function",
                            "description": "Binary safe case-insensitive string comparison of the first n characters Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2 $len"
                        },
                        {
                            "text": "each",
                            "type": "function",
                            "description": "Return the current key and value pair from an array and advance the array cursor Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "error_reporting",
                            "type": "function",
                            "description": "Sets which PHP errors are reported Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$level"
                        },
                        {
                            "text": "define",
                            "type": "function",
                            "description": "Defines a named constant Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $value $case_insensitive"
                        },
                        {
                            "text": "defined",
                            "type": "function",
                            "description": "Checks whether a given named constant exists Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "get_class",
                            "type": "function",
                            "description": "Returns the name of the class of an object Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "get_called_class",
                            "type": "function",
                            "description": "the \"Late Static Binding\" class name Since PHP 5.3.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "get_parent_class",
                            "type": "function",
                            "description": "Retrieves the parent class name for object or class Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "method_exists",
                            "type": "function",
                            "description": "Checks if the class method exists Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$object $method_name"
                        },
                        {
                            "text": "property_exists",
                            "type": "function",
                            "description": "Checks if the object or class has a property Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$class $property"
                        },
                        {
                            "text": "trait_exists",
                            "type": "function",
                            "description": "Checks if the trait exists Since PHP 5.4.0",
                            "leftLabel": "boolean",
                            "rightLabel": "$traitname $autoload"
                        },
                        {
                            "text": "class_exists",
                            "type": "function",
                            "description": "Checks if the class has been defined Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$class_name $autoload"
                        },
                        {
                            "text": "interface_exists",
                            "type": "function",
                            "description": "Checks if the interface has been defined Since PHP 5.0.2",
                            "leftLabel": "bool",
                            "rightLabel": "$interface_name $autoload"
                        },
                        {
                            "text": "function_exists",
                            "type": "function",
                            "description": "Return true if the given function has been defined Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$function_name"
                        },
                        {
                            "text": "class_alias",
                            "type": "function",
                            "description": "Creates an alias for a class Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$original $alias $autoload"
                        },
                        {
                            "text": "get_included_files",
                            "type": "function",
                            "description": "Returns an array with the names of included or required files Since PHP 4.0 5.0",
                            "leftLabel": "string[]"
                        },
                        {
                            "text": "get_required_files",
                            "type": "function",
                            "description": "Alias of get_included_files Since PHP 4.0 5.0",
                            "leftLabel": "string[]"
                        },
                        {
                            "text": "is_subclass_of",
                            "type": "function",
                            "description": "Checks if the object has this class as one of its parents Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$object $class_name $allow_string"
                        },
                        {
                            "text": "is_a",
                            "type": "function",
                            "description": "Checks if the object is of this class or has this class as one of its parents Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$object $class_name $allow_string"
                        },
                        {
                            "text": "get_class_vars",
                            "type": "function",
                            "description": "Get the default properties of the class Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$class_name"
                        },
                        {
                            "text": "get_object_vars",
                            "type": "function",
                            "description": "Gets the properties of the given object Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "get_class_methods",
                            "type": "function",
                            "description": "Gets the class methods' names Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$class_name"
                        },
                        {
                            "text": "trigger_error",
                            "type": "function",
                            "description": "Generates a user-level error\/warning\/notice message Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$error_msg $error_type"
                        },
                        {
                            "text": "user_error",
                            "type": "function",
                            "description": "Alias of trigger_error Since PHP 4.0 5.0",
                            "rightLabel": "$message $error_type"
                        },
                        {
                            "text": "set_error_handler",
                            "type": "function",
                            "description": "Sets a user-defined error handler function Since PHP 4.0.4 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$error_handler $error_types"
                        },
                        {
                            "text": "restore_error_handler",
                            "type": "function",
                            "description": "Restores the previous error handler function Since PHP 4.0.4 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "set_exception_handler",
                            "type": "function",
                            "description": "Sets a user-defined exception handler function Since PHP 5.0",
                            "leftLabel": "callback",
                            "rightLabel": "$exception_handler"
                        },
                        {
                            "text": "restore_exception_handler",
                            "type": "function",
                            "description": "Restores the previously defined exception handler function Since PHP 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "get_declared_classes",
                            "type": "function",
                            "description": "Returns an array with the name of the defined classes Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "get_declared_interfaces",
                            "type": "function",
                            "description": "Returns an array of all declared interfaces Since PHP 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "get_declared_traits",
                            "type": "function",
                            "description": "Returns an array of all declared traits Since PHP 5.4.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "get_defined_functions",
                            "type": "function",
                            "description": "Returns an array of all defined functions Since PHP 4.0.4 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "get_defined_vars",
                            "type": "function",
                            "description": "Returns an array of all defined variables Since PHP 4.0.4 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "create_function",
                            "type": "function",
                            "description": "Create an anonymous (lambda-style) function Since PHP 4.0.1 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$args $code"
                        },
                        {
                            "text": "get_resource_type",
                            "type": "function",
                            "description": "Returns the resource type Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "get_loaded_extensions",
                            "type": "function",
                            "description": "Returns an array with the names of all modules compiled and loaded Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$zend_extensions"
                        },
                        {
                            "text": "extension_loaded",
                            "type": "function",
                            "description": "Find out whether an extension is loaded Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "get_extension_funcs",
                            "type": "function",
                            "description": "Returns an array with the names of the functions of a module Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$module_name"
                        },
                        {
                            "text": "get_defined_constants",
                            "type": "function",
                            "description": "Returns an associative array with the names of all the constants and their values Since PHP 4.1.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$categorize"
                        },
                        {
                            "text": "debug_backtrace",
                            "type": "function",
                            "description": "Generates a backtrace Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$options $limit"
                        },
                        {
                            "text": "error_clear_last",
                            "type": "function",
                            "description": "Clear the most recent error Since PHP 7.0"
                        },
                        {
                            "text": "debug_print_backtrace",
                            "type": "function",
                            "description": "Prints a backtrace Since PHP 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$options $limit"
                        },
                        {
                            "text": "gc_collect_cycles",
                            "type": "function",
                            "description": "Forces collection of any existing garbage cycles Since PHP 5.3.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "gc_enabled",
                            "type": "function",
                            "description": "Returns status of the circular reference collector Since PHP 5.3.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "gc_enable",
                            "type": "function",
                            "description": "Activates the circular reference collector Since PHP 5.3.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "gc_disable",
                            "type": "function",
                            "description": "Deactivates the circular reference collector Since PHP 5.3.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "random_bytes",
                            "type": "function",
                            "description": "Generates cryptographically secure pseudo-random bytes Since PHP 7.0",
                            "leftLabel": "string",
                            "rightLabel": "$length"
                        },
                        {
                            "text": "random_int",
                            "type": "function",
                            "description": "Generates cryptographically secure pseudo-random integers Since PHP 7.0",
                            "leftLabel": "int",
                            "rightLabel": "$min $max"
                        },
                        {
                            "text": "ctype_alnum",
                            "type": "function",
                            "description": "Check for alphanumeric character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_alpha",
                            "type": "function",
                            "description": "Check for alphabetic character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_cntrl",
                            "type": "function",
                            "description": "Check for control character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_digit",
                            "type": "function",
                            "description": "Check for numeric character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_lower",
                            "type": "function",
                            "description": "Check for lowercase character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_graph",
                            "type": "function",
                            "description": "Check for any printable character(s) except space Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_print",
                            "type": "function",
                            "description": "Check for printable character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_punct",
                            "type": "function",
                            "description": "Check for any printable character which is not whitespace or an Since PHP 4.0.4 5.0\nalphanumeric character",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_space",
                            "type": "function",
                            "description": "Check for whitespace character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_upper",
                            "type": "function",
                            "description": "Check for uppercase character(s) Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ctype_xdigit",
                            "type": "function",
                            "description": "Check for character(s) representing a hexadecimal digit Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "cubrid_connect",
                            "type": "function",
                            "description": "Start of cubrid v.1.1",
                            "rightLabel": "$host $port $dbname $userid $passwd $new_link"
                        },
                        {
                            "text": "cubrid_connect_with_url",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nEstablish the environment for connecting to CUBRID server.",
                            "leftLabel": "resource",
                            "rightLabel": "$conn_url $userid $passwd $new_link"
                        },
                        {
                            "text": "cubrid_pconnect",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nOpen a persistent connection to a CUBRID server",
                            "leftLabel": "resource",
                            "rightLabel": "$host $port $dbname $userid $passwd"
                        },
                        {
                            "text": "cubrid_pconnect_with_url",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nOpen a persistent connection to CUBRID server",
                            "leftLabel": "resource",
                            "rightLabel": "$conn_url $userid $passwd"
                        },
                        {
                            "text": "cubrid_close",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nClose CUBRID connection. Same as cubrid_disconnect().",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_disconnect",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nClose CUBRID connection. Same as cubrid_close().",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_query",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nSend a CUBRID query",
                            "leftLabel": "resource",
                            "rightLabel": "$query $conn_identifier"
                        },
                        {
                            "text": "cubrid_execute",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nExecute a prepared SQL statement",
                            "leftLabel": "resource",
                            "rightLabel": "$conn_identifier $sql $option"
                        },
                        {
                            "text": "cubrid_execute",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nExecute a prepared SQL statement",
                            "leftLabel": "bool",
                            "rightLabel": "$request_identifier $option"
                        },
                        {
                            "text": "cubrid_bind",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nBind variables to a prepared statement as parameters",
                            "leftLabel": "bool",
                            "rightLabel": "$req_identifier $bind_index $bind_value $bind_value_type"
                        },
                        {
                            "text": "cubrid_close_prepare",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nClose the request handle. Same as cubrid_close_request().",
                            "leftLabel": "bool",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_close_request",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nClose the request handle. Same as cubrid_close_prepare().",
                            "leftLabel": "bool",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_col_get",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet contents of collection type column using OID",
                            "leftLabel": "array",
                            "rightLabel": "$conn_identifier $oid $attr_name"
                        },
                        {
                            "text": "cubrid_col_size",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet the number of elements in collection type column using OID",
                            "leftLabel": "int",
                            "rightLabel": "$conn_identifier $oid $attr_name"
                        },
                        {
                            "text": "cubrid_unbuffered_query",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nPerform a query without fetching the results into memory",
                            "leftLabel": "resource",
                            "rightLabel": "$query $conn_identifier"
                        },
                        {
                            "text": "cubrid_list_dbs",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn an array with the list of all existing CUBRID databases",
                            "leftLabel": "array",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_error",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nGet the error message. Same as cubrid_error_msg();",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "cubrid_error_msg",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet last error message for the most recent function call.",
                            "leftLabel": "string"
                        },
                        {
                            "text": "cubrid_errno",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nReturns the numerical value of the error message from previous\nCUBRID operation. Same as cubrid_error_code();",
                            "leftLabel": "int",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_error_code",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet error code for the most recent function call.",
                            "leftLabel": "int"
                        },
                        {
                            "text": "cubrid_affected_rows",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the number of rows affected by the last SQL statement",
                            "leftLabel": "int",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_insert_id",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the ID generated for the latest updated AUTO_INCREMENT column",
                            "leftLabel": "string",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_result",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the value of a specific field in a specific row",
                            "leftLabel": "string",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "cubrid_num_rows",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet number of rows in result",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "cubrid_num_cols",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet number of columns in the result set",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "cubrid_num_fields",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet number of fields in the result set",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "cubrid_fetch",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nFetch the next row from a result set",
                            "leftLabel": "mixed",
                            "rightLabel": "$result $type"
                        },
                        {
                            "text": "cubrid_fetch_row",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn a numerical array with the values of the current row",
                            "leftLabel": "array",
                            "rightLabel": "$result $type"
                        },
                        {
                            "text": "cubrid_fetch_array",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nFetch a result row as an associative array, a numeric array, or both",
                            "leftLabel": "array",
                            "rightLabel": "$result $type"
                        },
                        {
                            "text": "cubrid_fetch_assoc",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the associative array that corresponds to the fetched row",
                            "leftLabel": "array",
                            "rightLabel": "$result $type"
                        },
                        {
                            "text": "cubrid_fetch_object",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nFetch the next row and returns it as an object",
                            "leftLabel": "object",
                            "rightLabel": "$result $class_name $params $type"
                        },
                        {
                            "text": "cubrid_data_seek",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nMove the internal row pointer of the CUBRID result",
                            "leftLabel": "bool",
                            "rightLabel": "$result $row_number"
                        },
                        {
                            "text": "cubrid_fetch_lengths",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn an array with the lengths of the values of\neach field from the current row",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "cubrid_fetch_field",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nGet column information from a result and return as an object",
                            "leftLabel": "object",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_column_names",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet the column names in result",
                            "leftLabel": "array",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_column_types",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet column types in result",
                            "leftLabel": "array",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_field_seek",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nMove the result set cursor to a specified field offset",
                            "leftLabel": "bool",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_free_result",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nFree the memory occupied by the result data",
                            "leftLabel": "bool",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_field_name",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the name of the specified field index",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_field_table",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the name of the table of the specified field",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_field_len",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturns the length of the specified field",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_field_type",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the type of the column corresponding to the given field offset",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_field_flags",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn a string with the flags of the given field offset",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "cubrid_real_escape_string",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nEscapes special characters in a string for use in a SQL statement",
                            "leftLabel": "string",
                            "rightLabel": "$unescaped_string $conn_identifier"
                        },
                        {
                            "text": "cubrid_client_encoding",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturns the current CUBRID connection charset",
                            "leftLabel": "string",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_ping",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nPing a server connection or reconnect if there is no connection",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_get_client_info",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the client library version",
                            "leftLabel": "string"
                        },
                        {
                            "text": "cubrid_get_server_info",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the CUBRID server version",
                            "leftLabel": "string",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_get_db_parameter",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturns the CUBRID database parameters",
                            "leftLabel": "array",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_get_autocommit",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.0)\nGet auto-commit mode of the connection",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_get_charset",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nReturn the current CUBRID connection charset",
                            "leftLabel": "string",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_set_autocommit",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.0)\nGet auto-commit mode of the connection",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $mode"
                        },
                        {
                            "text": "cubrid_db_name",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nGet db name from results of cubrid_list_dbs",
                            "leftLabel": "string",
                            "rightLabel": "$result $index"
                        },
                        {
                            "text": "cubrid_db_parameter",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nGet result data",
                            "leftLabel": "array",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_set_db_parameter",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.0)\nSets the CUBRID database parameters",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $param_type $param_value"
                        },
                        {
                            "text": "cubrid_get_query_timeout",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nGet the query timeout value of the request",
                            "leftLabel": "int",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_set_query_timeout",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nGet the query timeout value of the request",
                            "leftLabel": "bool",
                            "rightLabel": "$req_identifier $timeout"
                        },
                        {
                            "text": "cubrid_get_class_name",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet the class name using OID",
                            "leftLabel": "string",
                            "rightLabel": "$conn_identifier $oid"
                        },
                        {
                            "text": "cubrid_get",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet a column using OID",
                            "leftLabel": "mixed",
                            "rightLabel": "$conn_identifier $oid $attr"
                        },
                        {
                            "text": "cubrid_is_instance",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nCheck whether the instance pointed by OID exists",
                            "leftLabel": "int",
                            "rightLabel": "$conn_identifier $oid"
                        },
                        {
                            "text": "cubrid_commit",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nCommit a transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_rollback",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nRoll back a transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier"
                        },
                        {
                            "text": "cubrid_current_oid",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet OID of the current cursor location",
                            "leftLabel": "string",
                            "rightLabel": "$req_identifier"
                        },
                        {
                            "text": "cubrid_drop",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nDelete an instance using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid"
                        },
                        {
                            "text": "cubrid_error_code_facility",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet the facility code of error",
                            "leftLabel": "int"
                        },
                        {
                            "text": "cubrid_lob_close",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nClose BLOB\/CLOB data",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_identifier_array"
                        },
                        {
                            "text": "cubrid_lob_export",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nExport BLOB\/CLOB data to file",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $lob_identifier $path_name"
                        },
                        {
                            "text": "cubrid_lob_get",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\ncubrid_lob_get() is used to get BLOB\/CLOB meta info from\nCUBRID database. CUBRID gets BLOB\/CLOB by executing the SQL statement,\nand returns all LOBs as a resource array. Be sure that the SQL\nretrieves only one column and its data type is BLOB or CLOB.",
                            "leftLabel": "array",
                            "rightLabel": "$conn_identifier $sql"
                        },
                        {
                            "text": "cubrid_lob_send",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nRead BLOB\/CLOB data and send straight to browser",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $lob_identifier"
                        },
                        {
                            "text": "cubrid_lob_size",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.1)\nGet BLOB\/CLOB data size",
                            "leftLabel": "string",
                            "rightLabel": "$lob_identifier"
                        },
                        {
                            "text": "cubrid_lob2_bind",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nBind a lob object or a string as a lob object to a\nprepared statement as parameters.",
                            "leftLabel": "bool",
                            "rightLabel": "$req_identifier $bind_index $bind_value $bind_value_type"
                        },
                        {
                            "text": "cubrid_lob2_close",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nClose BLOB\/CLOB data",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_identifier"
                        },
                        {
                            "text": "cubrid_lob2_export",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nExport the lob object to a file.",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_identifier $file_name"
                        },
                        {
                            "text": "cubrid_lob2_import",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nImport the lob object from a file.",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_identifier $file_name"
                        },
                        {
                            "text": "cubrid_lob2_new",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nCreate a lob object.",
                            "leftLabel": "resource",
                            "rightLabel": "$conn_identifier $type"
                        },
                        {
                            "text": "cubrid_lob2_read",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nRead from BLOB\/CLOB data.",
                            "leftLabel": "string",
                            "rightLabel": "$lob_identifier $len"
                        },
                        {
                            "text": "cubrid_lob2_seek64",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nMove the cursor of a lob object.",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_identifier $offset $origin"
                        },
                        {
                            "text": "cubrid_lob2_seek",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nMove the cursor of a lob object.",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_identifier $offset $origin"
                        },
                        {
                            "text": "cubrid_lob2_size64",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nGet a lob object's size.",
                            "leftLabel": "string",
                            "rightLabel": "$lob_identifier"
                        },
                        {
                            "text": "cubrid_lob2_size",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nGet a lob object's size.",
                            "leftLabel": "int",
                            "rightLabel": "$lob_identifier"
                        },
                        {
                            "text": "cubrid_lob2_tell64",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nTell the cursor position of the LOB object.",
                            "leftLabel": "string",
                            "rightLabel": "$lob_identifier"
                        },
                        {
                            "text": "cubrid_lob2_tell",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.1)\nTell the cursor position of the LOB object.",
                            "leftLabel": "int",
                            "rightLabel": "$lob_identifier"
                        },
                        {
                            "text": "cubrid_lock_read",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nSet a read lock on the given OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid"
                        },
                        {
                            "text": "cubrid_lock_write",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nSet a write lock on the given OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid"
                        },
                        {
                            "text": "cubrid_move_cursor",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nMove the cursor in the result",
                            "leftLabel": "int",
                            "rightLabel": "$req_identifier $offset $origin"
                        },
                        {
                            "text": "cubrid_next_result",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.4.0)\nGet result of next query when executing multiple SQL statements",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "cubrid_prepare",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nPrepare an SQL statement for execution",
                            "leftLabel": "resource",
                            "rightLabel": "$conn_identifier $prepare_stmt $option"
                        },
                        {
                            "text": "cubrid_put",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nUpdate a column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr $value"
                        },
                        {
                            "text": "cubrid_schema",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet the requested schema information",
                            "leftLabel": "array",
                            "rightLabel": "$conn_identifier $schema_type $class_name $attr_name"
                        },
                        {
                            "text": "cubrid_seq_drop",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nDelete an element from sequence type column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr_name $index"
                        },
                        {
                            "text": "cubrid_seq_insert",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nInsert an element to a sequence type column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr_name $index $seq_element"
                        },
                        {
                            "text": "cubrid_seq_put",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nUpdate the element value of sequence type column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr_name $index $seq_element"
                        },
                        {
                            "text": "cubrid_seq_add",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nInsert a single element to set type column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr_name $seq_element"
                        },
                        {
                            "text": "cubrid_set_add",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nInsert a single element to set type column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr_name $set_element"
                        },
                        {
                            "text": "cubrid_set_drop",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nDelete an element from set type column using OID",
                            "leftLabel": "bool",
                            "rightLabel": "$conn_identifier $oid $attr_name $set_element"
                        },
                        {
                            "text": "cubrid_version",
                            "type": "function",
                            "description": "(PHP 5, CUBRID >= 8.3.0)\nGet the CUBRID PHP module's version",
                            "leftLabel": "string"
                        },
                        {
                            "text": "curl_init",
                            "type": "function",
                            "description": "Initialize a cURL session Since PHP 4.0.2 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$url"
                        },
                        {
                            "text": "curl_copy_handle",
                            "type": "function",
                            "description": "Copy a cURL handle along with all of its preferences Since PHP 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_version",
                            "type": "function",
                            "description": "Gets cURL version information Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$age"
                        },
                        {
                            "text": "curl_setopt",
                            "type": "function",
                            "description": "Set an option for a cURL transfer Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ch $option $value"
                        },
                        {
                            "text": "curl_setopt_array",
                            "type": "function",
                            "description": "Set multiple options for a cURL transfer Since PHP 5.1.3",
                            "leftLabel": "bool",
                            "rightLabel": "$ch array $options"
                        },
                        {
                            "text": "curl_share_close",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nClose a cURL share handle Since PHP 5.5.0",
                            "leftLabel": "void",
                            "rightLabel": "$sh"
                        },
                        {
                            "text": "curl_share_init",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nInitialize a cURL share handle Since PHP 5.5.0",
                            "leftLabel": "resource"
                        },
                        {
                            "text": "curl_share_setopt",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nSet an option for a cURL share handle. Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$sh $option $value"
                        },
                        {
                            "text": "curl_strerror",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nReturn string describing the given error code Since PHP 5.5.0",
                            "leftLabel": "string | NULL",
                            "rightLabel": "$errornum"
                        },
                        {
                            "text": "curl_unescape",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nDecodes the given URL encoded string Since PHP 5.5.0",
                            "leftLabel": "string | bool",
                            "rightLabel": "$ch $str"
                        },
                        {
                            "text": "curl_exec",
                            "type": "function",
                            "description": "Perform a cURL session Since PHP 4.0.2 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_getinfo",
                            "type": "function",
                            "description": "Get information regarding a specific transfer Since PHP 4.0.4 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$ch $opt"
                        },
                        {
                            "text": "curl_error",
                            "type": "function",
                            "description": "Return a string containing the last error for the current session Since PHP 4.0.3 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_errno",
                            "type": "function",
                            "description": "Return the last error number Since PHP 4.0.3 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_escape",
                            "type": "function",
                            "description": "URL encodes the given string Since PHP 5.5.0",
                            "leftLabel": "string | boolean",
                            "rightLabel": "$ch $str"
                        },
                        {
                            "text": "curl_file_create",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0) \nCreate a CURLFile object Since PHP 5.5.0",
                            "leftLabel": "CURLFile",
                            "rightLabel": "$filename $mimetype $postname"
                        },
                        {
                            "text": "curl_close",
                            "type": "function",
                            "description": "Close a cURL session Since PHP 4.0.2 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_multi_init",
                            "type": "function",
                            "description": "Returns a new cURL multi handle Since PHP 5.0",
                            "leftLabel": "resource"
                        },
                        {
                            "text": "curl_multi_add_handle",
                            "type": "function",
                            "description": "Add a normal cURL handle to a cURL multi handle Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$mh $ch"
                        },
                        {
                            "text": "curl_multi_remove_handle",
                            "type": "function",
                            "description": "Remove a multi handle from a set of cURL handles Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$mh $ch"
                        },
                        {
                            "text": "curl_multi_select",
                            "type": "function",
                            "description": "Wait for activity on any curl_multi connection Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$mh $timeout"
                        },
                        {
                            "text": "curl_multi_setopt",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nSet an option for the cURL multi handle Since PHP 5.5.0",
                            "leftLabel": "boolean",
                            "rightLabel": "$mh $option $value"
                        },
                        {
                            "text": "curl_multi_strerror",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nReturn string describing error code Since PHP 5.5.0",
                            "leftLabel": "string | NULL",
                            "rightLabel": "$errornum"
                        },
                        {
                            "text": "curl_pause",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nPause and unpause a connection Since PHP 5.5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ch $bitmask"
                        },
                        {
                            "text": "curl_reset",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nReset all options of a libcurl session handle Since PHP 5.5.0",
                            "leftLabel": "void",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_multi_exec",
                            "type": "function",
                            "description": "Run the sub-connections of the current cURL handle Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$mh $still_running"
                        },
                        {
                            "text": "curl_multi_getcontent",
                            "type": "function",
                            "description": "Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "curl_multi_info_read",
                            "type": "function",
                            "description": "Get information about the current transfers Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$mh $msgs_in_queue"
                        },
                        {
                            "text": "curl_multi_close",
                            "type": "function",
                            "description": "Close a set of cURL handles Since PHP 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$mh"
                        },
                        {
                            "text": "curl_multi_errno",
                            "type": "function",
                            "description": " Since PHP 7.1",
                            "leftLabel": "int",
                            "rightLabel": "$mh"
                        },
                        {
                            "text": "curl_share_errno",
                            "type": "function",
                            "description": " Since PHP 7.1",
                            "leftLabel": "int",
                            "rightLabel": "resource $rh"
                        },
                        {
                            "text": "curl_share_strerror",
                            "type": "function",
                            "description": " Since PHP 7.1",
                            "leftLabel": "int",
                            "rightLabel": "$errno"
                        },
                        {
                            "text": "strtotime",
                            "type": "function",
                            "description": "Start of date v.5.3.2-0.dotdeb.1",
                            "rightLabel": "$time $now"
                        },
                        {
                            "text": "date",
                            "type": "function",
                            "description": "Format a local time\/date Since PHP 4.0 5.0",
                            "leftLabel": "string | false",
                            "rightLabel": "$format $timestamp"
                        },
                        {
                            "text": "idate",
                            "type": "function",
                            "description": "Format a local time\/date as integer Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$format $timestamp"
                        },
                        {
                            "text": "gmdate",
                            "type": "function",
                            "description": "Format a GMT\/UTC date\/time Since PHP 4.0 5.0",
                            "leftLabel": "string | false",
                            "rightLabel": "$format $timestamp"
                        },
                        {
                            "text": "mktime",
                            "type": "function",
                            "description": "Get Unix timestamp for a date Since PHP 4.0 5.0",
                            "leftLabel": "int | false",
                            "rightLabel": "$hour $minute $second $month $day $year $is_dst"
                        },
                        {
                            "text": "gmmktime",
                            "type": "function",
                            "description": "Get Unix timestamp for a GMT date Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$hour $minute $second $month $day $year $is_dst"
                        },
                        {
                            "text": "checkdate",
                            "type": "function",
                            "description": "Validate a Gregorian date Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$month $day $year"
                        },
                        {
                            "text": "strftime",
                            "type": "function",
                            "description": "Format a local time\/date according to locale settings\nThe following characters are recognized in the\nformat parameter string\n\n\nformat\nDescription\nExample returned values\n\n\nDay\n\n\n%a\nAn abbreviated textual representation of the day\nSun through Sat\n\n\n%A\nA full textual representation of the day\nSunday through Saturday\n\n\n%d\nTwo-digit day of the month (with leading zeros)\n01 to 31\n\n\n%e\nDay of the month, with a space preceding single digits\n 1 to 31\n\n\n%j\nDay of the year, 3 digits with leading zeros\n001 to 366\n\n\n%u\nISO-8601 numeric representation of the day of the week\n1 (for Monday) though 7 (for Sunday)\n\n\n%w\nNumeric representation of the day of the week\n0 (for Sunday) through 6 (for Saturday)\n\n\nWeek\n\n\n%U\nWeek number of the given year, starting with the first\nSunday as the first week\n13 (for the 13th full week of the year)\n\n\n%V\nISO-8601:1988 week number of the given year, starting with\nthe first week of the year with at least 4 weekdays, with Monday\nbeing the start of the week\n01 through 53 (where 53\naccounts for an overlapping week)\n\n\n%W\nA numeric representation of the week of the year, starting\nwith the first Monday as the first week\n46 (for the 46th week of the year beginning\nwith a Monday)\n\n\nMonth\n\n\n%b\nAbbreviated month name, based on the locale\nJan through Dec\n\n\n%B\nFull month name, based on the locale\nJanuary through December\n\n\n%h\nAbbreviated month name, based on the locale (an alias of %b)\nJan through Dec\n\n\n%m\nTwo digit representation of the month\n01 (for January) through 12 (for December)\n\n\nYear\n\n\n%C\nTwo digit representation of the century (year divided by 100, truncated to an integer)\n19 for the 20th Century\n\n\n%g\nTwo digit representation of the year going by ISO-8601:1988 standards (see %V)\nExample: 09 for the week of January 6, 2009\n\n\n%G\nThe full four-digit version of %g\nExample: 2008 for the week of January 3, 2009\n\n\n%y\nTwo digit representation of the year\nExample: 09 for 2009, 79 for 1979\n\n\n%Y\nFour digit representation for the year\nExample: 2038\n\n\nTime\n\n\n%H\nTwo digit representation of the hour in 24-hour format\n00 through 23\n\n\n%I\nTwo digit representation of the hour in 12-hour format\n01 through 12\n\n\n%l (lower-case 'L')\nHour in 12-hour format, with a space preceeding single digits\n 1 through 12\n\n\n%M\nTwo digit representation of the minute\n00 through 59\n\n\n%p\nUPPER-CASE 'AM' or 'PM' based on the given time\nExample: AM for 00:31, PM for 22:23\n\n\n%P\nlower-case 'am' or 'pm' based on the given time\nExample: am for 00:31, pm for 22:23\n\n\n%r\nSame as \"%I:%M:%S %p\"\nExample: 09:34:17 PM for 21:34:17\n\n\n%R\nSame as \"%H:%M\"\nExample: 00:35 for 12:35 AM, 16:44 for 4:44 PM\n\n\n%S\nTwo digit representation of the second\n00 through 59\n\n\n%T\nSame as \"%H:%M:%S\"\nExample: 21:34:17 for 09:34:17 PM\n\n\n%X\nPreferred time representation based on locale, without the date\nExample: 03:59:16 or 15:59:16\n\n\n%z\nEither the time zone offset from UTC or the abbreviation (depends\non operating system)\nExample: -0500 or EST for Eastern Time\n\n\n%Z\nThe time zone offset\/abbreviation option NOT given by %z (depends\non operating system)\nExample: -0500 or EST for Eastern Time\n\n\nTime and Date Stamps\n\n\n%c\nPreferred date and time stamp based on local\nExample: Tue Feb 5 00:45:10 2009 for\nFebruary 4, 2009 at 12:45:10 AM\n\n\n%D\nSame as \"%m\/%d\/%y\"\nExample: 02\/05\/09 for February 5, 2009\n\n\n%F\nSame as \"%Y-%m-%d\" (commonly used in database datestamps)\nExample: 2009-02-05 for February 5, 2009\n\n\n%s\nUnix Epoch Time timestamp (same as the time\nfunction)\nExample: 305815200 for September 10, 1979 08:40:00 AM\n\n\n%x\nPreferred date representation based on locale, without the time\nExample: 02\/05\/09 for February 5, 2009\n\n\nMiscellaneous\n\n\n%n\nA newline character (\"\\n\")\n---\n\n\n%t\nA Tab character (\"\\t\")\n---\n\n\n%%\nA literal percentage character (\"%\")\n---\n\n\n\n\nMaximum length of this parameter is 1023 characters. Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$format $timestamp"
                        },
                        {
                            "text": "gmstrftime",
                            "type": "function",
                            "description": "Format a GMT\/UTC time\/date according to locale settings Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$format $timestamp"
                        },
                        {
                            "text": "time",
                            "type": "function",
                            "description": "Return current Unix timestamp Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "localtime",
                            "type": "function",
                            "description": "Get the local time Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$timestamp $is_associative"
                        },
                        {
                            "text": "getdate",
                            "type": "function",
                            "description": "Get date\/time information Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$timestamp"
                        },
                        {
                            "text": "date_create",
                            "type": "function",
                            "description": "Returns new DateTime object Since PHP 5.2.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$time DateTimeZone $timezone"
                        },
                        {
                            "text": "date_create_immutable",
                            "type": "function",
                            "description": "(PHP 5.5)\nAlias for DateTimeImmutable::__construct()\nReturns new DateTimeImmutable object",
                            "leftLabel": "DateTimeImmutable | false",
                            "rightLabel": "$time DateTimeZone $timezone"
                        },
                        {
                            "text": "date_create_from_format",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::createFromFormat} Since PHP 5.3.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$format $time $timezone"
                        },
                        {
                            "text": "date_parse",
                            "type": "function",
                            "description": "Returns associative array with detailed info about given date Since PHP 5.2.0",
                            "leftLabel": "array | false",
                            "rightLabel": "$date"
                        },
                        {
                            "text": "date_parse_from_format",
                            "type": "function",
                            "description": "Get info about given date Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$format $date"
                        },
                        {
                            "text": "date_get_last_errors",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::getLastErrors} Since PHP 5.3.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "date_format",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::format} Since PHP 5.2.0",
                            "leftLabel": "string | false",
                            "rightLabel": "$object $format"
                        },
                        {
                            "text": "date_modify",
                            "type": "function",
                            "description": "Alter the timestamp of a DateTime object by incrementing or decrementing\nin a format accepted by strtotime(). Since PHP 5.2.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $modify"
                        },
                        {
                            "text": "date_add",
                            "type": "function",
                            "description": "&Alias; DateTime::add Since PHP 5.3.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $interval"
                        },
                        {
                            "text": "date_sub",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::sub} Since PHP 5.3.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $interval"
                        },
                        {
                            "text": "date_timezone_get",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::getTimezone} Since PHP 5.2.0",
                            "leftLabel": "DateTimeZone | false",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "date_timezone_set",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::setTimezone} Since PHP 5.2.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $timezone"
                        },
                        {
                            "text": "date_offset_get",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::getOffset} Since PHP 5.2.0",
                            "leftLabel": "int | false",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "date_diff",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::diff} Since PHP 5.3.0",
                            "leftLabel": "DateInterval | false",
                            "rightLabel": "$object $object2 $absolute"
                        },
                        {
                            "text": "date_time_set",
                            "type": "function",
                            "description": "&Alias; DateTime::setTime Since PHP 5.2.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $hour $minute $second"
                        },
                        {
                            "text": "date_date_set",
                            "type": "function",
                            "description": "&Alias; DateTime::setDate Since PHP 5.2.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $year $month $day"
                        },
                        {
                            "text": "date_isodate_set",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::setISODate} Since PHP 5.2.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $year $week $day"
                        },
                        {
                            "text": "date_timestamp_set",
                            "type": "function",
                            "description": "&Alias; DateTime::setTimestamp Since PHP 5.3.0",
                            "leftLabel": "DateTime | false",
                            "rightLabel": "$object $unixtimestamp"
                        },
                        {
                            "text": "date_timestamp_get",
                            "type": "function",
                            "description": "Alias:\n{@see DateTime::getTimestamp} Since PHP 5.3.0",
                            "leftLabel": "int",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "timezone_open",
                            "type": "function",
                            "description": "Returns new DateTimeZone object Since PHP 5.1.0",
                            "leftLabel": "DateTimeZone | false",
                            "rightLabel": "$timezone"
                        },
                        {
                            "text": "timezone_name_get",
                            "type": "function",
                            "description": "Alias: {@see DateTimeZone::getName} Since PHP 5.1.0",
                            "leftLabel": "string",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "timezone_name_from_abbr",
                            "type": "function",
                            "description": "Returns the timezone name from abbreviation Since PHP 5.1.3",
                            "leftLabel": "string | false",
                            "rightLabel": "$abbr $gmtOffset $isdst"
                        },
                        {
                            "text": "timezone_offset_get",
                            "type": "function",
                            "description": "Alias:\n{@link DateTimeZone::getOffset} Since PHP 5.1.0",
                            "leftLabel": "int | boolean",
                            "rightLabel": "$object $datetime"
                        },
                        {
                            "text": "timezone_transitions_get",
                            "type": "function",
                            "description": "Alias:\n{@see DateTimeZone::getTransitions} Since PHP 5.2.0",
                            "leftLabel": "array | false",
                            "rightLabel": "$object $timestamp_begin $timestamp_end"
                        },
                        {
                            "text": "timezone_location_get",
                            "type": "function",
                            "description": "&Alias; {@see DateTimeZone::getLocation} Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "timezone_identifiers_list",
                            "type": "function",
                            "description": "Alias:\n{@see DateTimeZone::listIdentifiers()} Since PHP 5.1.0",
                            "leftLabel": "array | false",
                            "rightLabel": "$what $country"
                        },
                        {
                            "text": "timezone_abbreviations_list",
                            "type": "function",
                            "description": "Returns associative array containing dst, offset and the timezone name\nAlias:\n{@see DateTimeZone::listAbbreviations} Since PHP 5.2.0",
                            "leftLabel": "array | false"
                        },
                        {
                            "text": "timezone_version_get",
                            "type": "function",
                            "description": "Gets the version of the timezonedb Since PHP 5.3.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "date_interval_create_from_date_string",
                            "type": "function",
                            "description": "Alias:\n{@see DateInterval::createFromDateString} Since PHP 5.3.0",
                            "leftLabel": "DateInterval",
                            "rightLabel": "$time"
                        },
                        {
                            "text": "date_interval_format",
                            "type": "function",
                            "description": "&Alias; DateInterval::format Since PHP 5.3.0",
                            "leftLabel": "DateInterval",
                            "rightLabel": "$object $format"
                        },
                        {
                            "text": "date_default_timezone_set",
                            "type": "function",
                            "description": "Sets the default timezone used by all date\/time functions in a script Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$timezone_identifier"
                        },
                        {
                            "text": "date_default_timezone_get",
                            "type": "function",
                            "description": "Gets the default timezone used by all date\/time functions in a script Since PHP 5.1.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "date_sunrise",
                            "type": "function",
                            "description": "Returns time of sunrise for a given day and location Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$timestamp $format $latitude $longitude $zenith $gmt_offset"
                        },
                        {
                            "text": "date_sunset",
                            "type": "function",
                            "description": "Returns time of sunset for a given day and location Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$timestamp $format $latitude $longitude $zenith $gmt_offset"
                        },
                        {
                            "text": "date_sun_info",
                            "type": "function",
                            "description": "Returns an array with information about sunset\/sunrise and twilight begin\/end Since PHP 5.1.2",
                            "leftLabel": "array | false",
                            "rightLabel": "$time $latitude $longitude"
                        },
                        {
                            "text": "dba_open",
                            "type": "function",
                            "description": "Start of dba v.",
                            "rightLabel": "$path $mode $handler $_"
                        },
                        {
                            "text": "dba_popen",
                            "type": "function",
                            "description": "Open database persistently Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$path $mode $handler $_"
                        },
                        {
                            "text": "dba_close",
                            "type": "function",
                            "description": "Close a DBA database Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "dba_delete",
                            "type": "function",
                            "description": "Delete DBA entry specified by key Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $handle"
                        },
                        {
                            "text": "dba_exists",
                            "type": "function",
                            "description": "Check whether key exists Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $handle"
                        },
                        {
                            "text": "dba_fetch",
                            "type": "function",
                            "description": "Fetch data specified by key Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$key $handle"
                        },
                        {
                            "text": "dba_insert",
                            "type": "function",
                            "description": "Insert entry Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $value $handle"
                        },
                        {
                            "text": "dba_replace",
                            "type": "function",
                            "description": "Replace or insert entry Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $value $handle"
                        },
                        {
                            "text": "dba_firstkey",
                            "type": "function",
                            "description": "Fetch first key Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "dba_nextkey",
                            "type": "function",
                            "description": "Fetch next key Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "dba_optimize",
                            "type": "function",
                            "description": "Optimize database Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "dba_sync",
                            "type": "function",
                            "description": "Synchronize database Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "dba_handlers",
                            "type": "function",
                            "description": "List all the handlers available Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$full_info"
                        },
                        {
                            "text": "dba_list",
                            "type": "function",
                            "description": "List all open database files Since PHP 4.3.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "dba_key_split",
                            "type": "function",
                            "description": "Splits a key in string representation into array representation Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "dom_import_simplexml",
                            "type": "function",
                            "description": "Start of dom v.20031129",
                            "rightLabel": "SimpleXMLElement $node"
                        },
                        {
                            "text": "enchant_broker_init",
                            "type": "function",
                            "description": "Start of enchant v.1.1.0"
                        },
                        {
                            "text": "enchant_broker_free",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nFree the broker resource and its dictionnaries",
                            "leftLabel": "bool",
                            "rightLabel": "$broker"
                        },
                        {
                            "text": "enchant_broker_get_error",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nReturns the last error of the broker",
                            "leftLabel": "string",
                            "rightLabel": "$broker"
                        },
                        {
                            "text": "enchant_broker_set_dict_path",
                            "type": "function",
                            "rightLabel": "$broker $name $value"
                        },
                        {
                            "text": "enchant_broker_get_dict_path",
                            "type": "function",
                            "rightLabel": "$broker $name"
                        },
                        {
                            "text": "enchant_broker_list_dicts",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 1.0.1)\nReturns a list of available dictionaries",
                            "leftLabel": "mixed",
                            "rightLabel": "$broker"
                        },
                        {
                            "text": "enchant_broker_request_dict",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\ncreate a new dictionary using a tag",
                            "leftLabel": "resource",
                            "rightLabel": "$broker $tag"
                        },
                        {
                            "text": "enchant_broker_request_pwl_dict",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\ncreates a dictionary using a PWL file",
                            "leftLabel": "resource",
                            "rightLabel": "$broker $filename"
                        },
                        {
                            "text": "enchant_broker_free_dict",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nFree a dictionary resource",
                            "leftLabel": "bool",
                            "rightLabel": "$dict"
                        },
                        {
                            "text": "enchant_broker_dict_exists",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nWhether a dictionary exists or not. Using non-empty tag",
                            "leftLabel": "bool",
                            "rightLabel": "$broker $tag"
                        },
                        {
                            "text": "enchant_broker_set_ordering",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nDeclares a preference of dictionaries to use for the language",
                            "leftLabel": "bool",
                            "rightLabel": "$broker $tag $ordering"
                        },
                        {
                            "text": "enchant_broker_describe",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0)\nEnumerates the Enchant providers",
                            "leftLabel": "array",
                            "rightLabel": "$broker"
                        },
                        {
                            "text": "enchant_dict_check",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nCheck whether a word is correctly spelled or not",
                            "leftLabel": "bool",
                            "rightLabel": "$dict $word"
                        },
                        {
                            "text": "enchant_dict_suggest",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nWill return a list of values if any of those pre-conditions are not met",
                            "leftLabel": "array",
                            "rightLabel": "$dict $word"
                        },
                        {
                            "text": "enchant_dict_add_to_personal",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nadd a word to personal word list",
                            "leftLabel": "void",
                            "rightLabel": "$dict $word"
                        },
                        {
                            "text": "enchant_dict_add_to_session",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nadd 'word' to this spell-checking session",
                            "leftLabel": "void",
                            "rightLabel": "$dict $word"
                        },
                        {
                            "text": "enchant_dict_is_in_session",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nwhether or not 'word' exists in this spelling-session",
                            "leftLabel": "bool",
                            "rightLabel": "$dict $word"
                        },
                        {
                            "text": "enchant_dict_store_replacement",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nAdd a correction for a word",
                            "leftLabel": "void",
                            "rightLabel": "$dict $mis $cor"
                        },
                        {
                            "text": "enchant_dict_get_error",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nReturns the last error of the current spelling-session",
                            "leftLabel": "string",
                            "rightLabel": "$dict"
                        },
                        {
                            "text": "enchant_dict_describe",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )\nDescribes an individual dictionary",
                            "leftLabel": "mixed",
                            "rightLabel": "$dict"
                        },
                        {
                            "text": "enchant_dict_quick_check",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL enchant:0.2.0-1.0.1)\nCheck the word is correctly spelled and provide suggestions",
                            "leftLabel": "bool",
                            "rightLabel": "$dict $word array $suggestions"
                        },
                        {
                            "text": "ereg",
                            "type": "function",
                            "description": "Start of ereg v.",
                            "rightLabel": "$pattern $string array $regs"
                        },
                        {
                            "text": "ereg_replace",
                            "type": "function",
                            "description": "Replace regular expression Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$pattern $replacement $string"
                        },
                        {
                            "text": "eregi",
                            "type": "function",
                            "description": "Case insensitive regular expression match Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pattern $string array $regs"
                        },
                        {
                            "text": "eregi_replace",
                            "type": "function",
                            "description": "Replace regular expression case insensitive Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$pattern $replacement $string"
                        },
                        {
                            "text": "split",
                            "type": "function",
                            "description": "Split string into array by regular expression Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $string $limit"
                        },
                        {
                            "text": "spliti",
                            "type": "function",
                            "description": "Split string into array by regular expression case insensitive Since PHP 4.0.1 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $string $limit"
                        },
                        {
                            "text": "sql_regcase",
                            "type": "function",
                            "description": "Make regular expression for case insensitive match Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "exif_read_data",
                            "type": "function",
                            "description": "Start of exif v.1.4 $Id$",
                            "rightLabel": "$filename $sections $arrays $thumbnail"
                        },
                        {
                            "text": "read_exif_data",
                            "type": "function",
                            "description": "Alias of exif_read_data Since PHP 4.0.1 5.0",
                            "rightLabel": "$filename $sections_needed $sub_arrays $read_thumbnail"
                        },
                        {
                            "text": "exif_tagname",
                            "type": "function",
                            "description": "Get the header name for an index Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$index"
                        },
                        {
                            "text": "exif_thumbnail",
                            "type": "function",
                            "description": "Retrieve the embedded thumbnail of a TIFF or JPEG image Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename $width $height $imagetype"
                        },
                        {
                            "text": "exif_imagetype",
                            "type": "function",
                            "description": "Determine the type of an image Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "finfo_open",
                            "type": "function",
                            "description": "(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)\nCreate a new fileinfo resource",
                            "leftLabel": "resource",
                            "rightLabel": "$options $magic_file"
                        },
                        {
                            "text": "finfo_close",
                            "type": "function",
                            "description": "(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)\nClose fileinfo resource",
                            "leftLabel": "bool",
                            "rightLabel": "$finfo"
                        },
                        {
                            "text": "finfo_set_flags",
                            "type": "function",
                            "description": "(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)\nSet libmagic configuration options",
                            "leftLabel": "bool",
                            "rightLabel": "$finfo $options"
                        },
                        {
                            "text": "finfo_file",
                            "type": "function",
                            "description": "(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)\nReturn information about a file",
                            "leftLabel": "mixed",
                            "rightLabel": "$finfo $file_name $options $context"
                        },
                        {
                            "text": "finfo_buffer",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0)\nReturn information about a string buffer",
                            "leftLabel": "string",
                            "rightLabel": "$finfo $string $options $context"
                        },
                        {
                            "text": "mime_content_type",
                            "type": "function",
                            "description": "Detect MIME Content-type for a file (deprecated) Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "filter_input",
                            "type": "function",
                            "description": "Start of filter v.0.11.0",
                            "rightLabel": "$type $variable_name $filter $options"
                        },
                        {
                            "text": "filter_var",
                            "type": "function",
                            "description": "Filters a variable with a specified filter Since PHP 5.2.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$variable $filter $options"
                        },
                        {
                            "text": "filter_input_array",
                            "type": "function",
                            "description": "Gets external variables and optionally filters them Since PHP 5.2.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$type $definition $add_empty"
                        },
                        {
                            "text": "filter_var_array",
                            "type": "function",
                            "description": "Gets multiple variables and optionally filters them Since PHP 5.2.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $data $definition $add_empty"
                        },
                        {
                            "text": "filter_list",
                            "type": "function",
                            "description": "Returns a list of all supported filters Since PHP 5.2.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "filter_has_var",
                            "type": "function",
                            "description": "Checks if variable of specified type exists Since PHP 5.2.0",
                            "leftLabel": "bool",
                            "rightLabel": "$type $variable_name"
                        },
                        {
                            "text": "filter_id",
                            "type": "function",
                            "description": "Returns the filter ID belonging to a named filter Since PHP 5.2.0",
                            "leftLabel": "int",
                            "rightLabel": "$filtername"
                        },
                        {
                            "text": "ftp_connect",
                            "type": "function",
                            "description": "Start of ftp v.",
                            "rightLabel": "$host $port $timeout"
                        },
                        {
                            "text": "ftp_ssl_connect",
                            "type": "function",
                            "description": "Opens an Secure SSL-FTP connection Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$host $port $timeout"
                        },
                        {
                            "text": "ftp_login",
                            "type": "function",
                            "description": "Logs in to an FTP connection Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $username $password"
                        },
                        {
                            "text": "ftp_pwd",
                            "type": "function",
                            "description": "Returns the current directory name Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ftp_stream"
                        },
                        {
                            "text": "ftp_cdup",
                            "type": "function",
                            "description": "Changes to the parent directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream"
                        },
                        {
                            "text": "ftp_chdir",
                            "type": "function",
                            "description": "Changes the current directory on a FTP server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $directory"
                        },
                        {
                            "text": "ftp_exec",
                            "type": "function",
                            "description": "Requests execution of a command on the FTP server Since PHP 4.0.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $command"
                        },
                        {
                            "text": "ftp_raw",
                            "type": "function",
                            "description": "Sends an arbitrary command to an FTP server Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$ftp_stream $command"
                        },
                        {
                            "text": "ftp_mkdir",
                            "type": "function",
                            "description": "Creates a directory Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ftp_stream $directory"
                        },
                        {
                            "text": "ftp_rmdir",
                            "type": "function",
                            "description": "Removes a directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $directory"
                        },
                        {
                            "text": "ftp_chmod",
                            "type": "function",
                            "description": "Set permissions on a file via FTP Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $mode $filename"
                        },
                        {
                            "text": "ftp_alloc",
                            "type": "function",
                            "description": "Allocates space for a file to be uploaded Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $filesize $result"
                        },
                        {
                            "text": "ftp_nlist",
                            "type": "function",
                            "description": "Returns a list of files in the given directory Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$ftp_stream $directory"
                        },
                        {
                            "text": "ftp_rawlist",
                            "type": "function",
                            "description": "Returns a detailed list of files in the given directory Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$ftp_stream $directory $recursive"
                        },
                        {
                            "text": "ftp_systype",
                            "type": "function",
                            "description": "Returns the system type identifier of the remote FTP server Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ftp_stream"
                        },
                        {
                            "text": "ftp_pasv",
                            "type": "function",
                            "description": "Turns passive mode on or off Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $pasv"
                        },
                        {
                            "text": "ftp_get",
                            "type": "function",
                            "description": "Downloads a file from the FTP server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $local_file $remote_file $mode $resumepos"
                        },
                        {
                            "text": "ftp_fget",
                            "type": "function",
                            "description": "Downloads a file from the FTP server and saves to an open file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $handle $remote_file $mode $resumepos"
                        },
                        {
                            "text": "ftp_put",
                            "type": "function",
                            "description": "Uploads a file to the FTP server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $remote_file $local_file $mode $startpos"
                        },
                        {
                            "text": "ftp_fput",
                            "type": "function",
                            "description": "Uploads from an open file to the FTP server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $remote_file $handle $mode $startpos"
                        },
                        {
                            "text": "ftp_size",
                            "type": "function",
                            "description": "Returns the size of the given file Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $remote_file"
                        },
                        {
                            "text": "ftp_mdtm",
                            "type": "function",
                            "description": "Returns the last modified time of the given file Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $remote_file"
                        },
                        {
                            "text": "ftp_rename",
                            "type": "function",
                            "description": "Renames a file or a directory on the FTP server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $oldname $newname"
                        },
                        {
                            "text": "ftp_delete",
                            "type": "function",
                            "description": "Deletes a file on the FTP server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $path"
                        },
                        {
                            "text": "ftp_site",
                            "type": "function",
                            "description": "Sends a SITE command to the server Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $command"
                        },
                        {
                            "text": "ftp_close",
                            "type": "function",
                            "description": "Closes an FTP connection Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream"
                        },
                        {
                            "text": "ftp_set_option",
                            "type": "function",
                            "description": "Set miscellaneous runtime FTP options Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ftp_stream $option $value"
                        },
                        {
                            "text": "ftp_get_option",
                            "type": "function",
                            "description": "Retrieves various runtime behaviours of the current FTP stream Since PHP 4.2.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$ftp_stream $option"
                        },
                        {
                            "text": "ftp_nb_fget",
                            "type": "function",
                            "description": "Retrieves a file from the FTP server and writes it to an open file (non-blocking) Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $handle $remote_file $mode $resumepos"
                        },
                        {
                            "text": "ftp_nb_get",
                            "type": "function",
                            "description": "Retrieves a file from the FTP server and writes it to a local file (non-blocking) Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $local_file $remote_file $mode $resumepos"
                        },
                        {
                            "text": "ftp_nb_continue",
                            "type": "function",
                            "description": "Continues retrieving\/sending a file (non-blocking) Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream"
                        },
                        {
                            "text": "ftp_nb_put",
                            "type": "function",
                            "description": "Stores a file on the FTP server (non-blocking) Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $remote_file $local_file $mode $startpos"
                        },
                        {
                            "text": "ftp_nb_fput",
                            "type": "function",
                            "description": "Stores a file from an open file to the FTP server (non-blocking) Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ftp_stream $remote_file $handle $mode $startpos"
                        },
                        {
                            "text": "ftp_quit",
                            "type": "function",
                            "description": "Alias of ftp_close Since PHP 4.0 5.0",
                            "rightLabel": "$ftp"
                        },
                        {
                            "text": "gd_info",
                            "type": "function",
                            "description": "Retrieve information about the currently installed GD library Since PHP 4.3.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "imagearc",
                            "type": "function",
                            "description": "Draws an arc Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $cx $cy $width $height $start $end $color"
                        },
                        {
                            "text": "imageellipse",
                            "type": "function",
                            "description": "Draw an ellipse Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $cx $cy $width $height $color"
                        },
                        {
                            "text": "imagechar",
                            "type": "function",
                            "description": "Draw a character horizontally Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $font $x $y $c $color"
                        },
                        {
                            "text": "imagecharup",
                            "type": "function",
                            "description": "Draw a character vertically Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $font $x $y $c $color"
                        },
                        {
                            "text": "imagecolorat",
                            "type": "function",
                            "description": "Get the index of the color of a pixel Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $x $y"
                        },
                        {
                            "text": "imagecolorallocate",
                            "type": "function",
                            "description": "Allocate a color for an image Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue"
                        },
                        {
                            "text": "imagepalettecopy",
                            "type": "function",
                            "description": "Copy the palette from one image to another Since PHP 4.0.1 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$destination $source"
                        },
                        {
                            "text": "imagecreatefromstring",
                            "type": "function",
                            "description": "Create a new image from the image stream in the string Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagecolorclosest",
                            "type": "function",
                            "description": "Get the index of the closest color to the specified color Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue"
                        },
                        {
                            "text": "imagecolorclosesthwb",
                            "type": "function",
                            "description": "Get the index of the color which has the hue, white and blackness Since PHP 4.0.1 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue"
                        },
                        {
                            "text": "imagecolordeallocate",
                            "type": "function",
                            "description": "De-allocate a color for an image Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $color"
                        },
                        {
                            "text": "imagecolorresolve",
                            "type": "function",
                            "description": "Get the index of the specified color or its closest possible alternative Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue"
                        },
                        {
                            "text": "imagecolorexact",
                            "type": "function",
                            "description": "Get the index of the specified color Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue"
                        },
                        {
                            "text": "imagecolorset",
                            "type": "function",
                            "description": "Set the color for the specified palette index Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$image $index $red $green $blue $alpha"
                        },
                        {
                            "text": "imagecolortransparent",
                            "type": "function",
                            "description": "Define a color as transparent Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $color"
                        },
                        {
                            "text": "imagecolorstotal",
                            "type": "function",
                            "description": "Find out the number of colors in an image's palette Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagecolorsforindex",
                            "type": "function",
                            "description": "Get the colors for an index Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$image $index"
                        },
                        {
                            "text": "imagecopy",
                            "type": "function",
                            "description": "Copy part of an image Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dst_im $src_im $dst_x $dst_y $src_x $src_y $src_w $src_h"
                        },
                        {
                            "text": "imagecopymerge",
                            "type": "function",
                            "description": "Copy and merge part of an image Since PHP 4.0.1 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dst_im $src_im $dst_x $dst_y $src_x $src_y $src_w $src_h $pct"
                        },
                        {
                            "text": "imagecopymergegray",
                            "type": "function",
                            "description": "Copy and merge part of an image with gray scale Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dst_im $src_im $dst_x $dst_y $src_x $src_y $src_w $src_h $pct"
                        },
                        {
                            "text": "imagecopyresized",
                            "type": "function",
                            "description": "Copy and resize part of an image Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dst_image $src_image $dst_x $dst_y $src_x $src_y $dst_w $dst_h $src_w $src_h"
                        },
                        {
                            "text": "imagecreate",
                            "type": "function",
                            "description": "Create a new palette based image Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$width $height"
                        },
                        {
                            "text": "imagecreatetruecolor",
                            "type": "function",
                            "description": "Create a new true color image Since PHP 4.0.6 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$width $height"
                        },
                        {
                            "text": "imageistruecolor",
                            "type": "function",
                            "description": "Finds whether an image is a truecolor image Since PHP 4.3.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagetruecolortopalette",
                            "type": "function",
                            "description": "Convert a true color image to a palette image Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $dither $ncolors"
                        },
                        {
                            "text": "imagesetthickness",
                            "type": "function",
                            "description": "Set the thickness for line drawing Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $thickness"
                        },
                        {
                            "text": "imagefilledarc",
                            "type": "function",
                            "description": "Draw a partial arc and fill it Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $cx $cy $width $height $start $end $color $style"
                        },
                        {
                            "text": "imagefilledellipse",
                            "type": "function",
                            "description": "Draw a filled ellipse Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $cx $cy $width $height $color"
                        },
                        {
                            "text": "imagealphablending",
                            "type": "function",
                            "description": "Set the blending mode for an image Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $blendmode"
                        },
                        {
                            "text": "imagesavealpha",
                            "type": "function",
                            "description": "Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images Since PHP 4.3.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $saveflag"
                        },
                        {
                            "text": "imagecolorallocatealpha",
                            "type": "function",
                            "description": "Allocate a color for an image Since PHP 4.3.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue $alpha"
                        },
                        {
                            "text": "imagecolorresolvealpha",
                            "type": "function",
                            "description": "Get the index of the specified color + alpha or its closest possible alternative Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue $alpha"
                        },
                        {
                            "text": "imagecolorclosestalpha",
                            "type": "function",
                            "description": "Get the index of the closest color to the specified color + alpha Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue $alpha"
                        },
                        {
                            "text": "imagecolorexactalpha",
                            "type": "function",
                            "description": "Get the index of the specified color + alpha Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $red $green $blue $alpha"
                        },
                        {
                            "text": "imagecopyresampled",
                            "type": "function",
                            "description": "Copy and resize part of an image with resampling Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dst_image $src_image $dst_x $dst_y $src_x $src_y $dst_w $dst_h $src_w $src_h"
                        },
                        {
                            "text": "imagerotate",
                            "type": "function",
                            "description": "Rotate an image with a given angle Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$image $angle $bgd_color $ignore_transparent"
                        },
                        {
                            "text": "imageantialias",
                            "type": "function",
                            "description": "Should antialias functions be used or not Since PHP 4.3.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $enabled"
                        },
                        {
                            "text": "imagesettile",
                            "type": "function",
                            "description": "Set the tile image for filling Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $tile"
                        },
                        {
                            "text": "imagesetbrush",
                            "type": "function",
                            "description": "Set the brush image for line drawing Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $brush"
                        },
                        {
                            "text": "imagesetstyle",
                            "type": "function",
                            "description": "Set the style for line drawing Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image array $style"
                        },
                        {
                            "text": "imagecreatefrompng",
                            "type": "function",
                            "description": "Create a new image from file or URL Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromgif",
                            "type": "function",
                            "description": "Create a new image from file or URL Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromjpeg",
                            "type": "function",
                            "description": "Create a new image from file or URL Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromwbmp",
                            "type": "function",
                            "description": "Create a new image from file or URL Since PHP 4.0.1 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromxbm",
                            "type": "function",
                            "description": "Create a new image from file or URL Since PHP 4.0.1 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromxpm",
                            "type": "function",
                            "description": "Create a new image from file or URL Since PHP 4.0.1 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromgd",
                            "type": "function",
                            "description": "Create a new image from GD file or URL Since PHP 4.0.7 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromgd2",
                            "type": "function",
                            "description": "Create a new image from GD2 file or URL Since PHP 4.0.7 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagecreatefromgd2part",
                            "type": "function",
                            "description": "Create a new image from a given part of GD2 file or URL Since PHP 4.0.7 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename $srcX $srcY $width $height"
                        },
                        {
                            "text": "imagepng",
                            "type": "function",
                            "description": "Output a PNG image to either the browser or a file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename $quality $filters"
                        },
                        {
                            "text": "imagegif",
                            "type": "function",
                            "description": "Output image to browser or file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename"
                        },
                        {
                            "text": "imagejpeg",
                            "type": "function",
                            "description": "Output image to browser or file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename $quality"
                        },
                        {
                            "text": "imagewbmp",
                            "type": "function",
                            "description": "Output image to browser or file Since PHP 4.0.1 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename $foreground"
                        },
                        {
                            "text": "imagegd",
                            "type": "function",
                            "description": "Output GD image to browser or file Since PHP 4.0.7 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename"
                        },
                        {
                            "text": "imagegd2",
                            "type": "function",
                            "description": "Output GD2 image to browser or file Since PHP 4.0.7 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename $chunk_size $type"
                        },
                        {
                            "text": "imagedestroy",
                            "type": "function",
                            "description": "Destroy an image Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagegammacorrect",
                            "type": "function",
                            "description": "Apply a gamma correction to a GD image Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $inputgamma $outputgamma"
                        },
                        {
                            "text": "imagefill",
                            "type": "function",
                            "description": "Flood fill Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x $y $color"
                        },
                        {
                            "text": "imagefilledpolygon",
                            "type": "function",
                            "description": "Draw a filled polygon Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image array $points $num_points $color"
                        },
                        {
                            "text": "imagefilledrectangle",
                            "type": "function",
                            "description": "Draw a filled rectangle Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x1 $y1 $x2 $y2 $color"
                        },
                        {
                            "text": "imagefilltoborder",
                            "type": "function",
                            "description": "Flood fill to specific color Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x $y $border $color"
                        },
                        {
                            "text": "imagefontwidth",
                            "type": "function",
                            "description": "Get font width Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$font"
                        },
                        {
                            "text": "imagefontheight",
                            "type": "function",
                            "description": "Get font height Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$font"
                        },
                        {
                            "text": "imageinterlace",
                            "type": "function",
                            "description": "Enable or disable interlace Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image $interlace"
                        },
                        {
                            "text": "imageline",
                            "type": "function",
                            "description": "Draw a line Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x1 $y1 $x2 $y2 $color"
                        },
                        {
                            "text": "imageloadfont",
                            "type": "function",
                            "description": "Load a new font Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$file"
                        },
                        {
                            "text": "imagepolygon",
                            "type": "function",
                            "description": "Draws a polygon Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image array $points $num_points $color"
                        },
                        {
                            "text": "imagerectangle",
                            "type": "function",
                            "description": "Draw a rectangle Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x1 $y1 $x2 $y2 $color"
                        },
                        {
                            "text": "imagesetpixel",
                            "type": "function",
                            "description": "Set a single pixel Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x $y $color"
                        },
                        {
                            "text": "imagestring",
                            "type": "function",
                            "description": "Draw a string horizontally Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $font $x $y $string $color"
                        },
                        {
                            "text": "imagestringup",
                            "type": "function",
                            "description": "Draw a string vertically Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $font $x $y $string $color"
                        },
                        {
                            "text": "imagesx",
                            "type": "function",
                            "description": "Get image width Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagesy",
                            "type": "function",
                            "description": "Get image height Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagedashedline",
                            "type": "function",
                            "description": "Draw a dashed line Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $x1 $y1 $x2 $y2 $color"
                        },
                        {
                            "text": "imagettfbbox",
                            "type": "function",
                            "description": "Give the bounding box of a text using TrueType fonts Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$size $angle $fontfile $text"
                        },
                        {
                            "text": "imagettftext",
                            "type": "function",
                            "description": "Write text to the image using TrueType fonts Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$image $size $angle $x $y $color $fontfile $text"
                        },
                        {
                            "text": "imageftbbox",
                            "type": "function",
                            "description": "Give the bounding box of a text using fonts via freetype2 Since PHP 4.0.7 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$size $angle $fontfile $text $extrainfo"
                        },
                        {
                            "text": "imagefttext",
                            "type": "function",
                            "description": "Write text to the image using fonts using FreeType 2 Since PHP 4.0.7 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$image $size $angle $x $y $color $fontfile $text $extrainfo"
                        },
                        {
                            "text": "imagepsloadfont",
                            "type": "function",
                            "description": "Load a PostScript Type 1 font from file Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "imagepsfreefont",
                            "type": "function",
                            "description": "Free memory used by a PostScript Type 1 font Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$font_index"
                        },
                        {
                            "text": "imagepsencodefont",
                            "type": "function",
                            "description": "Change the character encoding vector of a font Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$font_index $encodingfile"
                        },
                        {
                            "text": "imagepsextendfont",
                            "type": "function",
                            "description": "Extend or condense a font Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$font_index $extend"
                        },
                        {
                            "text": "imagepsslantfont",
                            "type": "function",
                            "description": "Slant a font Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$font_index $slant"
                        },
                        {
                            "text": "imagepstext",
                            "type": "function",
                            "description": "Draws a text over an image using PostScript Type1 fonts Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$image $text $font_index $size $foreground $background $x $y $space $tightness $angle $antialias_steps"
                        },
                        {
                            "text": "imagepsbbox",
                            "type": "function",
                            "description": "Give the bounding box of a text rectangle using PostScript Type1 fonts Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$text $font $size"
                        },
                        {
                            "text": "imagetypes",
                            "type": "function",
                            "description": "Return the image types supported by this PHP build Since PHP 4.0.2 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "jpeg2wbmp",
                            "type": "function",
                            "description": "Convert JPEG image file to WBMP image file Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$jpegname $wbmpname $dest_height $dest_width $threshold"
                        },
                        {
                            "text": "png2wbmp",
                            "type": "function",
                            "description": "Convert PNG image file to WBMP image file Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pngname $wbmpname $dest_height $dest_width $threshold"
                        },
                        {
                            "text": "image2wbmp",
                            "type": "function",
                            "description": "Output image to browser or file Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename $threshold"
                        },
                        {
                            "text": "imagelayereffect",
                            "type": "function",
                            "description": "Set the alpha blending flag to use the bundled libgd layering effects Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $effect"
                        },
                        {
                            "text": "imagecolormatch",
                            "type": "function",
                            "description": "Makes the colors of the palette version of an image more closely match the true color version",
                            "leftLabel": "bool",
                            "rightLabel": "$image1 $image2"
                        },
                        {
                            "text": "imagexbm",
                            "type": "function",
                            "description": "Output XBM image to browser or file",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filename $foreground"
                        },
                        {
                            "text": "imagefilter",
                            "type": "function",
                            "description": "Applies a filter to an image",
                            "leftLabel": "bool",
                            "rightLabel": "$image $filtertype $arg1 $arg2 $arg3 $arg4"
                        },
                        {
                            "text": "imageconvolution",
                            "type": "function",
                            "description": "Apply a 3x3 convolution matrix, using coefficient and offset Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image array $matrix $div $offset"
                        },
                        {
                            "text": "gearman_version",
                            "type": "function"
                        },
                        {
                            "text": "gearman_bugreport",
                            "type": "function"
                        },
                        {
                            "text": "gearman_verbose_name",
                            "type": "function",
                            "rightLabel": "$verbose"
                        },
                        {
                            "text": "gearman_client_return_code",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_create",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_clone",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_error",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_errno",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_options",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_set_options",
                            "type": "function",
                            "rightLabel": "$client_object $option"
                        },
                        {
                            "text": "gearman_client_add_options",
                            "type": "function",
                            "rightLabel": "$client_object $option"
                        },
                        {
                            "text": "gearman_client_remove_options",
                            "type": "function",
                            "rightLabel": "$client_object $option"
                        },
                        {
                            "text": "gearman_client_timeout",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_set_timeout",
                            "type": "function",
                            "rightLabel": "$client_object $timeout"
                        },
                        {
                            "text": "gearman_client_context",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_set_context",
                            "type": "function",
                            "rightLabel": "$client_object $context"
                        },
                        {
                            "text": "gearman_client_add_server",
                            "type": "function",
                            "rightLabel": "$client_object $host $port"
                        },
                        {
                            "text": "gearman_client_add_servers",
                            "type": "function",
                            "rightLabel": "$client_object $servers"
                        },
                        {
                            "text": "gearman_client_wait",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_do",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_do_high",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_do_normal",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_do_low",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_do_job_handle",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_do_status",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_do_background",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_do_high_background",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_do_low_background",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $unique"
                        },
                        {
                            "text": "gearman_client_job_status",
                            "type": "function",
                            "rightLabel": "$client_object $job_handle"
                        },
                        {
                            "text": "gearman_client_echo",
                            "type": "function",
                            "rightLabel": "$client_object $workload"
                        },
                        {
                            "text": "gearman_client_add_task",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $context $unique"
                        },
                        {
                            "text": "gearman_client_add_task_high",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $context $unique"
                        },
                        {
                            "text": "gearman_client_add_task_low",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $context $unique"
                        },
                        {
                            "text": "gearman_client_add_task_background",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $context $unique"
                        },
                        {
                            "text": "gearman_client_add_task_high_background",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $context $unique"
                        },
                        {
                            "text": "gearman_client_add_task_low_background",
                            "type": "function",
                            "rightLabel": "$client_object $function_name $workload $context $unique"
                        },
                        {
                            "text": "gearman_client_add_task_status",
                            "type": "function",
                            "rightLabel": "$client_object $job_handle $context"
                        },
                        {
                            "text": "gearman_client_set_workload_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_created_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_data_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_warning_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_status_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_complete_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_exception_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_set_fail_fn",
                            "type": "function",
                            "rightLabel": "$client_object $callback"
                        },
                        {
                            "text": "gearman_client_clear_fn",
                            "type": "function",
                            "rightLabel": "$client_object"
                        },
                        {
                            "text": "gearman_client_run_tasks",
                            "type": "function",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "gearman_task_return_code",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_function_name",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_unique",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_job_handle",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_is_known",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_is_running",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_numerator",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_denominator",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_send_workload",
                            "type": "function",
                            "rightLabel": "$task_object $data"
                        },
                        {
                            "text": "gearman_task_data",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_data_size",
                            "type": "function",
                            "rightLabel": "$task_object"
                        },
                        {
                            "text": "gearman_task_recv_data",
                            "type": "function",
                            "rightLabel": "$task_object $data_len"
                        },
                        {
                            "text": "gearman_worker_return_code",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_create",
                            "type": "function"
                        },
                        {
                            "text": "gearman_worker_clone",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_error",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_errno",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_options",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_set_options",
                            "type": "function",
                            "rightLabel": "$worker_object $option"
                        },
                        {
                            "text": "gearman_worker_add_options",
                            "type": "function",
                            "rightLabel": "$worker_object $option"
                        },
                        {
                            "text": "gearman_worker_remove_options",
                            "type": "function",
                            "rightLabel": "$worker_object $option"
                        },
                        {
                            "text": "gearman_worker_timeout",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_set_timeout",
                            "type": "function",
                            "rightLabel": "$worker_object $timeout"
                        },
                        {
                            "text": "gearman_worker_add_server",
                            "type": "function",
                            "rightLabel": "$worker_object $host $port"
                        },
                        {
                            "text": "gearman_worker_add_servers",
                            "type": "function",
                            "rightLabel": "$worker_object $servers"
                        },
                        {
                            "text": "gearman_worker_wait",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_register",
                            "type": "function",
                            "rightLabel": "$worker_object $function_name $timeout"
                        },
                        {
                            "text": "gearman_worker_unregister",
                            "type": "function",
                            "rightLabel": "$worker_object $function_name"
                        },
                        {
                            "text": "gearman_worker_unregister_all",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_grab_job",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_add_function",
                            "type": "function",
                            "rightLabel": "$worker_object $function_name $function $data $timeout"
                        },
                        {
                            "text": "gearman_worker_work",
                            "type": "function",
                            "rightLabel": "$worker_object"
                        },
                        {
                            "text": "gearman_worker_echo",
                            "type": "function",
                            "rightLabel": "$worker_object $workload"
                        },
                        {
                            "text": "gearman_job_return_code",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "gearman_job_send_data",
                            "type": "function",
                            "rightLabel": "$job_object $data"
                        },
                        {
                            "text": "gearman_job_send_warning",
                            "type": "function",
                            "rightLabel": "$job_object $warning"
                        },
                        {
                            "text": "gearman_job_send_status",
                            "type": "function",
                            "rightLabel": "$job_object $numerator $denominator"
                        },
                        {
                            "text": "gearman_job_send_complete",
                            "type": "function",
                            "rightLabel": "$job_object $result"
                        },
                        {
                            "text": "gearman_job_send_exception",
                            "type": "function",
                            "rightLabel": "$job_object $exception"
                        },
                        {
                            "text": "gearman_job_send_fail",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "gearman_job_handle",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "gearman_job_function_name",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "gearman_job_unique",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "gearman_job_workload",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "gearman_job_workload_size",
                            "type": "function",
                            "rightLabel": "$job_object"
                        },
                        {
                            "text": "geoip_database_info",
                            "type": "function",
                            "description": "Start of geoip v.1.0.8",
                            "rightLabel": "$database"
                        },
                        {
                            "text": "geoip_country_code_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nGet the two letter country code",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_country_code3_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nGet the three letter country code",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_country_name_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nGet the full country name",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_continent_code_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.3)\nGet the two letter continent code",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_org_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nGet the organization name",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_record_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nReturns the detailed City information found in the GeoIP Database",
                            "leftLabel": "array",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_id_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nGet the Internet connection type",
                            "leftLabel": "int",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_region_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 0.2.0)\nGet the country code and region",
                            "leftLabel": "array",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_isp_by_name",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.2)\nGet the Internet Service Provider (ISP) name",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "geoip_db_avail",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.1)\nDetermine if GeoIP Database is available",
                            "leftLabel": "bool",
                            "rightLabel": "$database"
                        },
                        {
                            "text": "geoip_db_get_all_info",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.1)\nReturns detailed information about all GeoIP database types",
                            "leftLabel": "array"
                        },
                        {
                            "text": "geoip_db_filename",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.1)\nReturns the filename of the corresponding GeoIP Database",
                            "leftLabel": "string",
                            "rightLabel": "$database"
                        },
                        {
                            "text": "geoip_region_name_by_code",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.4)\nReturns the region name for some country and region code combo",
                            "leftLabel": "string",
                            "rightLabel": "$country_code $region_code"
                        },
                        {
                            "text": "geoip_time_zone_by_country_and_region",
                            "type": "function",
                            "description": "(PECL geoip >= 1.0.4)\nReturns the time zone for some country and region code combo",
                            "leftLabel": "string",
                            "rightLabel": "$country_code $region_code"
                        },
                        {
                            "text": "textdomain",
                            "type": "function",
                            "description": "Start of gettext v.",
                            "rightLabel": "$text_domain"
                        },
                        {
                            "text": "gettext",
                            "type": "function",
                            "description": "Lookup a message in the current domain Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$message"
                        },
                        {
                            "text": "_",
                            "type": "function",
                            "description": "Lookup a message in the current domain Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$message"
                        },
                        {
                            "text": "dgettext",
                            "type": "function",
                            "description": "Override the current domain Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$domain $message"
                        },
                        {
                            "text": "dcgettext",
                            "type": "function",
                            "description": "Overrides the domain for a single lookup Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$domain $message $category"
                        },
                        {
                            "text": "bindtextdomain",
                            "type": "function",
                            "description": "Sets the path for a domain Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$domain $directory"
                        },
                        {
                            "text": "ngettext",
                            "type": "function",
                            "description": "Plural version of gettext Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$msgid1 $msgid2 $n"
                        },
                        {
                            "text": "dngettext",
                            "type": "function",
                            "description": "Plural version of dgettext Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$domain $msgid1 $msgid2 $n"
                        },
                        {
                            "text": "dcngettext",
                            "type": "function",
                            "description": "Plural version of dcgettext Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$domain $msgid1 $msgid2 $n $category"
                        },
                        {
                            "text": "bind_textdomain_codeset",
                            "type": "function",
                            "description": "Specify the character encoding in which the messages from the DOMAIN message catalog will be returned Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$domain $codeset"
                        },
                        {
                            "text": "gmp_init",
                            "type": "function",
                            "description": "Start of gmp v.",
                            "rightLabel": "$number $base"
                        },
                        {
                            "text": "gmp_intval",
                            "type": "function",
                            "description": "Convert GMP number to integer Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$gmpnumber"
                        },
                        {
                            "text": "gmp_random_seed",
                            "type": "function",
                            "description": "Sets the RNG seed Since PHP 7.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$seed"
                        },
                        {
                            "text": "gmp_strval",
                            "type": "function",
                            "description": "Convert GMP number to string Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$gmpnumber $base"
                        },
                        {
                            "text": "gmp_add",
                            "type": "function",
                            "description": "Add numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_sub",
                            "type": "function",
                            "description": "Subtract numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_mul",
                            "type": "function",
                            "description": "Multiply numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_div_qr",
                            "type": "function",
                            "description": "Divide numbers and get quotient and remainder Since PHP 4.0.4 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$n $d $round"
                        },
                        {
                            "text": "gmp_div_q",
                            "type": "function",
                            "description": "Divide numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b $round"
                        },
                        {
                            "text": "gmp_div_r",
                            "type": "function",
                            "description": "Remainder of the division of numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$n $d $round"
                        },
                        {
                            "text": "gmp_div",
                            "type": "function",
                            "description": "Divide numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b $round"
                        },
                        {
                            "text": "gmp_mod",
                            "type": "function",
                            "description": "Modulo operation Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$n $d"
                        },
                        {
                            "text": "gmp_divexact",
                            "type": "function",
                            "description": "Exact division of numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$n $d"
                        },
                        {
                            "text": "gmp_neg",
                            "type": "function",
                            "description": "Negate number Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_abs",
                            "type": "function",
                            "description": "Absolute value Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_fact",
                            "type": "function",
                            "description": "Factorial Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_sqrt",
                            "type": "function",
                            "description": "Calculate square root Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_sqrtrem",
                            "type": "function",
                            "description": "Square root with remainder Since PHP 4.0.4 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_pow",
                            "type": "function",
                            "description": "Raise number into power Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$base $exp"
                        },
                        {
                            "text": "gmp_powm",
                            "type": "function",
                            "description": "Raise number into power with modulo Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$base $exp $mod"
                        },
                        {
                            "text": "gmp_perfect_square",
                            "type": "function",
                            "description": "Perfect square check Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_prob_prime",
                            "type": "function",
                            "description": "Check if number is \"probably prime\" Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $reps"
                        },
                        {
                            "text": "gmp_gcd",
                            "type": "function",
                            "description": "Calculate GCD Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_gcdext",
                            "type": "function",
                            "description": "Calculate GCD and multipliers Since PHP 4.0.4 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_invert",
                            "type": "function",
                            "description": "Inverse by modulo Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_jacobi",
                            "type": "function",
                            "description": "Jacobi symbol Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $p"
                        },
                        {
                            "text": "gmp_legendre",
                            "type": "function",
                            "description": "Legendre symbol Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $p"
                        },
                        {
                            "text": "gmp_cmp",
                            "type": "function",
                            "description": "Compare numbers Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_sign",
                            "type": "function",
                            "description": "Sign of number Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_random",
                            "type": "function",
                            "description": "Random number Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$limiter"
                        },
                        {
                            "text": "gmp_and",
                            "type": "function",
                            "description": "Bitwise AND Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_or",
                            "type": "function",
                            "description": "Bitwise OR Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_com",
                            "type": "function",
                            "description": "Calculates one's complement Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_xor",
                            "type": "function",
                            "description": "Bitwise XOR Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_setbit",
                            "type": "function",
                            "description": "Set bit Since PHP 4.0.4 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$a $index $set_clear"
                        },
                        {
                            "text": "gmp_clrbit",
                            "type": "function",
                            "description": "Clear bit Since PHP 4.0.4 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$a $index"
                        },
                        {
                            "text": "gmp_scan0",
                            "type": "function",
                            "description": "Scan for 0 Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $start"
                        },
                        {
                            "text": "gmp_scan1",
                            "type": "function",
                            "description": "Scan for 1 Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $start"
                        },
                        {
                            "text": "gmp_testbit",
                            "type": "function",
                            "description": "Tests if a bit is set Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$a $index"
                        },
                        {
                            "text": "gmp_popcount",
                            "type": "function",
                            "description": "Population count Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "gmp_hamdist",
                            "type": "function",
                            "description": "Hamming distance Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$a $b"
                        },
                        {
                            "text": "gmp_import",
                            "type": "function",
                            "description": "Import from a binary string Since PHP 5.6.1",
                            "leftLabel": "GMP | bool",
                            "rightLabel": "$data $word_size $options"
                        },
                        {
                            "text": "gmp_export",
                            "type": "function",
                            "description": "Export to a binary string Since PHP 5.6.1",
                            "leftLabel": "string | bool",
                            "rightLabel": "GMP $gmpnumber $word_size $options"
                        },
                        {
                            "text": "gmp_root",
                            "type": "function",
                            "description": "Takes the nth root of a and returns the integer component of the result. Since PHP 5.6.0",
                            "leftLabel": "GMP",
                            "rightLabel": "GMP $a $nth"
                        },
                        {
                            "text": "gmp_rootrem",
                            "type": "function",
                            "description": "Takes the nth root of a and returns the integer component and remainder of the result. Since PHP 5.6.0",
                            "leftLabel": "array | \\GMP[]",
                            "rightLabel": "GMP $a $nth"
                        },
                        {
                            "text": "gmp_nextprime",
                            "type": "function",
                            "description": "Find next prime number Since PHP 5.2.0",
                            "leftLabel": "resource",
                            "rightLabel": "$a"
                        },
                        {
                            "text": "hash",
                            "type": "function",
                            "description": "Start of hash v.1.0",
                            "rightLabel": "$algo $data $raw_output"
                        },
                        {
                            "text": "hash_equals",
                            "type": "function",
                            "description": "Timing attack safe string comparison Since PHP 5.6.0",
                            "leftLabel": "boolean",
                            "rightLabel": "$known_string $user_string"
                        },
                        {
                            "text": "hash_file",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nGenerate a hash value using the contents of a given file",
                            "leftLabel": "string",
                            "rightLabel": "$algo $filename $raw_output"
                        },
                        {
                            "text": "hash_hmac",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nGenerate a keyed hash value using the HMAC method",
                            "leftLabel": "string",
                            "rightLabel": "$algo $data $key $raw_output"
                        },
                        {
                            "text": "hash_hmac_file",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nGenerate a keyed hash value using the HMAC method and the contents of a given file",
                            "leftLabel": "string",
                            "rightLabel": "$algo $filename $key $raw_output"
                        },
                        {
                            "text": "hash_init",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nInitialize an incremental hashing context",
                            "leftLabel": "resource",
                            "rightLabel": "$algo $options $key"
                        },
                        {
                            "text": "hash_update",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nPump data into an active hashing context",
                            "leftLabel": "bool",
                            "rightLabel": "$context $data"
                        },
                        {
                            "text": "hash_update_stream",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nPump data into an active hashing context from an open stream",
                            "leftLabel": "int",
                            "rightLabel": "$context $handle $length"
                        },
                        {
                            "text": "hash_update_file",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nPump data into an active hashing context from a file",
                            "leftLabel": "bool",
                            "rightLabel": "$hcontext $filename $scontext"
                        },
                        {
                            "text": "hash_final",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nFinalize an incremental hash and return resulting digest",
                            "leftLabel": "string",
                            "rightLabel": "$context $raw_output"
                        },
                        {
                            "text": "hash_copy",
                            "type": "function",
                            "description": "Copy hashing context Since PHP 5.3.0",
                            "leftLabel": "resource",
                            "rightLabel": "$context"
                        },
                        {
                            "text": "hash_algos",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL hash >= 1.1)\nReturn a list of registered hashing algorithms",
                            "leftLabel": "array"
                        },
                        {
                            "text": "hash_pbkdf2",
                            "type": "function",
                            "description": "Generate a PBKDF2 key derivation of a supplied password Since PHP 5.5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$algo $password $salt $iterations $length $raw_output"
                        },
                        {
                            "text": "mhash_keygen_s2k",
                            "type": "function",
                            "description": "Generates a key Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hash $password $salt $bytes"
                        },
                        {
                            "text": "mhash_get_block_size",
                            "type": "function",
                            "description": "Gets the block size of the specified hash Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$hash"
                        },
                        {
                            "text": "mhash_get_hash_name",
                            "type": "function",
                            "description": "Gets the name of the specified hash Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hash"
                        },
                        {
                            "text": "mhash_count",
                            "type": "function",
                            "description": "Gets the highest available hash ID Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "mhash",
                            "type": "function",
                            "description": "Computes hash Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hash $data $key"
                        },
                        {
                            "text": "http_date",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nCompose HTTP RFC compliant date",
                            "leftLabel": "string",
                            "rightLabel": "$timestamp"
                        },
                        {
                            "text": "http_build_url",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.21.0)\nBuild an URL",
                            "leftLabel": "string",
                            "rightLabel": "$url $parts $flags array $new_url"
                        },
                        {
                            "text": "http_build_str",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.23.0)\nBuild query string",
                            "leftLabel": "string",
                            "rightLabel": "array $query $prefix $arg_separator"
                        },
                        {
                            "text": "http_negotiate_language",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nNegotiate clients preferred language",
                            "leftLabel": "string",
                            "rightLabel": "array $supported array $result"
                        },
                        {
                            "text": "http_negotiate_charset",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nNegotiate clients preferred character set",
                            "leftLabel": "string",
                            "rightLabel": "array $supported array $result"
                        },
                        {
                            "text": "http_negotiate_content_type",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.19.0)\nNegotiate clients preferred content type",
                            "leftLabel": "string",
                            "rightLabel": "array $supported array $result"
                        },
                        {
                            "text": "http_redirect",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nIssue HTTP redirect",
                            "leftLabel": "void",
                            "rightLabel": "$url array $params $session $status"
                        },
                        {
                            "text": "http_throttle",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nHTTP throttling",
                            "leftLabel": "void",
                            "rightLabel": "$sec $bytes"
                        },
                        {
                            "text": "http_send_status",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nSend HTTP response status",
                            "leftLabel": "bool",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "http_send_last_modified",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nSend Last-Modified",
                            "leftLabel": "bool",
                            "rightLabel": "$timestamp"
                        },
                        {
                            "text": "http_send_content_type",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nSend Content-Type",
                            "leftLabel": "bool",
                            "rightLabel": "$content_type"
                        },
                        {
                            "text": "http_send_content_disposition",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nSend Content-Disposition",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $inline"
                        },
                        {
                            "text": "http_match_modified",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nMatch last modification",
                            "leftLabel": "bool",
                            "rightLabel": "$timestamp $for_range"
                        },
                        {
                            "text": "http_match_etag",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nMatch ETag",
                            "leftLabel": "bool",
                            "rightLabel": "$etag $for_range"
                        },
                        {
                            "text": "http_cache_last_modified",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nCaching by last modification",
                            "leftLabel": "bool",
                            "rightLabel": "$timestamp_or_expires"
                        },
                        {
                            "text": "http_cache_etag",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nCaching by ETag",
                            "leftLabel": "bool",
                            "rightLabel": "$etag"
                        },
                        {
                            "text": "http_send_data",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nSend arbitrary data",
                            "leftLabel": "bool",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "http_send_file",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nSend file",
                            "leftLabel": "bool",
                            "rightLabel": "$file"
                        },
                        {
                            "text": "http_send_stream",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nSend stream",
                            "leftLabel": "bool",
                            "rightLabel": "$stream"
                        },
                        {
                            "text": "http_chunked_decode",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nDecode chunked-encoded data",
                            "leftLabel": "string",
                            "rightLabel": "$encoded"
                        },
                        {
                            "text": "http_parse_message",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.12.0)\nParse HTTP messages",
                            "leftLabel": "object",
                            "rightLabel": "$message"
                        },
                        {
                            "text": "http_parse_headers",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nParse HTTP headers",
                            "leftLabel": "array",
                            "rightLabel": "$header"
                        },
                        {
                            "text": "http_parse_cookie",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.20.0)\nParse HTTP cookie",
                            "leftLabel": "stdClass | object",
                            "rightLabel": "$cookie $flags array $allowed_extras"
                        },
                        {
                            "text": "http_build_cookie",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.2.0)\nBuild cookie string",
                            "leftLabel": "string",
                            "rightLabel": "array $cookie"
                        },
                        {
                            "text": "http_parse_params",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.0.0)\nParse parameter list",
                            "leftLabel": "stdClass | object",
                            "rightLabel": "$param $flags"
                        },
                        {
                            "text": "http_get_request_headers",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nGet request headers as array",
                            "leftLabel": "array"
                        },
                        {
                            "text": "http_get_request_body",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nGet request body as string",
                            "leftLabel": "string"
                        },
                        {
                            "text": "http_get_request_body_stream",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.22.0)\nGet request body as stream",
                            "leftLabel": "resource"
                        },
                        {
                            "text": "http_match_request_header",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nMatch any header",
                            "leftLabel": "bool",
                            "rightLabel": "$header $value $match_case"
                        },
                        {
                            "text": "http_persistent_handles_count",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.5.0)\nStat persistent handles",
                            "leftLabel": "stdClass | object"
                        },
                        {
                            "text": "http_persistent_handles_clean",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.5.0)\nClean up persistent handles",
                            "leftLabel": "string",
                            "rightLabel": "$ident"
                        },
                        {
                            "text": "http_persistent_handles_ident",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.5.0)\nGet\/set ident of persistent handles",
                            "leftLabel": "string",
                            "rightLabel": "$ident"
                        },
                        {
                            "text": "http_get",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nPerform GET request",
                            "leftLabel": "string",
                            "rightLabel": "$url array $options array $info"
                        },
                        {
                            "text": "http_head",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nPerform HEAD request",
                            "leftLabel": "string",
                            "rightLabel": "$url array $options array $info"
                        },
                        {
                            "text": "http_post_data",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.1.0)\nPerform POST request with pre-encoded data",
                            "leftLabel": "string",
                            "rightLabel": "$url $data array $options array $info"
                        },
                        {
                            "text": "http_post_fields",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nPerform POST request with data to be encoded",
                            "leftLabel": "string",
                            "rightLabel": "$url array $data array $files array $options array $info"
                        },
                        {
                            "text": "http_put_data",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.25.0)\nPerform PUT request with data",
                            "leftLabel": "string",
                            "rightLabel": "$url $data array $options array $info"
                        },
                        {
                            "text": "http_put_file",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nPerform PUT request with file",
                            "leftLabel": "string",
                            "rightLabel": "$url $file array $options array $info"
                        },
                        {
                            "text": "http_put_stream",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nPerform PUT request with stream",
                            "leftLabel": "string",
                            "rightLabel": "$url $stream array $options array $info"
                        },
                        {
                            "text": "http_request",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.0.0)\nPerform custom request",
                            "leftLabel": "string",
                            "rightLabel": "$method $url $body array $options array $info"
                        },
                        {
                            "text": "http_request_body_encode",
                            "type": "function",
                            "description": "(PECL pecl_http >= 1.0.0)\nEncode request body",
                            "leftLabel": "string",
                            "rightLabel": "array $fields array $files"
                        },
                        {
                            "text": "http_request_method_register",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nRegister request method",
                            "leftLabel": "int",
                            "rightLabel": "$method"
                        },
                        {
                            "text": "http_request_method_unregister",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nUnregister request method",
                            "leftLabel": "bool",
                            "rightLabel": "$method"
                        },
                        {
                            "text": "http_request_method_exists",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nCheck whether request method exists",
                            "leftLabel": "int",
                            "rightLabel": "$method"
                        },
                        {
                            "text": "http_request_method_name",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nGet request method name",
                            "leftLabel": "string",
                            "rightLabel": "$method"
                        },
                        {
                            "text": "ob_etaghandler",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.10.0)\nETag output handler",
                            "leftLabel": "string",
                            "rightLabel": "$data $mode"
                        },
                        {
                            "text": "http_deflate",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.15.0)\nDeflate data",
                            "leftLabel": "string",
                            "rightLabel": "$data $flags"
                        },
                        {
                            "text": "http_inflate",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.15.0)\nInflate data",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "ob_deflatehandler",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.21.0)\nDeflate output handler",
                            "leftLabel": "string",
                            "rightLabel": "$data $mode"
                        },
                        {
                            "text": "ob_inflatehandler",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.21.0)\nInflate output handler",
                            "leftLabel": "string",
                            "rightLabel": "$data $mode"
                        },
                        {
                            "text": "http_support",
                            "type": "function",
                            "description": "(PECL pecl_http >= 0.15.0)\nCheck built-in HTTP support",
                            "leftLabel": "int",
                            "rightLabel": "$feature"
                        },
                        {
                            "text": "db2_connect",
                            "type": "function",
                            "description": "Start of ibm_db2 v.1.6.0",
                            "rightLabel": "$database $username $password array $options"
                        },
                        {
                            "text": "db2_commit",
                            "type": "function",
                            "description": "Commits a transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_pconnect",
                            "type": "function",
                            "description": "Returns a persistent connection to a database",
                            "leftLabel": "resource",
                            "rightLabel": "$database $username $password array $options"
                        },
                        {
                            "text": "db2_autocommit",
                            "type": "function",
                            "description": "Returns or sets the AUTOCOMMIT state for a database connection",
                            "leftLabel": "mixed",
                            "rightLabel": "$connection $value"
                        },
                        {
                            "text": "db2_bind_param",
                            "type": "function",
                            "rightLabel": "$stmt $parameter_number $variable_name $parameter_type $data_type $precision $scale"
                        },
                        {
                            "text": "db2_close",
                            "type": "function",
                            "description": "Closes a database connection",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_column_privileges",
                            "type": "function",
                            "description": "Returns a result set listing the columns and associated privileges for a table",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name $column_name"
                        },
                        {
                            "text": "db2_columnprivileges",
                            "type": "function"
                        },
                        {
                            "text": "db2_columns",
                            "type": "function",
                            "description": "Returns a result set listing the columns and associated metadata for a table",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name $column_name"
                        },
                        {
                            "text": "db2_foreign_keys",
                            "type": "function",
                            "description": "Returns a result set listing the foreign keys for a table",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name"
                        },
                        {
                            "text": "db2_foreignkeys",
                            "type": "function"
                        },
                        {
                            "text": "db2_primary_keys",
                            "type": "function",
                            "description": "Returns a result set listing primary keys for a table",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name"
                        },
                        {
                            "text": "db2_primarykeys",
                            "type": "function"
                        },
                        {
                            "text": "db2_procedure_columns",
                            "type": "function",
                            "description": "Returns a result set listing stored procedure parameters",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $procedure $parameter"
                        },
                        {
                            "text": "db2_procedurecolumns",
                            "type": "function"
                        },
                        {
                            "text": "db2_procedures",
                            "type": "function",
                            "description": "Returns a result set listing the stored procedures registered in a database",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $procedure"
                        },
                        {
                            "text": "db2_special_columns",
                            "type": "function",
                            "description": "Returns a result set listing the unique row identifier columns for a table",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name $scope"
                        },
                        {
                            "text": "db2_specialcolumns",
                            "type": "function"
                        },
                        {
                            "text": "db2_statistics",
                            "type": "function",
                            "description": "Returns a result set listing the index and statistics for a table",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name $unique"
                        },
                        {
                            "text": "db2_table_privileges",
                            "type": "function",
                            "description": "Returns a result set listing the tables and associated privileges in a database",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name"
                        },
                        {
                            "text": "db2_tableprivileges",
                            "type": "function"
                        },
                        {
                            "text": "db2_tables",
                            "type": "function",
                            "description": "Returns a result set listing the tables and associated metadata in a database",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $qualifier $schema $table_name $table_type"
                        },
                        {
                            "text": "db2_exec",
                            "type": "function",
                            "description": "Executes an SQL statement directly",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $statement array $options"
                        },
                        {
                            "text": "db2_prepare",
                            "type": "function",
                            "description": "Prepares an SQL statement to be executed",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $statement array $options"
                        },
                        {
                            "text": "db2_execute",
                            "type": "function",
                            "description": "Executes a prepared SQL statement",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt array $parameters"
                        },
                        {
                            "text": "db2_stmt_errormsg",
                            "type": "function",
                            "description": "Returns a string containing the last SQL statement error message",
                            "leftLabel": "string",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_conn_errormsg",
                            "type": "function",
                            "description": "Returns the last connection error message and SQLCODE value",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_conn_error",
                            "type": "function",
                            "description": "Returns a string containing the SQLSTATE returned by the last connection attempt",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_stmt_error",
                            "type": "function",
                            "description": "Returns a string containing the SQLSTATE returned by an SQL statement",
                            "leftLabel": "string",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_next_result",
                            "type": "function",
                            "description": "Requests the next result set from a stored procedure",
                            "leftLabel": "resource",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_num_fields",
                            "type": "function",
                            "description": "Returns the number of fields contained in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_num_rows",
                            "type": "function",
                            "description": "Returns the number of rows affected by an SQL statement",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_field_name",
                            "type": "function",
                            "description": "Returns the name of the column in the result set",
                            "leftLabel": "string",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_field_display_size",
                            "type": "function",
                            "description": "Returns the maximum number of bytes required to display a column",
                            "leftLabel": "int",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_field_num",
                            "type": "function",
                            "description": "Returns the position of the named column in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_field_precision",
                            "type": "function",
                            "description": "Returns the precision of the indicated column in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_field_scale",
                            "type": "function",
                            "description": "Returns the scale of the indicated column in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_field_type",
                            "type": "function",
                            "description": "Returns the data type of the indicated column in a result set",
                            "leftLabel": "string",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_field_width",
                            "type": "function",
                            "description": "Returns the width of the current value of the indicated column in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_cursor_type",
                            "type": "function",
                            "description": "Returns the cursor type used by a statement resource",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_rollback",
                            "type": "function",
                            "description": "Rolls back a transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_free_stmt",
                            "type": "function",
                            "description": "Frees resources associated with the indicated statement resource",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_result",
                            "type": "function",
                            "description": "Returns a single column from a row in the result set",
                            "leftLabel": "mixed",
                            "rightLabel": "$stmt $column"
                        },
                        {
                            "text": "db2_fetch_row",
                            "type": "function",
                            "description": "Sets the result set pointer to the next row or requested row",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $row_number"
                        },
                        {
                            "text": "db2_fetch_assoc",
                            "type": "function",
                            "description": "Returns an array, indexed by column name, representing a row in a result set",
                            "leftLabel": "array",
                            "rightLabel": "$stmt $row_number"
                        },
                        {
                            "text": "db2_fetch_array",
                            "type": "function",
                            "description": "Returns an array, indexed by column position, representing a row in a result set",
                            "leftLabel": "array",
                            "rightLabel": "$stmt $row_number"
                        },
                        {
                            "text": "db2_fetch_both",
                            "type": "function",
                            "description": "Returns an array, indexed by both column name and position, representing a row in a result set",
                            "leftLabel": "array",
                            "rightLabel": "$stmt $row_number"
                        },
                        {
                            "text": "db2_free_result",
                            "type": "function",
                            "description": "Frees resources associated with a result set",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "db2_set_option",
                            "type": "function",
                            "description": "Set options for connection or statement resources",
                            "leftLabel": "bool",
                            "rightLabel": "$resource array $options $type"
                        },
                        {
                            "text": "db2_setoption",
                            "type": "function"
                        },
                        {
                            "text": "db2_fetch_object",
                            "type": "function",
                            "description": "Returns an object with properties representing columns in the fetched row",
                            "leftLabel": "object",
                            "rightLabel": "$stmt $row_number"
                        },
                        {
                            "text": "db2_server_info",
                            "type": "function",
                            "description": "Returns an object with properties that describe the DB2 database server",
                            "leftLabel": "object",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_client_info",
                            "type": "function",
                            "description": "Returns an object with properties that describe the DB2 database client",
                            "leftLabel": "object",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "db2_escape_string",
                            "type": "function",
                            "description": "Used to escape certain characters",
                            "leftLabel": "string",
                            "rightLabel": "$string_literal"
                        },
                        {
                            "text": "db2_lob_read",
                            "type": "function",
                            "description": "Gets a user defined size of LOB files with each invocation",
                            "leftLabel": "string",
                            "rightLabel": "$stmt $colnum $length"
                        },
                        {
                            "text": "db2_get_option",
                            "type": "function",
                            "description": "Retrieves an option value for a statement resource or a connection resource",
                            "leftLabel": "string",
                            "rightLabel": "$resource $option"
                        },
                        {
                            "text": "db2_last_insert_id",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$resource"
                        },
                        {
                            "text": "iconv",
                            "type": "function",
                            "description": "Start of iconv v.",
                            "rightLabel": "$in_charset $out_charset $str"
                        },
                        {
                            "text": "ob_iconv_handler",
                            "type": "function",
                            "description": "Convert character encoding as output buffer handler Since PHP 4.0.5 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$contents $status"
                        },
                        {
                            "text": "iconv_get_encoding",
                            "type": "function",
                            "description": "Retrieve internal configuration variables of iconv extension Since PHP 4.0.5 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$type"
                        },
                        {
                            "text": "iconv_set_encoding",
                            "type": "function",
                            "description": "Set current setting for character encoding conversion Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$type $charset"
                        },
                        {
                            "text": "iconv_strlen",
                            "type": "function",
                            "description": "Returns the character count of string Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str $charset"
                        },
                        {
                            "text": "iconv_substr",
                            "type": "function",
                            "description": "Cut out part of a string Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $offset $length $charset"
                        },
                        {
                            "text": "iconv_strpos",
                            "type": "function",
                            "description": "Finds position of first occurrence of a needle within a haystack Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset $charset"
                        },
                        {
                            "text": "iconv_strrpos",
                            "type": "function",
                            "description": "Finds the last occurrence of a needle within a haystack Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $charset"
                        },
                        {
                            "text": "iconv_mime_encode",
                            "type": "function",
                            "description": "Composes a MIME header field Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$field_name $field_value array $preferences"
                        },
                        {
                            "text": "iconv_mime_decode",
                            "type": "function",
                            "description": "Decodes a MIME header field Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$encoded_header $mode $charset"
                        },
                        {
                            "text": "iconv_mime_decode_headers",
                            "type": "function",
                            "description": "Decodes multiple MIME header fields at once Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$encoded_headers $mode $charset"
                        },
                        {
                            "text": "imap_open",
                            "type": "function",
                            "description": "Start of imap v.",
                            "rightLabel": "$mailbox $username $password $options $n_retries array $params"
                        },
                        {
                            "text": "imap_reopen",
                            "type": "function",
                            "description": "Reopen IMAP stream to new mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox $options $n_retries"
                        },
                        {
                            "text": "imap_close",
                            "type": "function",
                            "description": "Close an IMAP stream Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $flag"
                        },
                        {
                            "text": "imap_num_msg",
                            "type": "function",
                            "description": "Gets the number of messages in the current mailbox Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_num_recent",
                            "type": "function",
                            "description": "Gets the number of recent messages in current mailbox Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_headers",
                            "type": "function",
                            "description": "Returns headers for all messages in a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_headerinfo",
                            "type": "function",
                            "description": "Read the header of the message Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$stream_id $msg_no $from_length $subject_length $default_host"
                        },
                        {
                            "text": "imap_rfc822_parse_headers",
                            "type": "function",
                            "description": "Parse mail headers from a string Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$headers $defaulthost"
                        },
                        {
                            "text": "imap_rfc822_write_address",
                            "type": "function",
                            "description": "Returns a properly formatted email address given the mailbox, host, and personal info Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$mailbox $host $personal"
                        },
                        {
                            "text": "imap_rfc822_parse_adrlist",
                            "type": "function",
                            "description": "Parses an address string Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$address $default_host"
                        },
                        {
                            "text": "imap_body",
                            "type": "function",
                            "description": "Read the message body Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$imap_stream $msg_number $options"
                        },
                        {
                            "text": "imap_bodystruct",
                            "type": "function",
                            "description": "Read the structure of a specified body section of a specific message Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$imap_stream $msg_number $section"
                        },
                        {
                            "text": "imap_fetchbody",
                            "type": "function",
                            "description": "Fetch a particular section of the body of the message Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$imap_stream $msg_number $section $options"
                        },
                        {
                            "text": "imap_fetchmime",
                            "type": "function",
                            "description": "Fetch MIME headers for a particular section of the message Since PHP 5.3.6",
                            "leftLabel": "string",
                            "rightLabel": "$imap_stream $msg_number $section $options"
                        },
                        {
                            "text": "imap_savebody",
                            "type": "function",
                            "description": "Save a specific body section to a file Since PHP 5.1.3",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $file $msg_number $part_number $options"
                        },
                        {
                            "text": "imap_fetchheader",
                            "type": "function",
                            "description": "Returns header for a message Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$imap_stream $msg_number $options"
                        },
                        {
                            "text": "imap_fetchstructure",
                            "type": "function",
                            "description": "Read the structure of a particular message Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$imap_stream $msg_number $options"
                        },
                        {
                            "text": "imap_gc",
                            "type": "function",
                            "description": "Clears IMAP cache Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $caches"
                        },
                        {
                            "text": "imap_expunge",
                            "type": "function",
                            "description": "Delete all messages marked for deletion Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_delete",
                            "type": "function",
                            "description": "Mark a message for deletion from current mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $msg_number $options"
                        },
                        {
                            "text": "imap_undelete",
                            "type": "function",
                            "description": "Unmark the message which is marked deleted Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $msg_number $flags"
                        },
                        {
                            "text": "imap_check",
                            "type": "function",
                            "description": "Check current mailbox Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_listscan",
                            "type": "function",
                            "description": "Returns the list of mailboxes that matches the given text Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $ref $pattern $content"
                        },
                        {
                            "text": "imap_mail_copy",
                            "type": "function",
                            "description": "Copy specified messages to a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $msglist $mailbox $options"
                        },
                        {
                            "text": "imap_mail_move",
                            "type": "function",
                            "description": "Move specified messages to a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $msglist $mailbox $options"
                        },
                        {
                            "text": "imap_mail_compose",
                            "type": "function",
                            "description": "Create a MIME message based on given envelope and body sections Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "array $envelope array $body"
                        },
                        {
                            "text": "imap_createmailbox",
                            "type": "function",
                            "description": "Create a new mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox"
                        },
                        {
                            "text": "imap_renamemailbox",
                            "type": "function",
                            "description": "Rename an old mailbox to new mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $old_mbox $new_mbox"
                        },
                        {
                            "text": "imap_deletemailbox",
                            "type": "function",
                            "description": "Delete a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox"
                        },
                        {
                            "text": "imap_subscribe",
                            "type": "function",
                            "description": "Subscribe to a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox"
                        },
                        {
                            "text": "imap_unsubscribe",
                            "type": "function",
                            "description": "Unsubscribe from a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox"
                        },
                        {
                            "text": "imap_append",
                            "type": "function",
                            "description": "Append a string message to a specified mailbox Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox $message $options $internal_date"
                        },
                        {
                            "text": "imap_ping",
                            "type": "function",
                            "description": "Check if the IMAP stream is still active Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_base64",
                            "type": "function",
                            "description": "Decode BASE64 encoded text Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "imap_qprint",
                            "type": "function",
                            "description": "Convert a quoted-printable string to an 8 bit string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "imap_8bit",
                            "type": "function",
                            "description": "Convert an 8bit string to a quoted-printable string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "imap_binary",
                            "type": "function",
                            "description": "Convert an 8bit string to a base64 string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "imap_utf8",
                            "type": "function",
                            "description": "Converts MIME-encoded text to UTF-8 Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$mime_encoded_text"
                        },
                        {
                            "text": "imap_status",
                            "type": "function",
                            "description": "Returns status information on a mailbox Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$imap_stream $mailbox $options"
                        },
                        {
                            "text": "imap_status_current",
                            "type": "function",
                            "rightLabel": "$stream_id $options"
                        },
                        {
                            "text": "imap_mailboxmsginfo",
                            "type": "function",
                            "description": "Get information about the current mailbox Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$imap_stream"
                        },
                        {
                            "text": "imap_setflag_full",
                            "type": "function",
                            "description": "Sets flags on messages Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $sequence $flag $options"
                        },
                        {
                            "text": "imap_clearflag_full",
                            "type": "function",
                            "description": "Clears flags on messages Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $sequence $flag $options"
                        },
                        {
                            "text": "imap_sort",
                            "type": "function",
                            "description": "Gets and sort messages Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $criteria $reverse $options $search_criteria $charset"
                        },
                        {
                            "text": "imap_uid",
                            "type": "function",
                            "description": "This function returns the UID for the given message sequence number Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$imap_stream $msg_number"
                        },
                        {
                            "text": "imap_msgno",
                            "type": "function",
                            "description": "Gets the message sequence number for the given UID Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$imap_stream $uid"
                        },
                        {
                            "text": "imap_list",
                            "type": "function",
                            "description": "Read the list of mailboxes Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $ref $pattern"
                        },
                        {
                            "text": "imap_lsub",
                            "type": "function",
                            "description": "List all the subscribed mailboxes Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $ref $pattern"
                        },
                        {
                            "text": "imap_fetch_overview",
                            "type": "function",
                            "description": "Read an overview of the information in the headers of the given message Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $sequence $options"
                        },
                        {
                            "text": "imap_alerts",
                            "type": "function",
                            "description": "Returns all IMAP alert messages that have occurred Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "imap_errors",
                            "type": "function",
                            "description": "Returns all of the IMAP errors that have occurred Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "imap_last_error",
                            "type": "function",
                            "description": "Gets the last IMAP error that occurred during this page request Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "imap_search",
                            "type": "function",
                            "description": "This function returns an array of messages matching the given search criteria Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $criteria $options $charset"
                        },
                        {
                            "text": "imap_utf7_decode",
                            "type": "function",
                            "description": "Decodes a modified UTF-7 encoded string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "imap_utf7_encode",
                            "type": "function",
                            "description": "Converts ISO-8859-1 string to modified UTF-7 text Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "imap_mime_header_decode",
                            "type": "function",
                            "description": "Decode MIME header elements Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "imap_thread",
                            "type": "function",
                            "description": "Returns a tree of threaded message Since PHP 4.0.7 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $options"
                        },
                        {
                            "text": "imap_timeout",
                            "type": "function",
                            "description": "Set or fetch imap timeout Since PHP 4.3.3 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$timeout_type $timeout"
                        },
                        {
                            "text": "imap_get_quota",
                            "type": "function",
                            "description": "Retrieve the quota level settings, and usage statics per mailbox Since PHP 4.0.5 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $quota_root"
                        },
                        {
                            "text": "imap_get_quotaroot",
                            "type": "function",
                            "description": "Retrieve the quota settings per user Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $quota_root"
                        },
                        {
                            "text": "imap_set_quota",
                            "type": "function",
                            "description": "Sets a quota for a given mailbox Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $quota_root $quota_limit"
                        },
                        {
                            "text": "imap_setacl",
                            "type": "function",
                            "description": "Sets the ACL for a given mailbox Since PHP 4.0.7 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$imap_stream $mailbox $id $rights"
                        },
                        {
                            "text": "imap_getacl",
                            "type": "function",
                            "description": "Gets the ACL for a given mailbox Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $mailbox"
                        },
                        {
                            "text": "imap_myrights",
                            "type": "function",
                            "rightLabel": "$stream_id $mailbox"
                        },
                        {
                            "text": "imap_setannotation",
                            "type": "function",
                            "rightLabel": "$stream_id $mailbox $entry $attr $value"
                        },
                        {
                            "text": "imap_getannotation",
                            "type": "function",
                            "rightLabel": "$stream_id $mailbox $entry $attr"
                        },
                        {
                            "text": "imap_mail",
                            "type": "function",
                            "description": "Send an email message Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$to $subject $message $additional_headers $cc $bcc $rpath"
                        },
                        {
                            "text": "imap_header",
                            "type": "function",
                            "description": "Alias of imap_headerinfo Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$stream_id $msg_no $from_length $subject_length $default_host"
                        },
                        {
                            "text": "imap_listmailbox",
                            "type": "function",
                            "description": "Alias of imap_list Since PHP 4.0 5.0",
                            "rightLabel": "$stream_id $ref $pattern"
                        },
                        {
                            "text": "imap_getmailboxes",
                            "type": "function",
                            "description": "Read the list of mailboxes, returning detailed information on each one Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $ref $pattern"
                        },
                        {
                            "text": "imap_scanmailbox",
                            "type": "function",
                            "description": "Alias of imap_listscan Since PHP 4.0 5.0",
                            "rightLabel": "$stream_id $ref $pattern $content"
                        },
                        {
                            "text": "imap_listsubscribed",
                            "type": "function",
                            "description": "Alias of imap_lsub Since PHP 4.0 5.0",
                            "rightLabel": "$stream_id $ref $pattern"
                        },
                        {
                            "text": "imap_getsubscribed",
                            "type": "function",
                            "description": "List all the subscribed mailboxes Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$imap_stream $ref $pattern"
                        },
                        {
                            "text": "imap_fetchtext",
                            "type": "function",
                            "description": "(PHP 4, PHP 5)\nAlias of imap_body()",
                            "leftLabel": "string",
                            "rightLabel": "$stream $msg_no $options"
                        },
                        {
                            "text": "imap_scan",
                            "type": "function",
                            "description": "Alias of imap_listscan Since PHP 4.0 5.0",
                            "rightLabel": "$stream_id $ref $pattern $content"
                        },
                        {
                            "text": "imap_create",
                            "type": "function",
                            "description": "Alias of imap_createmailbox Since PHP 4.0 5.0",
                            "rightLabel": "$stream_id $mailbox"
                        },
                        {
                            "text": "imap_rename",
                            "type": "function",
                            "description": "Alias of imap_renamemailbox Since PHP 4.0 5.0",
                            "rightLabel": "$stream_id $old_name $new_name"
                        },
                        {
                            "text": "inotify_add_watch",
                            "type": "function",
                            "description": "Start of inotify v.0.1.6",
                            "rightLabel": "$inotify_instance $pathname $mask"
                        },
                        {
                            "text": "inotify_init",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL inotify >= 0.1.2)\nInitialize an inotify instance for use with {@see inotify_add_watch}",
                            "leftLabel": "resource"
                        },
                        {
                            "text": "inotify_queue_len",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL inotify >= 0.1.2)\nThis function allows to know if {@see inotify_read} will block or not.",
                            "leftLabel": "int",
                            "rightLabel": "$inotify_instance"
                        },
                        {
                            "text": "inotify_read",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL inotify >= 0.1.2)\nRead inotify events from an inotify instance.",
                            "leftLabel": "array",
                            "rightLabel": "$inotify_instance"
                        },
                        {
                            "text": "inotify_rm_watch",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL inotify >= 0.1.2)\nRemoves the watch $watch_descriptor from the inotify instance $inotify_instance.",
                            "leftLabel": "bool",
                            "rightLabel": "$inotify_instance $watch_descriptor"
                        },
                        {
                            "text": "ibase_connect",
                            "type": "function",
                            "description": "Start of interbase v.",
                            "rightLabel": "$database $username $password $charset $buffers $dialect $role $sync"
                        },
                        {
                            "text": "ibase_pconnect",
                            "type": "function",
                            "description": "Open a persistent connection to an InterBase database Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$database $username $password $charset $buffers $dialect $role $sync"
                        },
                        {
                            "text": "ibase_close",
                            "type": "function",
                            "description": "Close a connection to an InterBase database Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "ibase_drop_db",
                            "type": "function",
                            "description": "Drops a database Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "ibase_query",
                            "type": "function",
                            "description": "Execute a query on an InterBase database Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $query $bind_args"
                        },
                        {
                            "text": "ibase_fetch_row",
                            "type": "function",
                            "description": "Fetch a row from an InterBase database Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result_identifier $fetch_flag"
                        },
                        {
                            "text": "ibase_fetch_assoc",
                            "type": "function",
                            "description": "Fetch a result row from a query as an associative array Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $fetch_flag"
                        },
                        {
                            "text": "ibase_fetch_object",
                            "type": "function",
                            "description": "Get an object from a InterBase database Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$result_id $fetch_flag"
                        },
                        {
                            "text": "ibase_free_result",
                            "type": "function",
                            "description": "Free a result set Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_identifier"
                        },
                        {
                            "text": "ibase_name_result",
                            "type": "function",
                            "description": "Assigns a name to a result set Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result $name"
                        },
                        {
                            "text": "ibase_prepare",
                            "type": "function",
                            "description": "Prepare a query for later binding of parameter placeholders and execution Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$query"
                        },
                        {
                            "text": "ibase_execute",
                            "type": "function",
                            "description": "Execute a previously prepared query Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$query $bind_arg $_"
                        },
                        {
                            "text": "ibase_free_query",
                            "type": "function",
                            "description": "Free memory allocated by a prepared query Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$query"
                        },
                        {
                            "text": "ibase_gen_id",
                            "type": "function",
                            "description": "Increments the named generator and returns its new value Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$generator $increment $link_identifier"
                        },
                        {
                            "text": "ibase_num_fields",
                            "type": "function",
                            "description": "Get the number of fields in a result set Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "ibase_num_params",
                            "type": "function",
                            "description": "Return the number of parameters in a prepared query Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$query"
                        },
                        {
                            "text": "ibase_affected_rows",
                            "type": "function",
                            "description": "Return the number of rows that were affected by the previous query Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "ibase_field_info",
                            "type": "function",
                            "description": "Get information about a field Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "ibase_param_info",
                            "type": "function",
                            "description": "Return information about a parameter in a prepared query Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$query $param_number"
                        },
                        {
                            "text": "ibase_trans",
                            "type": "function",
                            "description": "Begin a transaction Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$trans_args $link_identifier"
                        },
                        {
                            "text": "ibase_commit",
                            "type": "function",
                            "description": "Commit a transaction Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_or_trans_identifier"
                        },
                        {
                            "text": "ibase_rollback",
                            "type": "function",
                            "description": "Roll back a transaction Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_or_trans_identifier"
                        },
                        {
                            "text": "ibase_commit_ret",
                            "type": "function",
                            "description": "Commit a transaction without closing it Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_or_trans_identifier"
                        },
                        {
                            "text": "ibase_rollback_ret",
                            "type": "function",
                            "description": "Roll back a transaction without closing it Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_or_trans_identifier"
                        },
                        {
                            "text": "ibase_blob_info",
                            "type": "function",
                            "description": "Return blob length and other useful info Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$link_identifier $blob_id"
                        },
                        {
                            "text": "ibase_blob_create",
                            "type": "function",
                            "description": "Create a new blob for adding data Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "ibase_blob_add",
                            "type": "function",
                            "description": "Add data into a newly created blob Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$blob_handle $data"
                        },
                        {
                            "text": "ibase_blob_cancel",
                            "type": "function",
                            "description": "Cancel creating blob Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$blob_handle"
                        },
                        {
                            "text": "ibase_blob_close",
                            "type": "function",
                            "description": "Close blob Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$blob_handle"
                        },
                        {
                            "text": "ibase_blob_open",
                            "type": "function",
                            "description": "Open blob for retrieving data parts Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $blob_id"
                        },
                        {
                            "text": "ibase_blob_get",
                            "type": "function",
                            "description": "Get len bytes data from open blob Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$blob_handle $len"
                        },
                        {
                            "text": "ibase_blob_echo",
                            "type": "function",
                            "description": "Output blob contents to browser Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$blob_id"
                        },
                        {
                            "text": "ibase_blob_import",
                            "type": "function",
                            "description": "Create blob, copy file in it, and close it Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier $file_handle"
                        },
                        {
                            "text": "ibase_errmsg",
                            "type": "function",
                            "description": "Return error messages Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ibase_errcode",
                            "type": "function",
                            "description": "Return an error code Since PHP 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ibase_add_user",
                            "type": "function",
                            "description": "Add a user to a security database (only for IB6 or later) Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$service_handle $user_name $password $first_name $middle_name $last_name"
                        },
                        {
                            "text": "ibase_modify_user",
                            "type": "function",
                            "description": "Modify a user to a security database (only for IB6 or later) Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$service_handle $user_name $password $first_name $middle_name $last_name"
                        },
                        {
                            "text": "ibase_delete_user",
                            "type": "function",
                            "description": "Delete a user from a security database (only for IB6 or later) Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$service_handle $user_name"
                        },
                        {
                            "text": "ibase_service_attach",
                            "type": "function",
                            "description": "Connect to the service manager Since PHP 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$host $dba_username $dba_password"
                        },
                        {
                            "text": "ibase_service_detach",
                            "type": "function",
                            "description": "Disconnect from the service manager Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$service_handle"
                        },
                        {
                            "text": "ibase_backup",
                            "type": "function",
                            "description": "Initiates a backup task in the service manager and returns immediately Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$service_handle $source_db $dest_file $options $verbose"
                        },
                        {
                            "text": "ibase_restore",
                            "type": "function",
                            "description": "Initiates a restore task in the service manager and returns immediately Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$service_handle $source_file $dest_db $options $verbose"
                        },
                        {
                            "text": "ibase_maintain_db",
                            "type": "function",
                            "description": "Execute a maintenance command on the database server Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$service_handle $db $action $argument"
                        },
                        {
                            "text": "ibase_db_info",
                            "type": "function",
                            "description": "Request statistics about a database Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$service_handle $db $action $argument"
                        },
                        {
                            "text": "ibase_server_info",
                            "type": "function",
                            "description": "Request information about a database server Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$service_handle $action"
                        },
                        {
                            "text": "ibase_wait_event",
                            "type": "function",
                            "description": "Wait for an event to be posted by the database Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$event_name1 $event_name2 $_"
                        },
                        {
                            "text": "ibase_set_event_handler",
                            "type": "function",
                            "description": "Register a callback function to be called when events are posted Since PHP 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$event_handler $event_name1 $event_name2 $_"
                        },
                        {
                            "text": "ibase_free_event_handler",
                            "type": "function",
                            "description": "Cancels a registered event handler Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$event"
                        },
                        {
                            "text": "fbird_connect",
                            "type": "function"
                        },
                        {
                            "text": "fbird_pconnect",
                            "type": "function"
                        },
                        {
                            "text": "fbird_close",
                            "type": "function"
                        },
                        {
                            "text": "fbird_drop_db",
                            "type": "function"
                        },
                        {
                            "text": "fbird_query",
                            "type": "function"
                        },
                        {
                            "text": "fbird_fetch_row",
                            "type": "function"
                        },
                        {
                            "text": "fbird_fetch_assoc",
                            "type": "function"
                        },
                        {
                            "text": "fbird_fetch_object",
                            "type": "function"
                        },
                        {
                            "text": "fbird_free_result",
                            "type": "function"
                        },
                        {
                            "text": "fbird_name_result",
                            "type": "function"
                        },
                        {
                            "text": "fbird_prepare",
                            "type": "function"
                        },
                        {
                            "text": "fbird_execute",
                            "type": "function"
                        },
                        {
                            "text": "fbird_free_query",
                            "type": "function"
                        },
                        {
                            "text": "fbird_gen_id",
                            "type": "function"
                        },
                        {
                            "text": "fbird_num_fields",
                            "type": "function"
                        },
                        {
                            "text": "fbird_num_params",
                            "type": "function"
                        },
                        {
                            "text": "fbird_affected_rows",
                            "type": "function"
                        },
                        {
                            "text": "fbird_field_info",
                            "type": "function"
                        },
                        {
                            "text": "fbird_param_info",
                            "type": "function"
                        },
                        {
                            "text": "fbird_trans",
                            "type": "function"
                        },
                        {
                            "text": "fbird_commit",
                            "type": "function"
                        },
                        {
                            "text": "fbird_rollback",
                            "type": "function"
                        },
                        {
                            "text": "fbird_commit_ret",
                            "type": "function"
                        },
                        {
                            "text": "fbird_rollback_ret",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_info",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_create",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_add",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_cancel",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_close",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_open",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_get",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_echo",
                            "type": "function"
                        },
                        {
                            "text": "fbird_blob_import",
                            "type": "function"
                        },
                        {
                            "text": "fbird_errmsg",
                            "type": "function"
                        },
                        {
                            "text": "fbird_errcode",
                            "type": "function"
                        },
                        {
                            "text": "fbird_add_user",
                            "type": "function"
                        },
                        {
                            "text": "fbird_modify_user",
                            "type": "function"
                        },
                        {
                            "text": "fbird_delete_user",
                            "type": "function"
                        },
                        {
                            "text": "fbird_service_attach",
                            "type": "function"
                        },
                        {
                            "text": "fbird_service_detach",
                            "type": "function"
                        },
                        {
                            "text": "fbird_backup",
                            "type": "function"
                        },
                        {
                            "text": "fbird_restore",
                            "type": "function"
                        },
                        {
                            "text": "fbird_maintain_db",
                            "type": "function"
                        },
                        {
                            "text": "fbird_db_info",
                            "type": "function"
                        },
                        {
                            "text": "fbird_server_info",
                            "type": "function"
                        },
                        {
                            "text": "fbird_wait_event",
                            "type": "function"
                        },
                        {
                            "text": "fbird_set_event_handler",
                            "type": "function"
                        },
                        {
                            "text": "fbird_free_event_handler",
                            "type": "function"
                        },
                        {
                            "text": "collator_create",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nCreate a collator",
                            "leftLabel": "Collator",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "collator_compare",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nCompare two Unicode strings",
                            "leftLabel": "int",
                            "rightLabel": "Collator $object $str1 $str2"
                        },
                        {
                            "text": "collator_get_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet collation attribute value",
                            "leftLabel": "int",
                            "rightLabel": "Collator $object $attr"
                        },
                        {
                            "text": "collator_set_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet collation attribute",
                            "leftLabel": "bool",
                            "rightLabel": "Collator $object $attr $val"
                        },
                        {
                            "text": "collator_get_strength",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet current collation strength",
                            "leftLabel": "int",
                            "rightLabel": "Collator $object"
                        },
                        {
                            "text": "collator_set_strength",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet collation strength",
                            "leftLabel": "bool",
                            "rightLabel": "Collator $object $strength"
                        },
                        {
                            "text": "collator_sort",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSort array using specified collator",
                            "leftLabel": "bool",
                            "rightLabel": "Collator $object array $arr $sort_flag"
                        },
                        {
                            "text": "collator_sort_with_sort_keys",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSort array using specified collator and sort keys",
                            "leftLabel": "bool",
                            "rightLabel": "Collator $object array $arr"
                        },
                        {
                            "text": "collator_asort",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSort array maintaining index association",
                            "leftLabel": "bool",
                            "rightLabel": "Collator $object array $arr $sort_flag"
                        },
                        {
                            "text": "collator_get_locale",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the locale name of the collator",
                            "leftLabel": "string",
                            "rightLabel": "Collator $object $type"
                        },
                        {
                            "text": "collator_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet collator's last error code",
                            "leftLabel": "int",
                            "rightLabel": "Collator $object"
                        },
                        {
                            "text": "collator_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet text for collator's last error code",
                            "leftLabel": "string",
                            "rightLabel": "Collator $object"
                        },
                        {
                            "text": "collator_get_sort_key",
                            "type": "function",
                            "description": "(No version information available, might only be in SVN)\nGet sorting key for a string",
                            "leftLabel": "string",
                            "rightLabel": "Collator $object $str"
                        },
                        {
                            "text": "numfmt_create",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nCreate a number formatter",
                            "leftLabel": "NumberFormatter",
                            "rightLabel": "$locale $style $pattern"
                        },
                        {
                            "text": "numfmt_format",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFormat a number",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $value $type"
                        },
                        {
                            "text": "numfmt_parse",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nParse a number",
                            "leftLabel": "mixed",
                            "rightLabel": "NumberFormatter $fmt $value $type $position"
                        },
                        {
                            "text": "numfmt_format_currency",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFormat a currency value",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $value $currency"
                        },
                        {
                            "text": "numfmt_parse_currency",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nParse a currency number",
                            "leftLabel": "float",
                            "rightLabel": "NumberFormatter $fmt $value $currency $position"
                        },
                        {
                            "text": "numfmt_set_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet an attribute",
                            "leftLabel": "bool",
                            "rightLabel": "NumberFormatter $fmt $attr $value"
                        },
                        {
                            "text": "numfmt_get_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet an attribute",
                            "leftLabel": "int",
                            "rightLabel": "NumberFormatter $fmt $attr"
                        },
                        {
                            "text": "numfmt_set_text_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet a text attribute",
                            "leftLabel": "bool",
                            "rightLabel": "NumberFormatter $fmt $attr $value"
                        },
                        {
                            "text": "numfmt_get_text_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet a text attribute",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $attr"
                        },
                        {
                            "text": "numfmt_set_symbol",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet a symbol value",
                            "leftLabel": "bool",
                            "rightLabel": "NumberFormatter $fmt $attr $value"
                        },
                        {
                            "text": "numfmt_get_symbol",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet a symbol value",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $attr"
                        },
                        {
                            "text": "numfmt_set_pattern",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet formatter pattern",
                            "leftLabel": "bool",
                            "rightLabel": "NumberFormatter $fmt $pattern"
                        },
                        {
                            "text": "numfmt_get_pattern",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet formatter pattern",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $nf"
                        },
                        {
                            "text": "numfmt_get_locale",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet formatter locale",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $type"
                        },
                        {
                            "text": "numfmt_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet formatter's last error code.",
                            "leftLabel": "int",
                            "rightLabel": "NumberFormatter $fmt $nf"
                        },
                        {
                            "text": "numfmt_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet formatter's last error message.",
                            "leftLabel": "string",
                            "rightLabel": "NumberFormatter $fmt $nf"
                        },
                        {
                            "text": "normalizer_normalize",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nNormalizes the input provided and returns the normalized string",
                            "leftLabel": "string",
                            "rightLabel": "$input $form"
                        },
                        {
                            "text": "normalizer_is_normalized",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nChecks if the provided string is already in the specified normalization\nform.",
                            "leftLabel": "bool",
                            "rightLabel": "$input $form"
                        },
                        {
                            "text": "locale_get_default",
                            "type": "function",
                            "description": "Get the default Locale",
                            "leftLabel": "string"
                        },
                        {
                            "text": "locale_set_default",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet the default Locale",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "locale_get_primary_language",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGets the primary language for the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "locale_get_script",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGets the script for the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "locale_get_region",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGets the region for the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "locale_get_keywords",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGets the keywords for the input locale",
                            "leftLabel": "array",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "locale_get_display_script",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns an appropriately localized display name for script of the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale $in_locale"
                        },
                        {
                            "text": "locale_get_display_region",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns an appropriately localized display name for region of the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale $in_locale"
                        },
                        {
                            "text": "locale_get_display_name",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns an appropriately localized display name for the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale $in_locale"
                        },
                        {
                            "text": "locale_get_display_language",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns an appropriately localized display name for language of the inputlocale",
                            "leftLabel": "string",
                            "rightLabel": "$locale $in_locale"
                        },
                        {
                            "text": "locale_get_display_variant",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns an appropriately localized display name for variants of the input locale",
                            "leftLabel": "string",
                            "rightLabel": "$locale $in_locale"
                        },
                        {
                            "text": "locale_compose",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns a correctly ordered and delimited locale ID",
                            "leftLabel": "string",
                            "rightLabel": "array $subtags"
                        },
                        {
                            "text": "locale_parse",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns a key-value array of locale ID subtag elements.",
                            "leftLabel": "array",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "locale_get_all_variants",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGets the variants for the input locale",
                            "leftLabel": "array",
                            "rightLabel": "$locale"
                        },
                        {
                            "text": "locale_filter_matches",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nChecks if a language tag filter matches with locale",
                            "leftLabel": "bool",
                            "rightLabel": "$langtag $locale $canonicalize"
                        },
                        {
                            "text": "locale_canonicalize",
                            "type": "function",
                            "rightLabel": "$arg1"
                        },
                        {
                            "text": "locale_lookup",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSearches the language tag list for the best match to the language",
                            "leftLabel": "string",
                            "rightLabel": "array $langtag $locale $canonicalize $default"
                        },
                        {
                            "text": "locale_accept_from_http",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nTries to find out best available locale based on HTTP \"Accept-Language\" header",
                            "leftLabel": "string",
                            "rightLabel": "$header"
                        },
                        {
                            "text": "msgfmt_create",
                            "type": "function",
                            "rightLabel": "$locale $pattern"
                        },
                        {
                            "text": "msgfmt_format",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFormat the message",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $fmt array $args"
                        },
                        {
                            "text": "msgfmt_format_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nQuick format message",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $fmt $locale $pattern array $args"
                        },
                        {
                            "text": "msgfmt_parse",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nParse input string according to pattern",
                            "leftLabel": "array",
                            "rightLabel": "MessageFormatter $fmt $value"
                        },
                        {
                            "text": "msgfmt_parse_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nQuick parse input string",
                            "leftLabel": "array",
                            "rightLabel": "MessageFormatter $fmt $locale $pattern $source"
                        },
                        {
                            "text": "msgfmt_set_pattern",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet the pattern used by the formatter",
                            "leftLabel": "bool",
                            "rightLabel": "MessageFormatter $fmt $pattern"
                        },
                        {
                            "text": "msgfmt_get_pattern",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the pattern used by the formatter",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $fmt $mf"
                        },
                        {
                            "text": "msgfmt_get_locale",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the locale for which the formatter was created.",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $fmt $mf"
                        },
                        {
                            "text": "msgfmt_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the error code from last operation",
                            "leftLabel": "int",
                            "rightLabel": "MessageFormatter $fmt $nf"
                        },
                        {
                            "text": "msgfmt_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the error text from the last operation",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $fmt $coll"
                        },
                        {
                            "text": "datefmt_create",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nCreate a date formatter",
                            "leftLabel": "IntlDateFormatter",
                            "rightLabel": "$locale $datetype $timetype $timezone $calendar $pattern"
                        },
                        {
                            "text": "datefmt_get_datetype",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the datetype used for the IntlDateFormatter",
                            "leftLabel": "int",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_get_timetype",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the timetype used for the IntlDateFormatter",
                            "leftLabel": "int",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_get_calendar",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the calendar used for the IntlDateFormatter",
                            "leftLabel": "int",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_set_calendar",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nsets the calendar used to the appropriate calendar, which must be",
                            "leftLabel": "bool",
                            "rightLabel": "MessageFormatter $mf $which"
                        },
                        {
                            "text": "datefmt_get_locale",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the locale used by formatter",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $mf $which"
                        },
                        {
                            "text": "datefmt_get_timezone_id",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the timezone-id used for the IntlDateFormatter",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_get_calendar_object",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 3.0.0)\nGet copy of formatter's calendar object",
                            "leftLabel": "IntlCalendar"
                        },
                        {
                            "text": "datefmt_get_timezone",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)\n Get formatter's timezone",
                            "leftLabel": "IntlTimeZone | bool"
                        },
                        {
                            "text": "datefmt_set_timezone_id",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSets the time zone to use",
                            "leftLabel": "bool",
                            "rightLabel": "MessageFormatter $mf $zone"
                        },
                        {
                            "text": "datefmt_set_timezone",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)\nSets formatter's timezone",
                            "leftLabel": "bool",
                            "rightLabel": "$zone"
                        },
                        {
                            "text": "datefmt_get_pattern",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the pattern used for the IntlDateFormatter",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_set_pattern",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet the pattern used for the IntlDateFormatter",
                            "leftLabel": "bool",
                            "rightLabel": "MessageFormatter $mf $pattern"
                        },
                        {
                            "text": "datefmt_is_lenient",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the lenient used for the IntlDateFormatter",
                            "leftLabel": "bool",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_set_lenient",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nSet the leniency of the parser",
                            "leftLabel": "bool",
                            "rightLabel": "MessageFormatter $mf $lenient"
                        },
                        {
                            "text": "datefmt_format",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFormat the date\/time value as a string",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $mf $value"
                        },
                        {
                            "text": "datefmt_format_object",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PECL intl >= 3.0.0)\nFormats an object",
                            "leftLabel": "string",
                            "rightLabel": "$object $format $locale"
                        },
                        {
                            "text": "datefmt_parse",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nParse string to a timestamp value",
                            "leftLabel": "int",
                            "rightLabel": "MessageFormatter $mf $value $position"
                        },
                        {
                            "text": "datefmt_localtime",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nParse string to a field-based time value",
                            "leftLabel": "array",
                            "rightLabel": "MessageFormatter $mf $value $position"
                        },
                        {
                            "text": "datefmt_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the error code from last operation",
                            "leftLabel": "int",
                            "rightLabel": "MessageFormatter $mf"
                        },
                        {
                            "text": "datefmt_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the error text from the last operation.",
                            "leftLabel": "string",
                            "rightLabel": "MessageFormatter $mf $coll"
                        },
                        {
                            "text": "grapheme_strlen",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet string length in grapheme units",
                            "leftLabel": "int",
                            "rightLabel": "$input"
                        },
                        {
                            "text": "grapheme_strpos",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFind position (in grapheme units) of first occurrence of a string",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "grapheme_stripos",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFind position (in grapheme units) of first occurrence of a case-insensitive string",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "grapheme_strrpos",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFind position (in grapheme units) of last occurrence of a string",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "grapheme_strripos",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFind position (in grapheme units) of last occurrence of a case-insensitive string",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "grapheme_substr",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturn part of a string",
                            "leftLabel": "int",
                            "rightLabel": "$string $start $length"
                        },
                        {
                            "text": "grapheme_strstr",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns part of haystack string from the first occurrence of needle to the end of haystack.",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $before_needle"
                        },
                        {
                            "text": "grapheme_stristr",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nReturns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $before_needle"
                        },
                        {
                            "text": "grapheme_extract",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nFunction to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $size $extract_type $start $next"
                        },
                        {
                            "text": "idn_to_ascii",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)\nConvert UTF-8 encoded domain name to ASCII",
                            "leftLabel": "string",
                            "rightLabel": "$utf8_domain $errorcode"
                        },
                        {
                            "text": "idn_to_utf8",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)\nConvert ASCII encoded domain name to UTF-8",
                            "leftLabel": "string",
                            "rightLabel": "$ascii_domain $errorcode"
                        },
                        {
                            "text": "intlcal_create_instance",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCreate a new IntlCalendar",
                            "leftLabel": "IntlCalendar",
                            "rightLabel": "$timeZone $locale"
                        },
                        {
                            "text": "intlcal_get_keyword_values_for_locale",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet set of locale keyword values",
                            "leftLabel": "Iterator",
                            "rightLabel": "$key $locale $commonlyUsed"
                        },
                        {
                            "text": "intlcal_get_now",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet number representing the current time",
                            "leftLabel": "float"
                        },
                        {
                            "text": "intlcal_get_available_locales",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet array of locales for which there is data",
                            "leftLabel": "array"
                        },
                        {
                            "text": "intl_get",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the value for a field",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_time",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet time currently represented by the object",
                            "leftLabel": "float",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_set_time",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet the calendar time in milliseconds since the epoch",
                            "leftLabel": "bool",
                            "rightLabel": "$date"
                        },
                        {
                            "text": "intlcal_add",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nAdd a (signed) amount of time to a field",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $field $amount"
                        },
                        {
                            "text": "intlcal_set_time_zone",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet the timezone used by this calendar",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $timeZone"
                        },
                        {
                            "text": "intlcal_after",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether this object's time is after that of the passed object\nhttp:\/\/www.php.net\/manual\/en\/intlcalendar.after.php",
                            "leftLabel": "bool",
                            "rightLabel": "IntlCalendar $calendarObject IntlCalendar $calendar"
                        },
                        {
                            "text": "intlcal_before",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether this object's time is before that of the passed object",
                            "leftLabel": "bool",
                            "rightLabel": "IntlCalendar $calendarObject IntlCalendar $calendar"
                        },
                        {
                            "text": "intlcal_set",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet a time field or several common fields at once",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $year $month $dayOfMonth $hour $minute $second"
                        },
                        {
                            "text": "intlcal_roll",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nAdd value to field without carrying into more significant fields",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $field $amountOrUpOrDown"
                        },
                        {
                            "text": "intlcal_clear",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nClear a field or all fields",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_field_difference",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCalculate difference between given time and this object's time",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $when $field"
                        },
                        {
                            "text": "intlcal_get_actual_maximum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nThe maximum value for a field, considering the object's current time",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_actual_minimum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nThe minimum value for a field, considering the object's current time",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_day_of_week_type",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $dayOfWeek"
                        },
                        {
                            "text": "intlcal_get_first_day_of_week",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the first day of the week for the calendar's locale",
                            "leftLabel": "int",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_greates_minimum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the largest local minimum value for a field",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nGet data from the bundle",
                            "leftLabel": "mixed",
                            "rightLabel": "$calendar $index"
                        },
                        {
                            "text": "intlcal_get_least_maximum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the smallest local maximum for a field",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_greatest_minimum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the largest local minimum value for a field",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_locale",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the locale associated with the object",
                            "leftLabel": "string",
                            "rightLabel": "$calendar $localeType"
                        },
                        {
                            "text": "intcal_get_maximum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the global maximum value for a field",
                            "leftLabel": "string",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_minimal_days_in_first_week",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)",
                            "leftLabel": "int",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_get_minimum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the global minimum value for a field",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_time_zone",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the object's timezone",
                            "leftLabel": "IntlTimeZone",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_get_type",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the calendar type",
                            "leftLabel": "string",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_get_weekend_transition",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet time of the day at which weekend begins or ends",
                            "leftLabel": "int",
                            "rightLabel": "$calendar $dayOfWeek"
                        },
                        {
                            "text": "intlcal_in_daylight_time",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether the object's time is in Daylight Savings Time",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_is_lenient",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether date\/time interpretation is in lenient mode",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_is_set",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether a field is set",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_get_maximum",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the global maximum value for a field",
                            "leftLabel": "string",
                            "rightLabel": "$calendar $field"
                        },
                        {
                            "text": "intlcal_is_equivalent_to",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether another calendar is equal but for a different time",
                            "leftLabel": "bool",
                            "rightLabel": "IntlCalendar $calendarObject IntlCalendar $calendar"
                        },
                        {
                            "text": "intlcal_is_weekend",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nWhether a certain date\/time is in the weekend",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $date"
                        },
                        {
                            "text": "intlcal_set_first_day_of_week",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet the day on which the week is deemed to start",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $dayOfWeek"
                        },
                        {
                            "text": "intlcal_set_lenient",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet whether date\/time interpretation is to be lenient",
                            "leftLabel": "boolean",
                            "rightLabel": "$calendar $isLenient"
                        },
                        {
                            "text": "intlcal_get_repeated_wall_time_option",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet behavior for handling repeating wall time",
                            "leftLabel": "int",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_equals",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCompare time of two IntlCalendar objects for equality",
                            "leftLabel": "bool",
                            "rightLabel": "$calendarObject $calendar"
                        },
                        {
                            "text": "intlcal_get_skipped_wall_time_option",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet behavior for handling skipped wall time",
                            "leftLabel": "int",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_set_repeated_wall_time_option",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet behavior for handling repeating wall times at negative timezone offset transitions",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $wallTimeOption"
                        },
                        {
                            "text": "intlcal_set_skipped_wall_time_option",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nSet behavior for handling skipped wall times at positive timezone offset transitions",
                            "leftLabel": "bool",
                            "rightLabel": "$calendar $wallTimeOption"
                        },
                        {
                            "text": "intlcal_from_date_time",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a2)\nCreate an IntlCalendar from a DateTime object or string",
                            "leftLabel": "IntlCalendar",
                            "rightLabel": "$dateTime"
                        },
                        {
                            "text": "intlcal_to_date_time",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a2)\nConvert an IntlCalendar into a DateTime object",
                            "leftLabel": "DateTime | bool",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet last error code on the object",
                            "leftLabel": "int",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intlcal_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet last error message on the object",
                            "leftLabel": "string",
                            "rightLabel": "$calendar"
                        },
                        {
                            "text": "intltz_count_equivalent_ids",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the number of IDs in the equivalency group that includes the given ID",
                            "leftLabel": "int",
                            "rightLabel": "$zoneId"
                        },
                        {
                            "text": "intlz_create_default",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCreate a new copy of the default timezone for this host",
                            "leftLabel": "IntlTimeZone"
                        },
                        {
                            "text": "intltz_create_enumeration",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)",
                            "leftLabel": "IntlIterator",
                            "rightLabel": "$countryOrRawOffset"
                        },
                        {
                            "text": "intltz_create_time_zone",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)",
                            "leftLabel": "IntlTimeZone",
                            "rightLabel": "$zoneId"
                        },
                        {
                            "text": "intltz_from_date_time_zone",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)",
                            "leftLabel": "IntlTimeZone",
                            "rightLabel": "$zoneId"
                        },
                        {
                            "text": "intltz_get_canonical_id",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID",
                            "leftLabel": "string",
                            "rightLabel": "$zoneId $isSystemID"
                        },
                        {
                            "text": "intltz_get_display_name",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet a name of this time zone suitable for presentation to the user",
                            "leftLabel": "string",
                            "rightLabel": "$obj $isDaylight $style $locale"
                        },
                        {
                            "text": "intltz_get_dst_savings",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the amount of time to be added to local standard time to get local wall clock time",
                            "leftLabel": "int",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_get_equivalent_id",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet an ID in the equivalency group that includes the given ID",
                            "leftLabel": "string",
                            "rightLabel": "$zoneId $index"
                        },
                        {
                            "text": "intltz_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet last error code on the object",
                            "leftLabel": "int",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet last error message on the object",
                            "leftLabel": "string",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_getGMT",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCreate GMT (UTC) timezone",
                            "leftLabel": "IntlTimeZone"
                        },
                        {
                            "text": "intltz_get_id",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet timezone ID",
                            "leftLabel": "string",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_get_offset",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the time zone raw and GMT offset for the given moment in time",
                            "leftLabel": "int",
                            "rightLabel": "$obj $date $local $rawOffset $dstOffset"
                        },
                        {
                            "text": "intltz_get_raw_offset",
                            "type": "function",
                            "description": "Get the raw GMT offset (before taking daylight savings time into account",
                            "leftLabel": "int",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_get_tz_data_version",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nGet the timezone data version currently used by ICU",
                            "leftLabel": "string",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_has_same_rules",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCheck if this zone has the same rules and offset as another zone",
                            "leftLabel": "bool",
                            "rightLabel": "$obj $otherTimeZone"
                        },
                        {
                            "text": "intltz_to_date_time_zone",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nConvert to DateTimeZone object",
                            "leftLabel": "DateTimeZone",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intltz_use_daylight_time",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)\nCheck if this time zone uses daylight savings time",
                            "leftLabel": "bool",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intlgregcal_create_instance",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0 PECL intl >= 3.0.0a1)",
                            "leftLabel": "IntlGregorianCalendar",
                            "rightLabel": "$timeZone $locale"
                        },
                        {
                            "text": "intlgregcal_set_gregorian_change",
                            "type": "function",
                            "rightLabel": "$obj $change"
                        },
                        {
                            "text": "intlgregcal_get_gregorian_change",
                            "type": "function",
                            "leftLabel": "double",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "intlgregcal_is_leap_year",
                            "type": "function",
                            "leftLabel": "bool",
                            "rightLabel": "$year"
                        },
                        {
                            "text": "resourcebundle_create",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nCreate a resource bundle",
                            "leftLabel": "ResourceBundle",
                            "rightLabel": "$locale $bundlename $fallback"
                        },
                        {
                            "text": "resourcebundle_get",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nGet data from the bundle",
                            "leftLabel": "mixed",
                            "rightLabel": "ResourceBundle $r $index"
                        },
                        {
                            "text": "resourcebundle_count",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nGet number of elements in the bundle",
                            "leftLabel": "int",
                            "rightLabel": "ResourceBundle $r $bundle"
                        },
                        {
                            "text": "resourcebundle_locales",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nGet supported locales",
                            "leftLabel": "array",
                            "rightLabel": "ResourceBundle $r $bundlename"
                        },
                        {
                            "text": "resourcebundle_get_error_code",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nGet bundle's last error code.",
                            "leftLabel": "int",
                            "rightLabel": "ResourceBundle $bundle"
                        },
                        {
                            "text": "resourcebundle_get_error_message",
                            "type": "function",
                            "description": "(PHP >= 5.3.2, PECL intl >= 2.0.0)\nGet bundle's last error message.",
                            "leftLabel": "string",
                            "rightLabel": "ResourceBundle $bundle"
                        },
                        {
                            "text": "transliterator_create",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nCreate a transliterator",
                            "leftLabel": "Transliterator",
                            "rightLabel": "$id $direction"
                        },
                        {
                            "text": "transliterator_create_from_rules",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nCreate transliterator from rules",
                            "leftLabel": "Transliterator",
                            "rightLabel": "$rules $direction"
                        },
                        {
                            "text": "transliterator_list_ids",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nGet transliterator IDs",
                            "leftLabel": "array"
                        },
                        {
                            "text": "transliterator_create_inverse",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nCreate an inverse transliterator",
                            "leftLabel": "Transliterator",
                            "rightLabel": "Transliterator $orig_trans"
                        },
                        {
                            "text": "transliterator_transliterate",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nTransliterate a string",
                            "leftLabel": "string",
                            "rightLabel": "$transliterator $subject $start $end"
                        },
                        {
                            "text": "transliterator_get_error_code",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nGet last error code",
                            "leftLabel": "int",
                            "rightLabel": "Transliterator $trans"
                        },
                        {
                            "text": "transliterator_get_error_message",
                            "type": "function",
                            "description": "(PHP >= 5.4.0, PECL intl >= 2.0.0)\nGet last error message",
                            "leftLabel": "string",
                            "rightLabel": "Transliterator $trans"
                        },
                        {
                            "text": "intl_get_error_code",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet the last error code",
                            "leftLabel": "int"
                        },
                        {
                            "text": "intl_get_error_message",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet description of the last error",
                            "leftLabel": "string"
                        },
                        {
                            "text": "intl_is_failure",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nCheck whether the given error code indicates failure",
                            "leftLabel": "bool",
                            "rightLabel": "$error_code"
                        },
                        {
                            "text": "intl_error_name",
                            "type": "function",
                            "description": "(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)\nGet symbolic name for a given error code",
                            "leftLabel": "string",
                            "rightLabel": "$error_code"
                        },
                        {
                            "text": "json_encode",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL json >= 1.2.0)\nReturns the JSON representation of a value",
                            "leftLabel": "string",
                            "rightLabel": "$value $options $depth"
                        },
                        {
                            "text": "json_decode",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL json >= 1.2.0)\nDecodes a JSON string",
                            "leftLabel": "mixed",
                            "rightLabel": "$json $assoc $depth $options"
                        },
                        {
                            "text": "json_last_error",
                            "type": "function",
                            "description": "Returns the last error occurred Since PHP 5.3.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "json_last_error_msg",
                            "type": "function",
                            "description": "Returns the error string of the last json_encode() or json_decode() call Since PHP 5.5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ldap_connect",
                            "type": "function",
                            "description": "Start of ldap v.",
                            "rightLabel": "$hostname $port"
                        },
                        {
                            "text": "ldap_close",
                            "type": "function",
                            "description": "Alias of ldap_unbind Since PHP 4.0 5.0",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "ldap_bind",
                            "type": "function",
                            "description": "Bind to LDAP directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $bind_rdn $bind_password"
                        },
                        {
                            "text": "ldap_sasl_bind",
                            "type": "function",
                            "description": "Bind to LDAP directory using SASL Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $binddn $password $sasl_mech $sasl_realm $sasl_authc_id $sasl_authz_id $props"
                        },
                        {
                            "text": "ldap_unbind",
                            "type": "function",
                            "description": "Unbind from LDAP directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "ldap_read",
                            "type": "function",
                            "description": "Read an entry Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $base_dn $filter array $attributes $attrsonly $sizelimit $timelimit $deref"
                        },
                        {
                            "text": "ldap_list",
                            "type": "function",
                            "description": "Single-level search Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $base_dn $filter array $attributes $attrsonly $sizelimit $timelimit $deref"
                        },
                        {
                            "text": "ldap_search",
                            "type": "function",
                            "description": "Search LDAP tree Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $base_dn $filter array $attributes $attrsonly $sizelimit $timelimit $deref"
                        },
                        {
                            "text": "ldap_free_result",
                            "type": "function",
                            "description": "Free result memory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_identifier"
                        },
                        {
                            "text": "ldap_count_entries",
                            "type": "function",
                            "description": "Count the number of entries in a search Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier $result_identifier"
                        },
                        {
                            "text": "ldap_first_entry",
                            "type": "function",
                            "description": "Return first result id Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $result_identifier"
                        },
                        {
                            "text": "ldap_next_entry",
                            "type": "function",
                            "description": "Get next result entry Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier $result_entry_identifier"
                        },
                        {
                            "text": "ldap_get_entries",
                            "type": "function",
                            "description": "Get all result entries Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$link_identifier $result_identifier"
                        },
                        {
                            "text": "ldap_first_attribute",
                            "type": "function",
                            "description": "Return first attribute Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier $result_entry_identifier"
                        },
                        {
                            "text": "ldap_next_attribute",
                            "type": "function",
                            "description": "Get the next attribute in result Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier $result_entry_identifier"
                        },
                        {
                            "text": "ldap_get_attributes",
                            "type": "function",
                            "description": "Get attributes from a search result entry Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$link_identifier $result_entry_identifier"
                        },
                        {
                            "text": "ldap_get_values",
                            "type": "function",
                            "description": "Get all values from a result entry Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$link_identifier $result_entry_identifier $attribute"
                        },
                        {
                            "text": "ldap_get_values_len",
                            "type": "function",
                            "description": "Get all binary values from a result entry Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$link_identifier $result_entry_identifier $attribute"
                        },
                        {
                            "text": "ldap_get_dn",
                            "type": "function",
                            "description": "Get the DN of a result entry Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier $result_entry_identifier"
                        },
                        {
                            "text": "ldap_explode_dn",
                            "type": "function",
                            "description": "Splits DN into its component parts Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$dn $with_attrib"
                        },
                        {
                            "text": "ldap_dn2ufn",
                            "type": "function",
                            "description": "Convert DN to User Friendly Naming format Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$dn"
                        },
                        {
                            "text": "ldap_add",
                            "type": "function",
                            "description": "Add entries to LDAP directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn array $entry"
                        },
                        {
                            "text": "ldap_delete",
                            "type": "function",
                            "description": "Delete an entry from a directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn"
                        },
                        {
                            "text": "ldap_modify",
                            "type": "function",
                            "description": "Modify an LDAP entry Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn array $entry"
                        },
                        {
                            "text": "ldap_mod_add",
                            "type": "function",
                            "description": "Add attribute values to current attributes Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn array $entry"
                        },
                        {
                            "text": "ldap_mod_replace",
                            "type": "function",
                            "description": "Replace attribute values with new ones Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn array $entry"
                        },
                        {
                            "text": "ldap_mod_del",
                            "type": "function",
                            "description": "Delete attribute values from current attributes Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn array $entry"
                        },
                        {
                            "text": "ldap_errno",
                            "type": "function",
                            "description": "Return the LDAP error number of the last LDAP command Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "ldap_err2str",
                            "type": "function",
                            "description": "Convert LDAP error number into string error message Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$errno"
                        },
                        {
                            "text": "ldap_error",
                            "type": "function",
                            "description": "Return the LDAP error message of the last LDAP command Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "ldap_compare",
                            "type": "function",
                            "description": "Compare value of attribute found in entry specified with DN Since PHP 4.0.2 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$link_identifier $dn $attribute $value"
                        },
                        {
                            "text": "ldap_sort",
                            "type": "function",
                            "description": "Sort LDAP result entries Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $result $sortfilter"
                        },
                        {
                            "text": "ldap_rename",
                            "type": "function",
                            "description": "Modify the name of an entry Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $dn $newrdn $newparent $deleteoldrdn"
                        },
                        {
                            "text": "ldap_get_option",
                            "type": "function",
                            "description": "Get the current value for given option Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $option $retval"
                        },
                        {
                            "text": "ldap_set_option",
                            "type": "function",
                            "description": "Set the value of the given option Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier $option $newval"
                        },
                        {
                            "text": "ldap_first_reference",
                            "type": "function",
                            "description": "Return first reference Since PHP 4.0.5 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link $result"
                        },
                        {
                            "text": "ldap_next_reference",
                            "type": "function",
                            "description": "Get next reference Since PHP 4.0.5 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link $entry"
                        },
                        {
                            "text": "ldap_parse_reference",
                            "type": "function",
                            "description": "Extract information from reference entry Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $entry array $referrals"
                        },
                        {
                            "text": "ldap_parse_result",
                            "type": "function",
                            "description": "Extract information from result Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $result $errcode $matcheddn $errmsg array $referrals"
                        },
                        {
                            "text": "ldap_start_tls",
                            "type": "function",
                            "description": "Start TLS Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "ldap_set_rebind_proc",
                            "type": "function",
                            "description": "Set a callback function to do re-binds on referral chasing Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link callable $callback"
                        },
                        {
                            "text": "ldap_control_paged_result",
                            "type": "function",
                            "description": "Send LDAP pagination control Since PHP 5.4.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $pagesize $iscritical $cookie"
                        },
                        {
                            "text": "ldap_control_paged_result_response",
                            "type": "function",
                            "description": "Retrieve the LDAP pagination cookie Since PHP 5.4.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $result $cookie $estimated"
                        },
                        {
                            "text": "ldap_escape",
                            "type": "function",
                            "description": " Since PHP 5.6.0",
                            "leftLabel": "string",
                            "rightLabel": "$subject $ignore $escape"
                        },
                        {
                            "text": "ldap_modify_batch",
                            "type": "function",
                            "description": "(PHP 5.4 >= 5.4.26, PHP 5.5 >= 5.5.10, PHP 5.6 >= 5.6.0)\nBatch and execute modifications on an LDAP entry",
                            "rightLabel": "$link_identifier $dn $entry"
                        },
                        {
                            "text": "event_base_new",
                            "type": "function",
                            "description": "Create and initialize new event base",
                            "leftLabel": "resource | bool"
                        },
                        {
                            "text": "event_base_free",
                            "type": "function",
                            "description": "Destroy event base\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "void",
                            "rightLabel": "$event_base"
                        },
                        {
                            "text": "event_base_loop",
                            "type": "function",
                            "description": "Handle events\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "int",
                            "rightLabel": "$event_base $flags"
                        },
                        {
                            "text": "event_base_loopbreak",
                            "type": "function",
                            "description": "Tells the event_base to exit its loop immediately.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$event_base"
                        },
                        {
                            "text": "event_base_loopexit",
                            "type": "function",
                            "description": "Tells an event_base to stop looping after a given time has elapsed\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$event_base $timeout"
                        },
                        {
                            "text": "event_base_set",
                            "type": "function",
                            "description": "Associate event base with an event\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$event $base"
                        },
                        {
                            "text": "event_base_priority_init",
                            "type": "function",
                            "description": "Set the number of different event priority levels\n(PECL libevent >= 0.0.2)",
                            "leftLabel": "bool",
                            "rightLabel": "$event_base $npriorities"
                        },
                        {
                            "text": "event_new",
                            "type": "function",
                            "description": "Creates and returns a new event resource.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "resource | bool"
                        },
                        {
                            "text": "event_free",
                            "type": "function",
                            "description": "Free event resource.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "void",
                            "rightLabel": "$event"
                        },
                        {
                            "text": "event_add",
                            "type": "function",
                            "description": "Add an event to the set of monitored events\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$event $timeout"
                        },
                        {
                            "text": "event_set",
                            "type": "function",
                            "description": "Prepares the event to be used in {@link event_add}().\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$event $fd $events $callback $arg"
                        },
                        {
                            "text": "event_del",
                            "type": "function",
                            "description": "Remove an event from the set of monitored events.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$event"
                        },
                        {
                            "text": "event_buffer_new",
                            "type": "function",
                            "description": "Create new buffered event\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$stream $readcb $writecb $errorcb $arg"
                        },
                        {
                            "text": "event_buffer_free",
                            "type": "function",
                            "description": "Destroys the specified buffered event and frees all the resources associated.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "void",
                            "rightLabel": "$bevent"
                        },
                        {
                            "text": "event_buffer_base_set",
                            "type": "function",
                            "description": "Associate buffered event with an event base\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$bevent $event_base"
                        },
                        {
                            "text": "event_buffer_priority_set",
                            "type": "function",
                            "description": "Assign a priority to a buffered event. Use it after\ninitializing event, but before adding an event to the event_base.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$bevent $priority"
                        },
                        {
                            "text": "event_buffer_write",
                            "type": "function",
                            "description": "Writes data to the specified buffered event.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$bevent $data $data_size"
                        },
                        {
                            "text": "event_buffer_read",
                            "type": "function",
                            "description": "Reads data from the input buffer of the buffered event.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "string",
                            "rightLabel": "$bevent $data_size"
                        },
                        {
                            "text": "event_buffer_enable",
                            "type": "function",
                            "description": "Enables the specified buffered event.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$bevent $events"
                        },
                        {
                            "text": "event_buffer_disable",
                            "type": "function",
                            "description": "Disable a buffered event\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "bool",
                            "rightLabel": "$bevent $events"
                        },
                        {
                            "text": "event_buffer_timeout_set",
                            "type": "function",
                            "description": "Sets the read and write timeouts for the specified buffered event.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "void",
                            "rightLabel": "$bevent $read_timeout $write_timeout"
                        },
                        {
                            "text": "event_buffer_watermark_set",
                            "type": "function",
                            "description": "Set the watermarks for read and write events.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "void",
                            "rightLabel": "$bevent $events $lowmark $highmark"
                        },
                        {
                            "text": "event_buffer_fd_set",
                            "type": "function",
                            "description": "Changes the file descriptor on which the buffered event operates.\n(PECL libevent >= 0.0.1)",
                            "leftLabel": "void",
                            "rightLabel": "$bevent $fd"
                        },
                        {
                            "text": "event_buffer_set_callback",
                            "type": "function",
                            "description": "Set or reset callbacks for a buffered event\n(PECL libevent >= 0.0.4)",
                            "leftLabel": "bool",
                            "rightLabel": "$bevent $readcb $writecb $errorcb $arg"
                        },
                        {
                            "text": "event_timer_new",
                            "type": "function",
                            "description": "Alias of {@link event_new}().",
                            "leftLabel": "resource | bool"
                        },
                        {
                            "text": "event_timer_set",
                            "type": "function",
                            "description": "Prepares the timer event to be used in {@link event_add}().",
                            "leftLabel": "void",
                            "rightLabel": "$event $callback $arg"
                        },
                        {
                            "text": "event_timer_pending",
                            "type": "function",
                            "description": "Checks if a specific event is pending or scheduled.",
                            "leftLabel": "bool",
                            "rightLabel": "$event $timeout"
                        },
                        {
                            "text": "event_timer_add",
                            "type": "function",
                            "description": "Alias of {@link event_add}().",
                            "leftLabel": "bool",
                            "rightLabel": "$event $timeout"
                        },
                        {
                            "text": "event_timer_del",
                            "type": "function",
                            "description": "Alias of {@link event_del}().",
                            "leftLabel": "bool",
                            "rightLabel": "$event"
                        },
                        {
                            "text": "libxml_set_streams_context",
                            "type": "function",
                            "description": "Set the streams context for the next libxml document load or write Since PHP 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$streams_context"
                        },
                        {
                            "text": "libxml_use_internal_errors",
                            "type": "function",
                            "description": "Disable libxml errors and allow user to fetch error information as needed Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$use_errors"
                        },
                        {
                            "text": "libxml_get_last_error",
                            "type": "function",
                            "description": "Retrieve last error from libxml Since PHP 5.1.0",
                            "leftLabel": "LibXMLError"
                        },
                        {
                            "text": "libxml_clear_errors",
                            "type": "function",
                            "description": "Clear libxml error buffer Since PHP 5.1.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "libxml_get_errors",
                            "type": "function",
                            "description": "Retrieve array of errors Since PHP 5.1.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "libxml_disable_entity_loader",
                            "type": "function",
                            "description": "Disable the ability to load external entities Since PHP 5.2.11",
                            "leftLabel": "bool",
                            "rightLabel": "$disable"
                        },
                        {
                            "text": "libxml_set_external_entity_loader",
                            "type": "function",
                            "description": "Changes the default external entity loader Since PHP 5.4.0",
                            "leftLabel": "void",
                            "rightLabel": "callable $resolver_function"
                        },
                        {
                            "text": "mb_convert_case",
                            "type": "function",
                            "description": "Start of mbstring v.",
                            "rightLabel": "$str $mode $encoding"
                        },
                        {
                            "text": "mb_strtoupper",
                            "type": "function",
                            "description": "Make a string uppercase Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $encoding"
                        },
                        {
                            "text": "mb_strtolower",
                            "type": "function",
                            "description": "Make a string lowercase Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $encoding"
                        },
                        {
                            "text": "mb_language",
                            "type": "function",
                            "description": "Set\/Get current language Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$language"
                        },
                        {
                            "text": "mb_internal_encoding",
                            "type": "function",
                            "description": "Set\/Get internal character encoding Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "mb_http_input",
                            "type": "function",
                            "description": "Detect HTTP input character encoding Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$type"
                        },
                        {
                            "text": "mb_http_output",
                            "type": "function",
                            "description": "Set\/Get HTTP output character encoding Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "mb_detect_order",
                            "type": "function",
                            "description": "Set\/Get character encoding detection order Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$encoding_list"
                        },
                        {
                            "text": "mb_substitute_character",
                            "type": "function",
                            "description": "Set\/Get substitution character Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$substrchar"
                        },
                        {
                            "text": "mb_parse_str",
                            "type": "function",
                            "description": "Parse GET\/POST\/COOKIE data and set global variable Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$encoded_string array $result"
                        },
                        {
                            "text": "mb_output_handler",
                            "type": "function",
                            "description": "Callback function converts character encoding in output buffer Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$contents $status"
                        },
                        {
                            "text": "mb_preferred_mime_name",
                            "type": "function",
                            "description": "Get MIME charset string Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "mb_strlen",
                            "type": "function",
                            "description": "Get string length Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str $encoding"
                        },
                        {
                            "text": "mb_strpos",
                            "type": "function",
                            "description": "Find position of first occurrence of string in a string Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset $encoding"
                        },
                        {
                            "text": "mb_strrpos",
                            "type": "function",
                            "description": "Find position of last occurrence of a string in a string Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset $encoding"
                        },
                        {
                            "text": "mb_stripos",
                            "type": "function",
                            "description": "Finds position of first occurrence of a string within another, case insensitive Since PHP 5.2.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset $encoding"
                        },
                        {
                            "text": "mb_strripos",
                            "type": "function",
                            "description": "Finds position of last occurrence of a string within another, case insensitive Since PHP 5.2.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset $encoding"
                        },
                        {
                            "text": "mb_strstr",
                            "type": "function",
                            "description": "Finds first occurrence of a string within another Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $part $encoding"
                        },
                        {
                            "text": "mb_strrchr",
                            "type": "function",
                            "description": "Finds the last occurrence of a character in a string within another Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $part $encoding"
                        },
                        {
                            "text": "mb_stristr",
                            "type": "function",
                            "description": "Finds first occurrence of a string within another, case insensitive Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $part $encoding"
                        },
                        {
                            "text": "mb_strrichr",
                            "type": "function",
                            "description": "Finds the last occurrence of a character in a string within another, case insensitive Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $part $encoding"
                        },
                        {
                            "text": "mb_substr_count",
                            "type": "function",
                            "description": "Count the number of substring occurrences Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $encoding"
                        },
                        {
                            "text": "mb_substr",
                            "type": "function",
                            "description": "Get part of string Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $start $length $encoding"
                        },
                        {
                            "text": "mb_strcut",
                            "type": "function",
                            "description": "Get part of string Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $start $length $encoding"
                        },
                        {
                            "text": "mb_strwidth",
                            "type": "function",
                            "description": "Return width of string Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str $encoding"
                        },
                        {
                            "text": "mb_strimwidth",
                            "type": "function",
                            "description": "Get truncated string with specified width Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $start $width $trimmarker $encoding"
                        },
                        {
                            "text": "mb_convert_encoding",
                            "type": "function",
                            "description": "Convert character encoding Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $to_encoding $from_encoding"
                        },
                        {
                            "text": "mb_detect_encoding",
                            "type": "function",
                            "description": "Detect character encoding Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $encoding_list $strict"
                        },
                        {
                            "text": "mb_list_encodings",
                            "type": "function",
                            "description": "Returns an array of all supported encodings Since PHP 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "mb_encoding_aliases",
                            "type": "function",
                            "description": "(PHP 5  >= 5.3.0)\nGet aliases of a known encoding type",
                            "leftLabel": "array",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "mb_convert_kana",
                            "type": "function",
                            "description": "Convert \"kana\" one from another (\"zen-kaku\", \"han-kaku\" and more) Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $option $encoding"
                        },
                        {
                            "text": "mb_encode_mimeheader",
                            "type": "function",
                            "description": "Encode string for MIME header Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $charset $transfer_encoding $linefeed $indent"
                        },
                        {
                            "text": "mb_decode_mimeheader",
                            "type": "function",
                            "description": "Decode string in MIME header field Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "mb_convert_variables",
                            "type": "function",
                            "description": "Convert character code in variable(s) Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$to_encoding $from_encoding $vars $_"
                        },
                        {
                            "text": "mb_encode_numericentity",
                            "type": "function",
                            "description": "Encode character to HTML numeric string reference Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str array $convmap $encoding"
                        },
                        {
                            "text": "mb_decode_numericentity",
                            "type": "function",
                            "description": "Decode HTML numeric string reference to character Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str array $convmap $encoding"
                        },
                        {
                            "text": "mb_send_mail",
                            "type": "function",
                            "description": "Send encoded mail Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$to $subject $message $additional_headers $additional_parameter"
                        },
                        {
                            "text": "mb_get_info",
                            "type": "function",
                            "description": "Get internal settings of mbstring Since PHP 4.2.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$type"
                        },
                        {
                            "text": "mb_check_encoding",
                            "type": "function",
                            "description": "Check if the string is valid for the specified encoding Since PHP 4.4.3 5.1.3",
                            "leftLabel": "bool",
                            "rightLabel": "$var $encoding"
                        },
                        {
                            "text": "mb_regex_encoding",
                            "type": "function",
                            "description": "Returns current encoding for multibyte regex as string Since PHP 4.2.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "mb_regex_set_options",
                            "type": "function",
                            "description": "Set\/Get the default options for mbregex functions Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$options"
                        },
                        {
                            "text": "mb_ereg",
                            "type": "function",
                            "description": "Regular expression match with multibyte support Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pattern $string array $regs"
                        },
                        {
                            "text": "mb_eregi",
                            "type": "function",
                            "description": "Regular expression match ignoring case with multibyte support Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pattern $string array $regs"
                        },
                        {
                            "text": "mb_ereg_replace",
                            "type": "function",
                            "description": "Replace regular expression with multibyte support Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$pattern $replacement $string $option"
                        },
                        {
                            "text": "mb_ereg_replace_callback",
                            "type": "function",
                            "description": "Perform a regular expresssion seach and replace with multibyte support using a callback Since PHP 5.4.1",
                            "leftLabel": "string",
                            "rightLabel": "$pattern callable $callback $string $option"
                        },
                        {
                            "text": "mb_eregi_replace",
                            "type": "function",
                            "description": "Replace regular expression with multibyte support ignoring case Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$pattern $replace $string $option"
                        },
                        {
                            "text": "mb_split",
                            "type": "function",
                            "description": "Split multibyte string using regular expression Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $string $limit"
                        },
                        {
                            "text": "mb_ereg_match",
                            "type": "function",
                            "description": "Regular expression match for multibyte string Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pattern $string $option"
                        },
                        {
                            "text": "mb_ereg_search",
                            "type": "function",
                            "description": "Multibyte regular expression match for predefined multibyte string Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pattern $option"
                        },
                        {
                            "text": "mb_ereg_search_pos",
                            "type": "function",
                            "description": "Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $option"
                        },
                        {
                            "text": "mb_ereg_search_regs",
                            "type": "function",
                            "description": "Returns the matched part of a multibyte regular expression Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $option"
                        },
                        {
                            "text": "mb_ereg_search_init",
                            "type": "function",
                            "description": "Setup string and regular expression for a multibyte regular expression match Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$string $pattern $option"
                        },
                        {
                            "text": "mb_ereg_search_getregs",
                            "type": "function",
                            "description": "Retrieve the result from the last multibyte regular expression match Since PHP 4.2.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "mb_ereg_search_getpos",
                            "type": "function",
                            "description": "Returns start point for next regular expression match Since PHP 4.2.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "mb_ereg_search_setpos",
                            "type": "function",
                            "description": "Set start point of next regular expression match Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$position"
                        },
                        {
                            "text": "mbregex_encoding",
                            "type": "function",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "mbereg",
                            "type": "function",
                            "rightLabel": "$pattern $string $registers"
                        },
                        {
                            "text": "mberegi",
                            "type": "function",
                            "rightLabel": "$pattern $string $registers"
                        },
                        {
                            "text": "mbereg_replace",
                            "type": "function",
                            "rightLabel": "$pattern $replacement $string $option"
                        },
                        {
                            "text": "mberegi_replace",
                            "type": "function",
                            "rightLabel": "$pattern $replacement $string"
                        },
                        {
                            "text": "mbsplit",
                            "type": "function",
                            "rightLabel": "$pattern $string $limit"
                        },
                        {
                            "text": "mbereg_match",
                            "type": "function",
                            "rightLabel": "$pattern $string $option"
                        },
                        {
                            "text": "mbereg_search",
                            "type": "function",
                            "rightLabel": "$pattern $option"
                        },
                        {
                            "text": "mbereg_search_pos",
                            "type": "function",
                            "rightLabel": "$pattern $option"
                        },
                        {
                            "text": "mbereg_search_regs",
                            "type": "function",
                            "rightLabel": "$pattern $option"
                        },
                        {
                            "text": "mbereg_search_init",
                            "type": "function",
                            "rightLabel": "$string $pattern $option"
                        },
                        {
                            "text": "mbereg_search_getregs",
                            "type": "function"
                        },
                        {
                            "text": "mbereg_search_getpos",
                            "type": "function"
                        },
                        {
                            "text": "mbereg_search_setpos",
                            "type": "function",
                            "rightLabel": "$position"
                        },
                        {
                            "text": "mcrypt_ecb",
                            "type": "function",
                            "description": "Start of mcrypt v.",
                            "rightLabel": "$cipher $key $data $mode"
                        },
                        {
                            "text": "mcrypt_cbc",
                            "type": "function",
                            "description": "Encrypt\/decrypt data in CBC mode Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cipher $key $data $mode $iv"
                        },
                        {
                            "text": "mcrypt_cfb",
                            "type": "function",
                            "description": "Encrypt\/decrypt data in CFB mode Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cipher $key $data $mode $iv"
                        },
                        {
                            "text": "mcrypt_ofb",
                            "type": "function",
                            "description": "Encrypt\/decrypt data in OFB mode Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cipher $key $data $mode $iv"
                        },
                        {
                            "text": "mcrypt_get_key_size",
                            "type": "function",
                            "description": "Get the key size of the specified cipher Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$cipher $mode"
                        },
                        {
                            "text": "mcrypt_get_block_size",
                            "type": "function",
                            "description": "Get the block size of the specified cipher Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$cipher"
                        },
                        {
                            "text": "mcrypt_get_cipher_name",
                            "type": "function",
                            "description": "Get the name of the specified cipher Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cipher"
                        },
                        {
                            "text": "mcrypt_create_iv",
                            "type": "function",
                            "description": "Create an initialization vector (IV) from a random source Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$size $source"
                        },
                        {
                            "text": "mcrypt_list_algorithms",
                            "type": "function",
                            "description": "Get an array of all supported ciphers Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$lib_dir"
                        },
                        {
                            "text": "mcrypt_list_modes",
                            "type": "function",
                            "description": "Get an array of all supported modes Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$lib_dir"
                        },
                        {
                            "text": "mcrypt_get_iv_size",
                            "type": "function",
                            "description": "Returns the size of the IV belonging to a specific cipher\/mode combination Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$cipher $mode"
                        },
                        {
                            "text": "mcrypt_encrypt",
                            "type": "function",
                            "description": "Encrypts plaintext with given parameters Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cipher $key $data $mode $iv"
                        },
                        {
                            "text": "mcrypt_decrypt",
                            "type": "function",
                            "description": "Decrypts crypttext with given parameters Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cipher $key $data $mode $iv"
                        },
                        {
                            "text": "mcrypt_module_open",
                            "type": "function",
                            "description": "Opens the module of the algorithm and the mode to be used Since PHP 4.0.2 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$algorithm $algorithm_directory $mode $mode_directory"
                        },
                        {
                            "text": "mcrypt_generic_init",
                            "type": "function",
                            "description": "This function initializes all buffers needed for encryption Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$td $key $iv"
                        },
                        {
                            "text": "mcrypt_generic",
                            "type": "function",
                            "description": "This function encrypts data Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$td $data"
                        },
                        {
                            "text": "mdecrypt_generic",
                            "type": "function",
                            "description": "Decrypt data Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$td $data"
                        },
                        {
                            "text": "mcrypt_generic_end",
                            "type": "function",
                            "description": "This function terminates encryption Since PHP 4.0.2 5.1.6",
                            "leftLabel": "bool",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_generic_deinit",
                            "type": "function",
                            "description": "This function deinitializes an encryption module Since PHP 4.0.7 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_self_test",
                            "type": "function",
                            "description": "Runs a self test on the opened module Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_is_block_algorithm_mode",
                            "type": "function",
                            "description": "Checks whether the encryption of the opened mode works on blocks Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_is_block_algorithm",
                            "type": "function",
                            "description": "Checks whether the algorithm of the opened mode is a block algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_is_block_mode",
                            "type": "function",
                            "description": "Checks whether the opened mode outputs blocks Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_get_block_size",
                            "type": "function",
                            "description": "Returns the blocksize of the opened algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_get_key_size",
                            "type": "function",
                            "description": "Returns the maximum supported keysize of the opened mode Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_get_supported_key_sizes",
                            "type": "function",
                            "description": "Returns an array with the supported keysizes of the opened algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_get_iv_size",
                            "type": "function",
                            "description": "Returns the size of the IV of the opened algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_get_algorithms_name",
                            "type": "function",
                            "description": "Returns the name of the opened algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_enc_get_modes_name",
                            "type": "function",
                            "description": "Returns the name of the opened mode Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "mcrypt_module_self_test",
                            "type": "function",
                            "description": "This function runs a self test on the specified module Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$algorithm $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_is_block_algorithm_mode",
                            "type": "function",
                            "description": "Returns if the specified module is a block algorithm or not Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$mode $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_is_block_algorithm",
                            "type": "function",
                            "description": "This function checks whether the specified algorithm is a block algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$algorithm $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_is_block_mode",
                            "type": "function",
                            "description": "Returns if the specified mode outputs blocks or not Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$mode $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_get_algo_block_size",
                            "type": "function",
                            "description": "Returns the blocksize of the specified algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$algorithm $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_get_algo_key_size",
                            "type": "function",
                            "description": "Returns the maximum supported keysize of the opened mode Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$algorithm $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_get_supported_key_sizes",
                            "type": "function",
                            "description": "Returns an array with the supported keysizes of the opened algorithm Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$algorithm $lib_dir"
                        },
                        {
                            "text": "mcrypt_module_close",
                            "type": "function",
                            "description": "Close the mcrypt module Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$td"
                        },
                        {
                            "text": "memcache_connect",
                            "type": "function"
                        },
                        {
                            "text": "memcache_pconnect",
                            "type": "function"
                        },
                        {
                            "text": "memcache_add_server",
                            "type": "function"
                        },
                        {
                            "text": "memcache_set_server_params",
                            "type": "function"
                        },
                        {
                            "text": "memcache_set_failure_callback",
                            "type": "function"
                        },
                        {
                            "text": "memcache_get_server_status",
                            "type": "function"
                        },
                        {
                            "text": "memcache_get_version",
                            "type": "function"
                        },
                        {
                            "text": "memcache_add",
                            "type": "function"
                        },
                        {
                            "text": "memcache_set",
                            "type": "function"
                        },
                        {
                            "text": "memcache_replace",
                            "type": "function"
                        },
                        {
                            "text": "memcache_cas",
                            "type": "function"
                        },
                        {
                            "text": "memcache_append",
                            "type": "function"
                        },
                        {
                            "text": "memcache_prepend",
                            "type": "function"
                        },
                        {
                            "text": "memcache_get",
                            "type": "function"
                        },
                        {
                            "text": "memcache_delete",
                            "type": "function"
                        },
                        {
                            "text": "memcache_debug",
                            "type": "function",
                            "description": "(PECL memcache >= 0.2.0)\nTurn debug output on\/off",
                            "leftLabel": "bool",
                            "rightLabel": "$on_off"
                        },
                        {
                            "text": "memcache_get_stats",
                            "type": "function"
                        },
                        {
                            "text": "memcache_get_extended_stats",
                            "type": "function"
                        },
                        {
                            "text": "memcache_set_compress_threshold",
                            "type": "function"
                        },
                        {
                            "text": "memcache_increment",
                            "type": "function"
                        },
                        {
                            "text": "memcache_decrement",
                            "type": "function"
                        },
                        {
                            "text": "memcache_close",
                            "type": "function"
                        },
                        {
                            "text": "memcache_flush",
                            "type": "function"
                        },
                        {
                            "text": "mime_content_type",
                            "type": "function",
                            "description": "Start of mime_magic v.0.1",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "ming_setcubicthreshold",
                            "type": "function",
                            "description": "Set cubic threshold",
                            "leftLabel": "void",
                            "rightLabel": "$threshold"
                        },
                        {
                            "text": "ming_setscale",
                            "type": "function",
                            "description": "Set the global scaling factor.",
                            "leftLabel": "void",
                            "rightLabel": "$scale"
                        },
                        {
                            "text": "ming_useswfversion",
                            "type": "function",
                            "description": "Sets the SWF version",
                            "leftLabel": "void",
                            "rightLabel": "$version"
                        },
                        {
                            "text": "ming_keypress",
                            "type": "function",
                            "description": "Returns the action flag for keyPress(char)",
                            "leftLabel": "int",
                            "rightLabel": "$char"
                        },
                        {
                            "text": "ming_useconstants",
                            "type": "function",
                            "description": "Use constant pool",
                            "leftLabel": "void",
                            "rightLabel": "$use"
                        },
                        {
                            "text": "ming_setswfcompression",
                            "type": "function",
                            "description": "Sets the SWF output compression",
                            "leftLabel": "void",
                            "rightLabel": "$level"
                        },
                        {
                            "text": "mssql_connect",
                            "type": "function",
                            "description": "Start of mssql v.",
                            "rightLabel": "$servername $username $password $new_link"
                        },
                        {
                            "text": "mssql_pconnect",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nOpen persistent MS SQL connection",
                            "leftLabel": "resource",
                            "rightLabel": "$servername $username $password $new_link"
                        },
                        {
                            "text": "mssql_close",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nClose MS SQL Server connection",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mssql_select_db",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nSelect MS SQL database",
                            "leftLabel": "bool",
                            "rightLabel": "$database_name $link_identifier"
                        },
                        {
                            "text": "mssql_query",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nSend MS SQL query",
                            "leftLabel": "mixed",
                            "rightLabel": "$query $link_identifier $batch_size"
                        },
                        {
                            "text": "mssql_fetch_batch",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)\nReturns the next batch of records",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mssql_rows_affected",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)\nReturns the number of records affected by the query",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mssql_free_result",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nFree result memory",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mssql_get_last_message",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nReturns the last message from the server",
                            "leftLabel": "string"
                        },
                        {
                            "text": "mssql_num_rows",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGets the number of rows in result",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mssql_num_fields",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGets the number of fields in result",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mssql_fetch_field",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGet field information",
                            "leftLabel": "object",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mssql_fetch_row",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGet row as enumerated array",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mssql_fetch_array",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nFetch a result row as an associative array, a numeric array, or both",
                            "leftLabel": "array",
                            "rightLabel": "$result $result_type"
                        },
                        {
                            "text": "mssql_fetch_assoc",
                            "type": "function",
                            "description": "(PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1)\nReturns an associative array of the current row in the result",
                            "leftLabel": "array",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "mssql_fetch_object",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nFetch row as object",
                            "leftLabel": "object",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mssql_field_length",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGet the length of a field",
                            "leftLabel": "int",
                            "rightLabel": "$result $offset"
                        },
                        {
                            "text": "mssql_field_name",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGet the name of a field",
                            "leftLabel": "string",
                            "rightLabel": "$result $offset"
                        },
                        {
                            "text": "mssql_field_type",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGets the type of a field",
                            "leftLabel": "string",
                            "rightLabel": "$result $offset"
                        },
                        {
                            "text": "mssql_data_seek",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nMoves internal row pointer",
                            "leftLabel": "bool",
                            "rightLabel": "$result_identifier $row_number"
                        },
                        {
                            "text": "mssql_field_seek",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nSeeks to the specified field offset",
                            "leftLabel": "bool",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mssql_result",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nGet result data",
                            "leftLabel": "string",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "mssql_next_result",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1)\nMove the internal result pointer to the next result",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "mssql_min_error_severity",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nSets the minimum error severity",
                            "leftLabel": "void",
                            "rightLabel": "$severity"
                        },
                        {
                            "text": "mssql_min_message_severity",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL odbtp >= 1.1.1)\nSets the minimum message severity",
                            "leftLabel": "void",
                            "rightLabel": "$severity"
                        },
                        {
                            "text": "mssql_init",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)\nInitializes a stored procedure or a remote stored procedure",
                            "leftLabel": "resource",
                            "rightLabel": "$sp_name $link_identifier"
                        },
                        {
                            "text": "mssql_bind",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)\nAdds a parameter to a stored procedure or a remote stored procedure",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $param_name $var $type $is_output $is_null $maxlen"
                        },
                        {
                            "text": "mssql_execute",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)\nExecutes a stored procedure on a MS SQL server database",
                            "leftLabel": "mixed",
                            "rightLabel": "$stmt $skip_results"
                        },
                        {
                            "text": "mssql_free_statement",
                            "type": "function",
                            "description": "(PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1)\nFree statement memory",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mssql_guid_string",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)\nConverts a 16 byte binary GUID to a string",
                            "leftLabel": "string",
                            "rightLabel": "$binary $short_format"
                        },
                        {
                            "text": "mysql_connect",
                            "type": "function",
                            "description": "Start of mysql v.1.0",
                            "rightLabel": "$server $username $password $new_link $client_flags"
                        },
                        {
                            "text": "mysql_pconnect",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$server $username $password $client_flags"
                        },
                        {
                            "text": "mysql_close",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_select_db",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$database_name $link_identifier"
                        },
                        {
                            "text": "mysql_query",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$query $link_identifier"
                        },
                        {
                            "text": "mysql_unbuffered_query",
                            "type": "function",
                            "description": " Since PHP 4.0.6 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$query $link_identifier"
                        },
                        {
                            "text": "mysql_db_query",
                            "type": "function",
                            "description": "Selects a database and executes a query on it Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$database $query $link_identifier"
                        },
                        {
                            "text": "mysql_list_dbs",
                            "type": "function",
                            "description": "List databases available on a MySQL server Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_list_tables",
                            "type": "function",
                            "description": "List tables in a MySQL database Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$database $link_identifier"
                        },
                        {
                            "text": "mysql_list_fields",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$database_name $table_name $link_identifier"
                        },
                        {
                            "text": "mysql_list_processes",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_error",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_errno",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_affected_rows",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_insert_id",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_result",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "mysql_num_rows",
                            "type": "function",
                            "description": "Get number of rows in result Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_num_fields",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_fetch_row",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_fetch_array",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $result_type"
                        },
                        {
                            "text": "mysql_fetch_assoc",
                            "type": "function",
                            "description": " Since PHP 4.0.3 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_fetch_object",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "stdClass | object",
                            "rightLabel": "$result $class_name array $params"
                        },
                        {
                            "text": "mysql_data_seek",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result $row_number"
                        },
                        {
                            "text": "mysql_fetch_lengths",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_fetch_field",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_field_seek",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_free_result",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_field_name",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_field_table",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_field_len",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_field_type",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_field_flags",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_escape_string",
                            "type": "function",
                            "description": "Escapes a string for use in a mysql_query Since PHP 4.0.3 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$unescaped_string"
                        },
                        {
                            "text": "mysql_real_escape_string",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$unescaped_string $link_identifier"
                        },
                        {
                            "text": "mysql_stat",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_thread_id",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_client_encoding",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_ping",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_get_client_info",
                            "type": "function",
                            "description": " Since PHP 4.0.5 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "mysql_get_host_info",
                            "type": "function",
                            "description": " Since PHP 4.0.5 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_get_proto_info",
                            "type": "function",
                            "description": " Since PHP 4.0.5 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_get_server_info",
                            "type": "function",
                            "description": " Since PHP 4.0.5 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_info",
                            "type": "function",
                            "description": " Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_set_charset",
                            "type": "function",
                            "description": " Since PHP 5.2.3",
                            "leftLabel": "bool",
                            "rightLabel": "$charset $link_identifier"
                        },
                        {
                            "text": "mysql",
                            "type": "function",
                            "rightLabel": "$database_name $query $link_identifier"
                        },
                        {
                            "text": "mysql_fieldname",
                            "type": "function",
                            "rightLabel": "$result $field_index"
                        },
                        {
                            "text": "mysql_fieldtable",
                            "type": "function",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_fieldlen",
                            "type": "function",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_fieldtype",
                            "type": "function",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_fieldflags",
                            "type": "function",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "mysql_selectdb",
                            "type": "function",
                            "rightLabel": "$database_name $link_identifier"
                        },
                        {
                            "text": "mysql_freeresult",
                            "type": "function",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_numfields",
                            "type": "function",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_numrows",
                            "type": "function",
                            "description": "(PHP 4, PHP 5)\nAlias of mysql_num_rows()",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysql_listdbs",
                            "type": "function",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "mysql_listtables",
                            "type": "function",
                            "rightLabel": "$database_name $link_identifier"
                        },
                        {
                            "text": "mysql_listfields",
                            "type": "function",
                            "rightLabel": "$database_name $table_name $link_identifier"
                        },
                        {
                            "text": "mysql_db_name",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "mysql_dbname",
                            "type": "function",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "mysql_tablename",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $i"
                        },
                        {
                            "text": "mysql_table_name",
                            "type": "function",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "mysqli_affected_rows",
                            "type": "function",
                            "description": "(PHP 5)\nGets the number of affected rows in a previous MySQL operation",
                            "leftLabel": "int",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_autocommit",
                            "type": "function",
                            "description": "Turns on or off auto-committing database modifications",
                            "leftLabel": "bool",
                            "rightLabel": "$link $mode"
                        },
                        {
                            "text": "mysqli_begin_transaction",
                            "type": "function",
                            "description": "Starts a transaction Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $flags $name"
                        },
                        {
                            "text": "mysqli_change_user",
                            "type": "function",
                            "description": "Changes the user of the specified database connection",
                            "leftLabel": "bool",
                            "rightLabel": "$link $user $password $database"
                        },
                        {
                            "text": "mysqli_character_set_name",
                            "type": "function",
                            "description": "Returns the default character set for the database connection",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_close",
                            "type": "function",
                            "description": "Closes a previously opened database connection",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_commit",
                            "type": "function",
                            "description": "Commits the current transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_connect",
                            "type": "function",
                            "description": "Open a new connection to the MySQL server\nAlias of mysqli::__construct",
                            "leftLabel": "mysqli",
                            "rightLabel": "$host $user $password $database $port $socket"
                        },
                        {
                            "text": "mysqli_connect_errno",
                            "type": "function",
                            "description": "Returns the error code from last connect call",
                            "leftLabel": "int"
                        },
                        {
                            "text": "mysqli_connect_error",
                            "type": "function",
                            "description": "Returns a string description of the last connect error",
                            "leftLabel": "string"
                        },
                        {
                            "text": "mysqli_data_seek",
                            "type": "function",
                            "description": "Adjusts the result pointer to an arbitrary row in the result",
                            "leftLabel": "bool",
                            "rightLabel": "$result $offset"
                        },
                        {
                            "text": "mysqli_dump_debug_info",
                            "type": "function",
                            "description": "Dump debugging information into the log",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_debug",
                            "type": "function",
                            "description": "Performs debugging operations using the Fred Fish debugging library.",
                            "leftLabel": "bool",
                            "rightLabel": "$message"
                        },
                        {
                            "text": "mysqli_errno",
                            "type": "function",
                            "description": "Returns the error code for the most recent function call",
                            "leftLabel": "int",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_error_list",
                            "type": "function",
                            "description": "Returns a list of errors from the last command executed\nPHP > 5.4.0 ",
                            "leftLabel": "array",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_stmt_error_list",
                            "type": "function",
                            "description": "Returns a list of errors from the last statement executed\nPHP > 5.4.0 ",
                            "leftLabel": "array",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_error",
                            "type": "function",
                            "description": "Returns a string description of the last error",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_stmt_execute",
                            "type": "function",
                            "description": "Executes a prepared Query",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_execute",
                            "type": "function",
                            "description": "Executes a prepared Query Since PHP 5.0\nAlias for <b>mysqli_stmt_execute<\/b>",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_fetch_field",
                            "type": "function",
                            "description": "Returns the next field in the result set",
                            "leftLabel": "object | bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_fetch_fields",
                            "type": "function",
                            "description": "Returns an array of objects representing the fields in a result set",
                            "leftLabel": "array | bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_fetch_field_direct",
                            "type": "function",
                            "description": "Fetch meta-data for a single field",
                            "leftLabel": "object | bool",
                            "rightLabel": "$result $fieldnr"
                        },
                        {
                            "text": "mysqli_fetch_lengths",
                            "type": "function",
                            "description": "Returns the lengths of the columns of the current row in the result set",
                            "leftLabel": "array | bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_fetch_all",
                            "type": "function",
                            "description": "Fetches all result rows as an associative array, a numeric array, or both.",
                            "leftLabel": "array | null",
                            "rightLabel": "$result $resulttype"
                        },
                        {
                            "text": "mysqli_fetch_array",
                            "type": "function",
                            "description": "Fetch a result row as an associative, a numeric array, or both.",
                            "leftLabel": "array | null",
                            "rightLabel": "$result $resulttype"
                        },
                        {
                            "text": "mysqli_fetch_assoc",
                            "type": "function",
                            "description": "Fetch a result row as an associative array",
                            "leftLabel": "array | null",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_fetch_object",
                            "type": "function",
                            "description": "Returns the current row of a result set as an object.",
                            "leftLabel": "object | null",
                            "rightLabel": "$result $class_name $params"
                        },
                        {
                            "text": "mysqli_fetch_row",
                            "type": "function",
                            "description": "Get a result row as an enumerated array",
                            "leftLabel": "array | null",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_field_count",
                            "type": "function",
                            "description": "Returns the number of columns for the most recent query",
                            "leftLabel": "int",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_field_seek",
                            "type": "function",
                            "description": "Set result pointer to a specified field offset",
                            "leftLabel": "bool",
                            "rightLabel": "$result $fieldnr"
                        },
                        {
                            "text": "mysqli_field_tell",
                            "type": "function",
                            "description": "Get current field offset of a result pointer",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_free_result",
                            "type": "function",
                            "description": "Frees the memory associated with a result",
                            "leftLabel": "void",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_get_cache_stats",
                            "type": "function",
                            "description": "Returns client Zval cache statistics Since PHP 5.3.0\nAvailable only with mysqlnd.",
                            "leftLabel": "array | bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_connection_stats",
                            "type": "function",
                            "description": "Returns statistics about the client connection",
                            "leftLabel": "array | bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_client_stats",
                            "type": "function",
                            "description": "Returns client per-process statistics Since PHP 5.3.0",
                            "leftLabel": "array | bool"
                        },
                        {
                            "text": "mysqli_get_charset",
                            "type": "function",
                            "description": "Returns a character set object",
                            "leftLabel": "object",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_client_info",
                            "type": "function",
                            "description": "Get MySQL client info",
                            "leftLabel": "string"
                        },
                        {
                            "text": "mysqli_get_client_version",
                            "type": "function",
                            "description": "Returns the MySQL client version as a string",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_host_info",
                            "type": "function",
                            "description": "Returns a string representing the type of connection used",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_proto_info",
                            "type": "function",
                            "description": "Returns the version of the MySQL protocol used",
                            "leftLabel": "int",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_server_info",
                            "type": "function",
                            "description": "Returns the version of the MySQL server",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_server_version",
                            "type": "function",
                            "description": "Returns the version of the MySQL server as an integer",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_get_warnings",
                            "type": "function",
                            "description": "Get result of SHOW WARNINGS",
                            "leftLabel": "mysqli_warning",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_init",
                            "type": "function",
                            "description": "Initializes MySQLi and returns a resource for use with mysqli_real_connect()",
                            "leftLabel": "mysqli"
                        },
                        {
                            "text": "mysqli_info",
                            "type": "function",
                            "description": "Retrieves information about the most recently executed query",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_insert_id",
                            "type": "function",
                            "description": "Returns the auto generated id used in the last query",
                            "leftLabel": "int | string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_kill",
                            "type": "function",
                            "description": "Asks the server to kill a MySQL thread",
                            "leftLabel": "bool",
                            "rightLabel": "$link $processid"
                        },
                        {
                            "text": "mysqli_set_local_infile_default",
                            "type": "function",
                            "description": "Unsets user defined handler for load local infile command",
                            "leftLabel": "void",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_set_local_infile_handler",
                            "type": "function",
                            "description": "Set callback function for LOAD DATA LOCAL INFILE command",
                            "leftLabel": "bool",
                            "rightLabel": "$link $read_func"
                        },
                        {
                            "text": "mysqli_more_results",
                            "type": "function",
                            "description": "Check if there are any more query results from a multi query",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_multi_query",
                            "type": "function",
                            "description": "Performs a query on the database",
                            "leftLabel": "bool",
                            "rightLabel": "$link $query"
                        },
                        {
                            "text": "mysqli_next_result",
                            "type": "function",
                            "description": "Prepare next result from multi_query",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_num_fields",
                            "type": "function",
                            "description": "Get the number of fields in a result",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_num_rows",
                            "type": "function",
                            "description": "Gets the number of rows in a result",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "mysqli_options",
                            "type": "function",
                            "description": "Set options",
                            "leftLabel": "bool",
                            "rightLabel": "$link $option $value"
                        },
                        {
                            "text": "mysqli_ping",
                            "type": "function",
                            "description": "Pings a server connection, or tries to reconnect if the connection has gone down",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_poll",
                            "type": "function",
                            "description": "Poll connections",
                            "leftLabel": "int | bool",
                            "rightLabel": "array $read array $write $error $sec $usec"
                        },
                        {
                            "text": "mysqli_prepare",
                            "type": "function",
                            "description": "Prepare an SQL statement for execution",
                            "leftLabel": "mysqli_stmt | bool",
                            "rightLabel": "$link $query"
                        },
                        {
                            "text": "mysqli_report",
                            "type": "function",
                            "description": "Enables or disables internal report functions Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$flags"
                        },
                        {
                            "text": "mysqli_query",
                            "type": "function",
                            "description": "Performs a query on the database",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$link $query $resultmode"
                        },
                        {
                            "text": "mysqli_real_connect",
                            "type": "function",
                            "description": "Opens a connection to a mysql server",
                            "leftLabel": "bool",
                            "rightLabel": "$link $host $user $password $database $port $socket $flags"
                        },
                        {
                            "text": "mysqli_real_escape_string",
                            "type": "function",
                            "description": "Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection",
                            "leftLabel": "string",
                            "rightLabel": "$link $escapestr"
                        },
                        {
                            "text": "mysqli_real_query",
                            "type": "function",
                            "description": "Execute an SQL query",
                            "leftLabel": "bool",
                            "rightLabel": "$link $query"
                        },
                        {
                            "text": "mysqli_reap_async_query",
                            "type": "function",
                            "description": "Get result from async query\nAvailable only with mysqlnd.",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_release_savepoint",
                            "type": "function",
                            "description": "Set a named transaction savepoint Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $name"
                        },
                        {
                            "text": "mysqli_rollback",
                            "type": "function",
                            "description": "Rolls back current transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_savepoint",
                            "type": "function",
                            "description": "Set a named transaction savepoint Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $name"
                        },
                        {
                            "text": "mysqli_select_db",
                            "type": "function",
                            "description": "Selects the default database for database queries",
                            "leftLabel": "bool",
                            "rightLabel": "$link $dbname"
                        },
                        {
                            "text": "mysqli_set_charset",
                            "type": "function",
                            "description": "Sets the default client character set",
                            "leftLabel": "bool",
                            "rightLabel": "$link $charset"
                        },
                        {
                            "text": "mysqli_stmt_affected_rows",
                            "type": "function",
                            "description": "Returns the total number of rows changed, deleted, or inserted by the last executed statement",
                            "leftLabel": "int | string",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_attr_get",
                            "type": "function",
                            "description": "Get the current value of a statement attribute",
                            "leftLabel": "int | bool",
                            "rightLabel": "$stmt $attr"
                        },
                        {
                            "text": "mysqli_stmt_attr_set",
                            "type": "function",
                            "description": "Modify the behavior of a prepared statement",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $attr $mode"
                        },
                        {
                            "text": "mysqli_stmt_field_count",
                            "type": "function",
                            "description": "Returns the number of fields in the given statement",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_init",
                            "type": "function",
                            "description": "Initializes a statement and returns an object for use with mysqli_stmt_prepare",
                            "leftLabel": "mysqli_stmt"
                        },
                        {
                            "text": "mysqli_stmt_prepare",
                            "type": "function",
                            "description": "Prepare an SQL statement for execution",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $query"
                        },
                        {
                            "text": "mysqli_stmt_result_metadata",
                            "type": "function",
                            "description": "Returns result set metadata from a prepared statement",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_send_long_data",
                            "type": "function",
                            "description": "Send data in blocks",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $param_nr $data"
                        },
                        {
                            "text": "mysqli_stmt_bind_param",
                            "type": "function",
                            "description": "Binds variables to a prepared statement as parameters",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $types $var1"
                        },
                        {
                            "text": "mysqli_stmt_bind_result",
                            "type": "function",
                            "description": "Binds variables to a prepared statement for result storage",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $var1 $_"
                        },
                        {
                            "text": "mysqli_stmt_fetch",
                            "type": "function",
                            "description": "Fetch results from a prepared statement into the bound variables",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_free_result",
                            "type": "function",
                            "description": "Frees stored result memory for the given statement handle",
                            "leftLabel": "void",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_get_result",
                            "type": "function",
                            "description": "Gets a result set from a prepared statement",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_get_warnings",
                            "type": "function",
                            "description": "Get result of SHOW WARNINGS",
                            "leftLabel": "object",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_insert_id",
                            "type": "function",
                            "description": "Get the ID generated from the previous INSERT operation",
                            "leftLabel": "mixed",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_reset",
                            "type": "function",
                            "description": "Resets a prepared statement",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_param_count",
                            "type": "function",
                            "description": "Returns the number of parameter for the given statement",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_sqlstate",
                            "type": "function",
                            "description": "Returns the SQLSTATE error from previous MySQL operation",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_stat",
                            "type": "function",
                            "description": "Gets the current system status",
                            "leftLabel": "string | bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_ssl_set",
                            "type": "function",
                            "description": "Used for establishing secure connections using SSL Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $key $cert $ca $capath $cipher"
                        },
                        {
                            "text": "mysqli_stmt_close",
                            "type": "function",
                            "description": "Closes a prepared statement",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_data_seek",
                            "type": "function",
                            "description": "Seeks to an arbitrary row in statement result set",
                            "leftLabel": "void",
                            "rightLabel": "$stmt $offset"
                        },
                        {
                            "text": "mysqli_stmt_errno",
                            "type": "function",
                            "description": "Returns the error code for the most recent statement call",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_error",
                            "type": "function",
                            "description": "Returns a string description for last statement error",
                            "leftLabel": "string",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_more_results",
                            "type": "function",
                            "description": "Check if there are more query results from a multiple query",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_next_result",
                            "type": "function",
                            "description": "Reads the next result from a multiple query",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_num_rows",
                            "type": "function",
                            "description": "Return the number of rows in statements result set",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_sqlstate",
                            "type": "function",
                            "description": "Returns SQLSTATE error from previous statement operation",
                            "leftLabel": "string",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_stmt_store_result",
                            "type": "function",
                            "description": "Transfers a result set from a prepared statement",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_store_result",
                            "type": "function",
                            "description": "Transfers a result set from the last query",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_thread_id",
                            "type": "function",
                            "description": "Returns the thread ID for the current connection",
                            "leftLabel": "int",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_thread_safe",
                            "type": "function",
                            "description": "Returns whether thread safety is given or not",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "mysqli_use_result",
                            "type": "function",
                            "description": "Initiate a result set retrieval",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_warning_count",
                            "type": "function",
                            "description": "Returns the number of warnings from the last query for the given link",
                            "leftLabel": "int",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_refresh",
                            "type": "function",
                            "description": "Flushes tables or caches, or resets the replication server information",
                            "leftLabel": "bool",
                            "rightLabel": "$link $options"
                        },
                        {
                            "text": "mysqli_bind_param",
                            "type": "function",
                            "description": "Alias for mysqli_stmt_bind_param Since PHP 5.0",
                            "rightLabel": "$stmt $types"
                        },
                        {
                            "text": "mysqli_bind_result",
                            "type": "function",
                            "description": "Alias for mysqli_stmt_bind_result Since PHP 5.0",
                            "rightLabel": "$stmt $types $var1"
                        },
                        {
                            "text": "mysqli_client_encoding",
                            "type": "function",
                            "description": "Alias of mysqli_character_set_name Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link"
                        },
                        {
                            "text": "mysqli_escape_string",
                            "type": "function",
                            "description": "Alias of mysqli_real_escape_string Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$link $query"
                        },
                        {
                            "text": "mysqli_fetch",
                            "type": "function",
                            "description": "Alias for mysqli_stmt_fetch Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_param_count",
                            "type": "function",
                            "description": "Alias for mysqli_stmt_param_count Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_get_metadata",
                            "type": "function",
                            "description": "Alias for mysqli_stmt_result_metadata Since PHP 5.0",
                            "leftLabel": "mysqli_result | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "mysqli_send_long_data",
                            "type": "function",
                            "description": "Alias for mysqli_stmt_send_long_data Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt $param_nr $data"
                        },
                        {
                            "text": "mysqli_set_opt",
                            "type": "function",
                            "description": "Alias of mysqli_options Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$link $option $value"
                        },
                        {
                            "text": "ncurses_addch",
                            "type": "function",
                            "description": "Start of ncurses v.",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "ncurses_color_set",
                            "type": "function",
                            "description": "Set fore- and background color",
                            "leftLabel": "int",
                            "rightLabel": "$pair"
                        },
                        {
                            "text": "ncurses_delwin",
                            "type": "function",
                            "description": "Delete a ncurses window",
                            "leftLabel": "bool",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_end",
                            "type": "function",
                            "description": "Stop using ncurses, clean up the screen",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_getch",
                            "type": "function",
                            "description": "Read a character from keyboard",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_has_colors",
                            "type": "function",
                            "description": "Check if terminal has colors",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_init",
                            "type": "function",
                            "description": "Initialize ncurses",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ncurses_init_pair",
                            "type": "function",
                            "description": "Allocate a color pair",
                            "leftLabel": "int",
                            "rightLabel": "$pair $fg $bg"
                        },
                        {
                            "text": "ncurses_color_content",
                            "type": "function",
                            "description": "Gets the RGB value for color",
                            "leftLabel": "int",
                            "rightLabel": "$color $r $g $b"
                        },
                        {
                            "text": "ncurses_pair_content",
                            "type": "function",
                            "description": "Gets the RGB value for color",
                            "leftLabel": "int",
                            "rightLabel": "$pair $f $b"
                        },
                        {
                            "text": "ncurses_move",
                            "type": "function",
                            "description": "Move output position",
                            "leftLabel": "int",
                            "rightLabel": "$y $x"
                        },
                        {
                            "text": "ncurses_newwin",
                            "type": "function",
                            "description": "Create a new window",
                            "leftLabel": "resource",
                            "rightLabel": "$rows $cols $y $x"
                        },
                        {
                            "text": "ncurses_refresh",
                            "type": "function",
                            "description": "Refresh screen",
                            "leftLabel": "int",
                            "rightLabel": "$ch"
                        },
                        {
                            "text": "ncurses_start_color",
                            "type": "function",
                            "description": "Start using colors",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_standout",
                            "type": "function",
                            "description": "Start using 'standout' attribute",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_standend",
                            "type": "function",
                            "description": "Stop using 'standout' attribute",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_baudrate",
                            "type": "function",
                            "description": "Returns baudrate of terminal",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_beep",
                            "type": "function",
                            "description": "Let the terminal beep",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_can_change_color",
                            "type": "function",
                            "description": "Check if we can change terminals colors",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_cbreak",
                            "type": "function",
                            "description": "Switch of input buffering",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_clear",
                            "type": "function",
                            "description": "Clear screen",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_clrtobot",
                            "type": "function",
                            "description": "Clear screen from current position to bottom",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_clrtoeol",
                            "type": "function",
                            "description": "Clear screen from current position to end of line",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_def_prog_mode",
                            "type": "function",
                            "description": "Saves terminals (program) mode",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_reset_prog_mode",
                            "type": "function",
                            "description": "Resets the prog mode saved by def_prog_mode",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_def_shell_mode",
                            "type": "function",
                            "description": "Saves terminals (shell) mode",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_reset_shell_mode",
                            "type": "function",
                            "description": "Resets the shell mode saved by def_shell_mode",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_delch",
                            "type": "function",
                            "description": "Delete character at current position, move rest of line left",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_deleteln",
                            "type": "function",
                            "description": "Delete line at current position, move rest of screen up",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_doupdate",
                            "type": "function",
                            "description": "Write all prepared refreshes to terminal",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_echo",
                            "type": "function",
                            "description": "Activate keyboard input echo",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_erase",
                            "type": "function",
                            "description": "Erase terminal screen",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_werase",
                            "type": "function",
                            "description": "Erase window contents",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_erasechar",
                            "type": "function",
                            "description": "Returns current erase character",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ncurses_flash",
                            "type": "function",
                            "description": "Flash terminal screen (visual bell)",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_flushinp",
                            "type": "function",
                            "description": "Flush keyboard input buffer",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_has_ic",
                            "type": "function",
                            "description": "Check for insert- and delete-capabilities",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_has_il",
                            "type": "function",
                            "description": "Check for line insert- and delete-capabilities",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_inch",
                            "type": "function",
                            "description": "Get character and attribute at current position",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ncurses_insertln",
                            "type": "function",
                            "description": "Insert a line, move rest of screen down",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_isendwin",
                            "type": "function",
                            "description": "Ncurses is in endwin mode, normal screen output may be performed",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_killchar",
                            "type": "function",
                            "description": "Returns current line kill character",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ncurses_nl",
                            "type": "function",
                            "description": "Translate newline and carriage return \/ line feed",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_nocbreak",
                            "type": "function",
                            "description": "Switch terminal to cooked mode",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_noecho",
                            "type": "function",
                            "description": "Switch off keyboard input echo",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_nonl",
                            "type": "function",
                            "description": "Do not translate newline and carriage return \/ line feed",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_noraw",
                            "type": "function",
                            "description": "Switch terminal out of raw mode",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_raw",
                            "type": "function",
                            "description": "Switch terminal into raw mode",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_meta",
                            "type": "function",
                            "description": "Enables\/Disable 8-bit meta key information",
                            "leftLabel": "int",
                            "rightLabel": "$window $bit8"
                        },
                        {
                            "text": "ncurses_resetty",
                            "type": "function",
                            "description": "Restores saved terminal state",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_savetty",
                            "type": "function",
                            "description": "Saves terminal state",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_termattrs",
                            "type": "function",
                            "description": "Returns a logical OR of all attribute flags supported by terminal",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_use_default_colors",
                            "type": "function",
                            "description": "Assign terminal default colors to color id -1",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_slk_attr",
                            "type": "function",
                            "description": "Returns current soft label key attribute",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_slk_clear",
                            "type": "function",
                            "description": "Clears soft labels from screen",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_slk_noutrefresh",
                            "type": "function",
                            "description": "Copies soft label keys to virtual screen",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ncurses_slk_refresh",
                            "type": "function",
                            "description": "Copies soft label keys to screen",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_slk_restore",
                            "type": "function",
                            "description": "Restores soft label keys",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_slk_touch",
                            "type": "function",
                            "description": "Forces output when ncurses_slk_noutrefresh is performed",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ncurses_attroff",
                            "type": "function",
                            "description": "Turn off the given attributes",
                            "leftLabel": "int",
                            "rightLabel": "$attributes"
                        },
                        {
                            "text": "ncurses_attron",
                            "type": "function",
                            "description": "Turn on the given attributes",
                            "leftLabel": "int",
                            "rightLabel": "$attributes"
                        },
                        {
                            "text": "ncurses_attrset",
                            "type": "function",
                            "description": "Set given attributes",
                            "leftLabel": "int",
                            "rightLabel": "$attributes"
                        },
                        {
                            "text": "ncurses_bkgd",
                            "type": "function",
                            "description": "Set background property for terminal screen",
                            "leftLabel": "int",
                            "rightLabel": "$attrchar"
                        },
                        {
                            "text": "ncurses_curs_set",
                            "type": "function",
                            "description": "Set cursor state",
                            "leftLabel": "int",
                            "rightLabel": "$visibility"
                        },
                        {
                            "text": "ncurses_delay_output",
                            "type": "function",
                            "description": "Delay output on terminal using padding characters",
                            "leftLabel": "int",
                            "rightLabel": "$milliseconds"
                        },
                        {
                            "text": "ncurses_echochar",
                            "type": "function",
                            "description": "Single character output including refresh",
                            "leftLabel": "int",
                            "rightLabel": "$character"
                        },
                        {
                            "text": "ncurses_halfdelay",
                            "type": "function",
                            "description": "Put terminal into halfdelay mode",
                            "leftLabel": "int",
                            "rightLabel": "$tenth"
                        },
                        {
                            "text": "ncurses_has_key",
                            "type": "function",
                            "description": "Check for presence of a function key on terminal keyboard",
                            "leftLabel": "int",
                            "rightLabel": "$keycode"
                        },
                        {
                            "text": "ncurses_insch",
                            "type": "function",
                            "description": "Insert character moving rest of line including character at current position",
                            "leftLabel": "int",
                            "rightLabel": "$character"
                        },
                        {
                            "text": "ncurses_insdelln",
                            "type": "function",
                            "description": "Insert lines before current line scrolling down (negative numbers delete and scroll up)",
                            "leftLabel": "int",
                            "rightLabel": "$count"
                        },
                        {
                            "text": "ncurses_mouseinterval",
                            "type": "function",
                            "description": "Set timeout for mouse button clicks",
                            "leftLabel": "int",
                            "rightLabel": "$milliseconds"
                        },
                        {
                            "text": "ncurses_napms",
                            "type": "function",
                            "description": "Sleep",
                            "leftLabel": "int",
                            "rightLabel": "$milliseconds"
                        },
                        {
                            "text": "ncurses_scrl",
                            "type": "function",
                            "description": "Scroll window content up or down without changing current position",
                            "leftLabel": "int",
                            "rightLabel": "$count"
                        },
                        {
                            "text": "ncurses_slk_attroff",
                            "type": "function",
                            "description": "Turn off the given attributes for soft function-key labels",
                            "leftLabel": "int",
                            "rightLabel": "$intarg"
                        },
                        {
                            "text": "ncurses_slk_attron",
                            "type": "function",
                            "description": "Turn on the given attributes for soft function-key labels",
                            "leftLabel": "int",
                            "rightLabel": "$intarg"
                        },
                        {
                            "text": "ncurses_slk_attrset",
                            "type": "function",
                            "description": "Set given attributes for soft function-key labels",
                            "leftLabel": "int",
                            "rightLabel": "$intarg"
                        },
                        {
                            "text": "ncurses_slk_color",
                            "type": "function",
                            "description": "Sets color for soft label keys",
                            "leftLabel": "int",
                            "rightLabel": "$intarg"
                        },
                        {
                            "text": "ncurses_slk_init",
                            "type": "function",
                            "description": "Initializes soft label key functions",
                            "leftLabel": "bool",
                            "rightLabel": "$format"
                        },
                        {
                            "text": "ncurses_slk_set",
                            "type": "function",
                            "description": "Sets function key labels",
                            "leftLabel": "bool",
                            "rightLabel": "$labelnr $label $format"
                        },
                        {
                            "text": "ncurses_typeahead",
                            "type": "function",
                            "description": "Specify different filedescriptor for typeahead checking",
                            "leftLabel": "int",
                            "rightLabel": "$fd"
                        },
                        {
                            "text": "ncurses_ungetch",
                            "type": "function",
                            "description": "Put a character back into the input stream",
                            "leftLabel": "int",
                            "rightLabel": "$keycode"
                        },
                        {
                            "text": "ncurses_vidattr",
                            "type": "function",
                            "description": "Display the string on the terminal in the video attribute mode",
                            "leftLabel": "int",
                            "rightLabel": "$intarg"
                        },
                        {
                            "text": "ncurses_wrefresh",
                            "type": "function",
                            "description": "Refresh window on terminal screen",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_use_extended_names",
                            "type": "function",
                            "description": "Control use of extended names in terminfo descriptions",
                            "leftLabel": "int",
                            "rightLabel": "$flag"
                        },
                        {
                            "text": "ncurses_bkgdset",
                            "type": "function",
                            "description": "Control screen background",
                            "leftLabel": "void",
                            "rightLabel": "$attrchar"
                        },
                        {
                            "text": "ncurses_filter",
                            "type": "function",
                            "description": "Set LINES for iniscr() and newterm() to 1",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ncurses_noqiflush",
                            "type": "function",
                            "description": "Do not flush on signal characters",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ncurses_qiflush",
                            "type": "function",
                            "description": "Flush on signal characters",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ncurses_timeout",
                            "type": "function",
                            "description": "Set timeout for special key sequences",
                            "leftLabel": "void",
                            "rightLabel": "$millisec"
                        },
                        {
                            "text": "ncurses_use_env",
                            "type": "function",
                            "description": "Control use of environment information about terminal size",
                            "leftLabel": "void",
                            "rightLabel": "$flag"
                        },
                        {
                            "text": "ncurses_addstr",
                            "type": "function",
                            "description": "Output text at current position",
                            "leftLabel": "int",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ncurses_putp",
                            "type": "function",
                            "description": "Apply padding information to the string and output it",
                            "leftLabel": "int",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ncurses_scr_dump",
                            "type": "function",
                            "description": "Dump screen content to file",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "ncurses_scr_init",
                            "type": "function",
                            "description": "Initialize screen from file dump",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "ncurses_scr_restore",
                            "type": "function",
                            "description": "Restore screen from file dump",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "ncurses_scr_set",
                            "type": "function",
                            "description": "Inherit screen from file dump",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "ncurses_mvaddch",
                            "type": "function",
                            "description": "Move current position and add character",
                            "leftLabel": "int",
                            "rightLabel": "$y $x $c"
                        },
                        {
                            "text": "ncurses_mvaddchnstr",
                            "type": "function",
                            "description": "Move position and add attributed string with specified length",
                            "leftLabel": "int",
                            "rightLabel": "$y $x $s $n"
                        },
                        {
                            "text": "ncurses_addchnstr",
                            "type": "function",
                            "description": "Add attributed string with specified length at current position",
                            "leftLabel": "int",
                            "rightLabel": "$s $n"
                        },
                        {
                            "text": "ncurses_mvaddchstr",
                            "type": "function",
                            "description": "Move position and add attributed string",
                            "leftLabel": "int",
                            "rightLabel": "$y $x $s"
                        },
                        {
                            "text": "ncurses_addchstr",
                            "type": "function",
                            "description": "Add attributed string at current position",
                            "leftLabel": "int",
                            "rightLabel": "$s"
                        },
                        {
                            "text": "ncurses_mvaddnstr",
                            "type": "function",
                            "description": "Move position and add string with specified length",
                            "leftLabel": "int",
                            "rightLabel": "$y $x $s $n"
                        },
                        {
                            "text": "ncurses_addnstr",
                            "type": "function",
                            "description": "Add string with specified length at current position",
                            "leftLabel": "int",
                            "rightLabel": "$s $n"
                        },
                        {
                            "text": "ncurses_mvaddstr",
                            "type": "function",
                            "description": "Move position and add string",
                            "leftLabel": "int",
                            "rightLabel": "$y $x $s"
                        },
                        {
                            "text": "ncurses_mvdelch",
                            "type": "function",
                            "description": "Move position and delete character, shift rest of line left",
                            "leftLabel": "int",
                            "rightLabel": "$y $x"
                        },
                        {
                            "text": "ncurses_mvgetch",
                            "type": "function",
                            "description": "Move position and get character at new position",
                            "leftLabel": "int",
                            "rightLabel": "$y $x"
                        },
                        {
                            "text": "ncurses_mvinch",
                            "type": "function",
                            "description": "Move position and get attributed character at new position",
                            "leftLabel": "int",
                            "rightLabel": "$y $x"
                        },
                        {
                            "text": "ncurses_mvwaddstr",
                            "type": "function",
                            "description": "Add string at new position in window",
                            "leftLabel": "int",
                            "rightLabel": "$window $y $x $text"
                        },
                        {
                            "text": "ncurses_insstr",
                            "type": "function",
                            "description": "Insert string at current position, moving rest of line right",
                            "leftLabel": "int",
                            "rightLabel": "$text"
                        },
                        {
                            "text": "ncurses_instr",
                            "type": "function",
                            "description": "Reads string from terminal screen",
                            "leftLabel": "int",
                            "rightLabel": "$buffer"
                        },
                        {
                            "text": "ncurses_mvhline",
                            "type": "function",
                            "description": "Set new position and draw a horizontal line using an attributed character and max. n characters long",
                            "leftLabel": "int",
                            "rightLabel": "$y $x $attrchar $n"
                        },
                        {
                            "text": "ncurses_mvcur",
                            "type": "function",
                            "description": "Move cursor immediately",
                            "leftLabel": "int",
                            "rightLabel": "$old_y $old_x $new_y $new_x"
                        },
                        {
                            "text": "ncurses_init_color",
                            "type": "function",
                            "description": "Set new RGB value for color",
                            "leftLabel": "int",
                            "rightLabel": "$color $r $g $b"
                        },
                        {
                            "text": "ncurses_border",
                            "type": "function",
                            "description": "Draw a border around the screen using attributed characters",
                            "leftLabel": "int",
                            "rightLabel": "$left $right $top $bottom $tl_corner $tr_corner $bl_corner $br_corner"
                        },
                        {
                            "text": "ncurses_assume_default_colors",
                            "type": "function",
                            "description": "Define default colors for color 0",
                            "leftLabel": "int",
                            "rightLabel": "$fg $bg"
                        },
                        {
                            "text": "ncurses_define_key",
                            "type": "function",
                            "description": "Define a keycode",
                            "leftLabel": "int",
                            "rightLabel": "$definition $keycode"
                        },
                        {
                            "text": "ncurses_hline",
                            "type": "function",
                            "description": "Draw a horizontal line at current position using an attributed character and max. n characters long",
                            "leftLabel": "int",
                            "rightLabel": "$charattr $n"
                        },
                        {
                            "text": "ncurses_vline",
                            "type": "function",
                            "description": "Draw a vertical line at current position using an attributed character and max. n characters long",
                            "leftLabel": "int",
                            "rightLabel": "$charattr $n"
                        },
                        {
                            "text": "ncurses_keyok",
                            "type": "function",
                            "description": "Enable or disable a keycode",
                            "leftLabel": "int",
                            "rightLabel": "$keycode $enable"
                        },
                        {
                            "text": "ncurses_termname",
                            "type": "function",
                            "description": "Returns terminals (short)-name",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ncurses_longname",
                            "type": "function",
                            "description": "Returns terminals description",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ncurses_mousemask",
                            "type": "function",
                            "description": "Sets mouse options",
                            "leftLabel": "int",
                            "rightLabel": "$newmask $oldmask"
                        },
                        {
                            "text": "ncurses_getmouse",
                            "type": "function",
                            "description": "Reads mouse event",
                            "leftLabel": "bool",
                            "rightLabel": "array $mevent"
                        },
                        {
                            "text": "ncurses_ungetmouse",
                            "type": "function",
                            "description": "Pushes mouse event to queue",
                            "leftLabel": "bool",
                            "rightLabel": "array $mevent"
                        },
                        {
                            "text": "ncurses_mouse_trafo",
                            "type": "function",
                            "description": "Transforms coordinates",
                            "leftLabel": "bool",
                            "rightLabel": "$y $x $toscreen"
                        },
                        {
                            "text": "ncurses_wmouse_trafo",
                            "type": "function",
                            "description": "Transforms window\/stdscr coordinates",
                            "leftLabel": "bool",
                            "rightLabel": "$window $y $x $toscreen"
                        },
                        {
                            "text": "ncurses_waddstr",
                            "type": "function",
                            "description": "Outputs text at current postion in window",
                            "leftLabel": "int",
                            "rightLabel": "$window $str $n"
                        },
                        {
                            "text": "ncurses_wnoutrefresh",
                            "type": "function",
                            "description": "Copies window to virtual screen",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_wclear",
                            "type": "function",
                            "description": "Clears window",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_wcolor_set",
                            "type": "function",
                            "description": "Sets windows color pairings",
                            "leftLabel": "int",
                            "rightLabel": "$window $color_pair"
                        },
                        {
                            "text": "ncurses_wgetch",
                            "type": "function",
                            "description": "Reads a character from keyboard (window)",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_keypad",
                            "type": "function",
                            "description": "Turns keypad on or off",
                            "leftLabel": "int",
                            "rightLabel": "$window $bf"
                        },
                        {
                            "text": "ncurses_wmove",
                            "type": "function",
                            "description": "Moves windows output position",
                            "leftLabel": "int",
                            "rightLabel": "$window $y $x"
                        },
                        {
                            "text": "ncurses_newpad",
                            "type": "function",
                            "description": "Creates a new pad (window)",
                            "leftLabel": "resource",
                            "rightLabel": "$rows $cols"
                        },
                        {
                            "text": "ncurses_prefresh",
                            "type": "function",
                            "description": "Copies a region from a pad into the virtual screen",
                            "leftLabel": "int",
                            "rightLabel": "$pad $pminrow $pmincol $sminrow $smincol $smaxrow $smaxcol"
                        },
                        {
                            "text": "ncurses_pnoutrefresh",
                            "type": "function",
                            "description": "Copies a region from a pad into the virtual screen",
                            "leftLabel": "int",
                            "rightLabel": "$pad $pminrow $pmincol $sminrow $smincol $smaxrow $smaxcol"
                        },
                        {
                            "text": "ncurses_wstandout",
                            "type": "function",
                            "description": "Enter standout mode for a window",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_wstandend",
                            "type": "function",
                            "description": "End standout mode for a window",
                            "leftLabel": "int",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "ncurses_wattrset",
                            "type": "function",
                            "description": "Set the attributes for a window",
                            "leftLabel": "int",
                            "rightLabel": "$window $attrs"
                        },
                        {
                            "text": "ncurses_wattron",
                            "type": "function",
                            "description": "Turns on attributes for a window",
                            "leftLabel": "int",
                            "rightLabel": "$window $attrs"
                        },
                        {
                            "text": "ncurses_wattroff",
                            "type": "function",
                            "description": "Turns off attributes for a window",
                            "leftLabel": "int",
                            "rightLabel": "$window $attrs"
                        },
                        {
                            "text": "ncurses_waddch",
                            "type": "function",
                            "description": "Adds character at current position in a window and advance cursor",
                            "leftLabel": "int",
                            "rightLabel": "$window $ch"
                        },
                        {
                            "text": "ncurses_wborder",
                            "type": "function",
                            "description": "Draws a border around the window using attributed characters",
                            "leftLabel": "int",
                            "rightLabel": "$window $left $right $top $bottom $tl_corner $tr_corner $bl_corner $br_corner"
                        },
                        {
                            "text": "ncurses_whline",
                            "type": "function",
                            "description": "Draws a horizontal line in a window at current position using an attributed character and max. n characters long",
                            "leftLabel": "int",
                            "rightLabel": "$window $charattr $n"
                        },
                        {
                            "text": "ncurses_wvline",
                            "type": "function",
                            "description": "Draws a vertical line in a window at current position using an attributed character and max. n characters long",
                            "leftLabel": "int",
                            "rightLabel": "$window $charattr $n"
                        },
                        {
                            "text": "ncurses_getyx",
                            "type": "function",
                            "description": "Returns the current cursor position for a window",
                            "leftLabel": "void",
                            "rightLabel": "$window $y $x"
                        },
                        {
                            "text": "ncurses_getmaxyx",
                            "type": "function",
                            "description": "Returns the size of a window",
                            "leftLabel": "void",
                            "rightLabel": "$window $y $x"
                        },
                        {
                            "text": "ncurses_update_panels",
                            "type": "function",
                            "description": "Refreshes the virtual screen to reflect the relations between panels in the stack",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ncurses_panel_window",
                            "type": "function",
                            "description": "Returns the window associated with panel",
                            "leftLabel": "resource",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_panel_below",
                            "type": "function",
                            "description": "Returns the panel below panel",
                            "leftLabel": "resource",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_panel_above",
                            "type": "function",
                            "description": "Returns the panel above panel",
                            "leftLabel": "resource",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_replace_panel",
                            "type": "function",
                            "description": "Replaces the window associated with panel",
                            "leftLabel": "int",
                            "rightLabel": "$panel $window"
                        },
                        {
                            "text": "ncurses_move_panel",
                            "type": "function",
                            "description": "Moves a panel so that its upper-left corner is at [startx, starty]",
                            "leftLabel": "int",
                            "rightLabel": "$panel $startx $starty"
                        },
                        {
                            "text": "ncurses_bottom_panel",
                            "type": "function",
                            "description": "Moves a visible panel to the bottom of the stack",
                            "leftLabel": "int",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_top_panel",
                            "type": "function",
                            "description": "Moves a visible panel to the top of the stack",
                            "leftLabel": "int",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_show_panel",
                            "type": "function",
                            "description": "Places an invisible panel on top of the stack, making it visible",
                            "leftLabel": "int",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_hide_panel",
                            "type": "function",
                            "description": "Remove panel from the stack, making it invisible",
                            "leftLabel": "int",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_del_panel",
                            "type": "function",
                            "description": "Remove panel from the stack and delete it (but not the associated window)",
                            "leftLabel": "bool",
                            "rightLabel": "$panel"
                        },
                        {
                            "text": "ncurses_new_panel",
                            "type": "function",
                            "description": "Create a new panel and associate it with window",
                            "leftLabel": "resource",
                            "rightLabel": "$window"
                        },
                        {
                            "text": "newrelic_add_custom_parameter",
                            "type": "function",
                            "description": "Add a custom parameter to the current web transaction with the specified value.",
                            "leftLabel": "boolean",
                            "rightLabel": "$key $value"
                        },
                        {
                            "text": "newrelic_add_custom_tracer",
                            "type": "function",
                            "description": "Add user-defined functions or methods to the list to be instrumented . API equivalent of the\nnewrelic.transaction_tracer.custom setting.",
                            "leftLabel": "boolean",
                            "rightLabel": "$functionName"
                        },
                        {
                            "text": "newrelic_background_job",
                            "type": "function",
                            "description": "Mark current transaction as a background job or a web transaction.",
                            "leftLabel": "void",
                            "rightLabel": "$flag"
                        },
                        {
                            "text": "newrelic_capture_params",
                            "type": "function",
                            "description": "Enables the capturing of URL parameters for displaying in transaction traces. This will override the\nnewrelic.capture_params setting.",
                            "leftLabel": "void",
                            "rightLabel": "$enable"
                        },
                        {
                            "text": "newrelic_custom_metric",
                            "type": "function",
                            "description": "Adds a custom metric with the specified name and value.",
                            "leftLabel": "boolean",
                            "rightLabel": "$metricName $value"
                        },
                        {
                            "text": "newrelic_disable_autorum",
                            "type": "function",
                            "description": "Prevents the output filter from attempting to insert the JavaScript for page load timing (sometimes referred to as\nreal user monitoring or RUM) for this current transaction.",
                            "leftLabel": "true"
                        },
                        {
                            "text": "newrelic_enable_params",
                            "type": "function"
                        },
                        {
                            "text": "newrelic_end_of_transaction",
                            "type": "function",
                            "description": "Stop recording the web transaction immediately.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "newrelic_end_transaction",
                            "type": "function",
                            "description": "Causes the current transaction to end immediately.",
                            "leftLabel": "boolean",
                            "rightLabel": "$ignore"
                        },
                        {
                            "text": "newrelic_get_browser_timing_footer",
                            "type": "function",
                            "description": "Returns the JavaScript string to inject at the very end of the HTML output for page load timing (sometimes referred\nto as real user monitoring or RUM).",
                            "leftLabel": "string",
                            "rightLabel": "$includeTags"
                        },
                        {
                            "text": "newrelic_get_browser_timing_header",
                            "type": "function",
                            "description": "Returns the JavaScript string to inject as part of the header for page load timing (sometimes referred to as real\nuser monitoring or RUM).",
                            "leftLabel": "string",
                            "rightLabel": "$includeTags"
                        },
                        {
                            "text": "newrelic_ignore_apdex",
                            "type": "function",
                            "description": "Do not generate Apdex metrics for this transaction.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "newrelic_ignore_transaction",
                            "type": "function",
                            "description": "Do not generate metrics for this transaction.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "newrelic_name_transaction",
                            "type": "function",
                            "description": "Sets the name of the transaction to the specified name.",
                            "leftLabel": "boolean",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "newrelic_notice_error",
                            "type": "function",
                            "description": "Report an error at this line of code, with a complete stack trace.",
                            "leftLabel": "void",
                            "rightLabel": "$messageOrUnused $exceptionOrMessage $unused2 $unused3 $unused4"
                        },
                        {
                            "text": "newrelic_record_custom_event",
                            "type": "function",
                            "description": "Records a New Relic Insights custom event.",
                            "leftLabel": "void",
                            "rightLabel": "$name array $attributes"
                        },
                        {
                            "text": "newrelic_set_appname",
                            "type": "function",
                            "description": "Sets the name of the application to name.",
                            "leftLabel": "boolean",
                            "rightLabel": "$name $license $xmit"
                        },
                        {
                            "text": "newrelic_set_user_attributes",
                            "type": "function",
                            "description": "Sets user attributes (custom parameters).",
                            "leftLabel": "boolean",
                            "rightLabel": "$user $account $product"
                        },
                        {
                            "text": "newrelic_start_transaction",
                            "type": "function",
                            "description": "If you have ended a transaction before your script terminates (perhaps due to it just having finished a task in a job\nqueue manager) and you want to start a new transaction, use this call.",
                            "leftLabel": "boolean",
                            "rightLabel": "$appName $license"
                        },
                        {
                            "text": "oauth_get_sbs",
                            "type": "function",
                            "description": "Generate a Signature Base String",
                            "leftLabel": "string",
                            "rightLabel": "$http_method $uri $request_parameters"
                        },
                        {
                            "text": "oauth_urlencode",
                            "type": "function",
                            "description": "Encode a URI to RFC 3986",
                            "leftLabel": "string",
                            "rightLabel": "$uri"
                        },
                        {
                            "text": "oci_define_by_name",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nAssociates a PHP variable with a column for query fetches",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $column_name $variable $type"
                        },
                        {
                            "text": "oci_bind_by_name",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nBinds a PHP variable to an Oracle placeholder",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $bv_name $variable $maxlength $type"
                        },
                        {
                            "text": "oci_bind_array_by_name",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL OCI8 >= 1.2.0)\nBinds a PHP array to an Oracle PL\/SQL array parameter",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $name array $var_array $max_table_length $max_item_length $type"
                        },
                        {
                            "text": "oci_field_is_null",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nChecks if the field is NULL",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_field_name",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the name of a field from the statement",
                            "leftLabel": "string",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_field_size",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns field's size",
                            "leftLabel": "int",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_field_scale",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nTell the scale of the field",
                            "leftLabel": "int",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_field_precision",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nTell the precision of a field",
                            "leftLabel": "int",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_field_type",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns field's data type",
                            "leftLabel": "mixed",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_field_type_raw",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nTell the raw Oracle data type of the field",
                            "leftLabel": "int",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_execute",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nExecutes a statement",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $mode"
                        },
                        {
                            "text": "oci_cancel",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nCancels reading from cursor",
                            "leftLabel": "bool",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_fetch",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nFetches the next row from a query into internal buffers",
                            "leftLabel": "bool",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_fetch_object",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the next row from a query as an object",
                            "leftLabel": "object",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_fetch_row",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the next row from a query as a numeric array",
                            "leftLabel": "array",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_fetch_assoc",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the next row from a query as an associative array",
                            "leftLabel": "array",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_fetch_array",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the next row from a query as an associative or numeric array",
                            "leftLabel": "array",
                            "rightLabel": "$statement $mode"
                        },
                        {
                            "text": "ocifetchinto",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nObsolete variant of {@see oci_fetch_array}, {@see oci_fetch_object},\n{@see oci_fetch_assoc} and\n{@see oci_fetch_row}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource $result $mode"
                        },
                        {
                            "text": "oci_fetch_all",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nFetches multiple rows from a query into a two-dimensional array",
                            "leftLabel": "int",
                            "rightLabel": "$statement array $output $skip $maxrows $flags"
                        },
                        {
                            "text": "oci_free_statement",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nFrees all resources associated with statement or cursor",
                            "leftLabel": "bool",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_internal_debug",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nEnables or disables internal debug output",
                            "leftLabel": "void",
                            "rightLabel": "$onoff"
                        },
                        {
                            "text": "oci_num_fields",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the number of result columns in a statement",
                            "leftLabel": "int",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_parse",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nPrepares an Oracle statement for execution",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $sql_text"
                        },
                        {
                            "text": "oci_get_implicit_resultset",
                            "type": "function",
                            "description": "(PECL OCI8 >= 2.0.0)\nReturns the next child statement resource from a parent statement resource that has Oracle Database 12c Implicit Result Sets",
                            "leftLabel": "resource",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_new_cursor",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nAllocates and returns a new cursor (statement handle)",
                            "leftLabel": "resource",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "oci_result",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns field's value from the fetched row",
                            "leftLabel": "mixed",
                            "rightLabel": "$statement $field"
                        },
                        {
                            "text": "oci_client_version",
                            "type": "function",
                            "description": "(PHP 5.3.7, PECL OCI8 >= 1.4.6)\nReturns the Oracle client library version",
                            "leftLabel": "string"
                        },
                        {
                            "text": "oci_server_version",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the Oracle Database version",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "oci_statement_type",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the type of a statement",
                            "leftLabel": "string",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_num_rows",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns number of rows affected during statement execution",
                            "leftLabel": "int",
                            "rightLabel": "$statement"
                        },
                        {
                            "text": "oci_close",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nCloses an Oracle connection",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "oci_connect",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nConnect to an Oracle database",
                            "leftLabel": "resource",
                            "rightLabel": "$username $password $connection_string $character_set $session_mode"
                        },
                        {
                            "text": "oci_new_connect",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nConnect to the Oracle server using a unique connection",
                            "leftLabel": "resource",
                            "rightLabel": "$username $password $connection_string $character_set $session_mode"
                        },
                        {
                            "text": "oci_pconnect",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nConnect to an Oracle database using a persistent connection",
                            "leftLabel": "resource",
                            "rightLabel": "$username $password $connection_string $character_set $session_mode"
                        },
                        {
                            "text": "oci_error",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nReturns the last error found",
                            "leftLabel": "array",
                            "rightLabel": "$resource"
                        },
                        {
                            "text": "oci_free_descriptor",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nFrees a descriptor",
                            "leftLabel": "bool",
                            "rightLabel": "$descriptor"
                        },
                        {
                            "text": "oci_lob_is_equal",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nCompares two LOB\/FILE locators for equality",
                            "leftLabel": "bool",
                            "rightLabel": "OCI_Lob $lob1 OCI_Lob $lob2"
                        },
                        {
                            "text": "oci_lob_copy",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nCopies large object",
                            "leftLabel": "bool",
                            "rightLabel": "OCI_Lob $lob_to OCI_Lob $lob_from $length"
                        },
                        {
                            "text": "oci_commit",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nCommits the outstanding database transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "oci_rollback",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nRolls back the outstanding database transaction",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "oci_new_descriptor",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nInitializes a new empty LOB or FILE descriptor",
                            "leftLabel": "OCI_Lob",
                            "rightLabel": "$connection $type"
                        },
                        {
                            "text": "oci_set_prefetch",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nSets number of rows to be prefetched by queries",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $rows"
                        },
                        {
                            "text": "oci_set_client_identifier",
                            "type": "function",
                            "description": "(PHP 5.3.2, PECL OCI8 >= 1.4.0)\nSets the client identifier",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $client_identifier"
                        },
                        {
                            "text": "oci_set_edition",
                            "type": "function",
                            "description": "(PHP 5.3.2, PECL OCI8 >= 1.4.0)\nSets the database edition",
                            "leftLabel": "bool",
                            "rightLabel": "$edition"
                        },
                        {
                            "text": "oci_set_module_name",
                            "type": "function",
                            "description": "(PHP 5.3.2, PECL OCI8 >= 1.4.0)\nSets the module name",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $module_name"
                        },
                        {
                            "text": "oci_set_action",
                            "type": "function",
                            "description": "(PHP 5.3.2, PECL OCI8 >= 1.4.0)\nSets the action name",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $action_name"
                        },
                        {
                            "text": "oci_set_client_info",
                            "type": "function",
                            "description": "(PHP 5.3.2, PECL OCI8 >= 1.4.0)\nSets the client information",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $client_info"
                        },
                        {
                            "text": "oci_password_change",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nChanges password of Oracle's user",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $username $old_password $new_password"
                        },
                        {
                            "text": "oci_new_collection",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nAllocates new collection object",
                            "leftLabel": "OCI_Collection",
                            "rightLabel": "$connection $tdo $schema"
                        },
                        {
                            "text": "oci_free_cursor",
                            "type": "function",
                            "description": "Alias of {@see oci_free_statement()}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ocifreecursor",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_free_statement}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ocibindbyname",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_bind_by_name}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $column_name $variable $maximum_length $type"
                        },
                        {
                            "text": "ocidefinebyname",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_define_by_name}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $column_name $variable $type"
                        },
                        {
                            "text": "ocicolumnisnull",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_is_null}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement $column_number_or_name"
                        },
                        {
                            "text": "ocicolumnname",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_name}",
                            "leftLabel": "string | bool",
                            "rightLabel": "$statement $column_number"
                        },
                        {
                            "text": "ocicolumnsize",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_size}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement $column_number_or_name"
                        },
                        {
                            "text": "ocicolumnscale",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_scale}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource $column_number"
                        },
                        {
                            "text": "ocicolumnprecision",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_precision}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource $column_number"
                        },
                        {
                            "text": "ocicolumntype",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_type}",
                            "leftLabel": "mixed | bool",
                            "rightLabel": "$statement_resource $column_number"
                        },
                        {
                            "text": "ocicolumntyperaw",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_field_type_raw}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource $column_number"
                        },
                        {
                            "text": "ociexecute",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_execute}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource $mode"
                        },
                        {
                            "text": "ocicancel",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_cancel}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ocifetch",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_fetch}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ocifetchstatement",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_fetch_all}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource $output $skip $maximum_rows $flags"
                        },
                        {
                            "text": "ocifreestatement",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_free_statement}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ociinternaldebug",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_internal_debug}",
                            "rightLabel": "$mode"
                        },
                        {
                            "text": "ocinumcols",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_num_fields}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ociparse",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_parse}",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$connection_resource $sql_text"
                        },
                        {
                            "text": "ocinewcursor",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_new_cursor}",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$connection_resource"
                        },
                        {
                            "text": "ociresult",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_result}",
                            "leftLabel": "bool | mixed",
                            "rightLabel": "$statement_resource $column_number_or_name"
                        },
                        {
                            "text": "ociserverversion",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_server_version}",
                            "leftLabel": "string | bool",
                            "rightLabel": "$connection_resource"
                        },
                        {
                            "text": "ocistatementtype",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_statement_type}",
                            "leftLabel": "string",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ocirowcount",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_num_rows}",
                            "leftLabel": "int | bool",
                            "rightLabel": "$statement_resource"
                        },
                        {
                            "text": "ocilogoff",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_close}",
                            "leftLabel": "bool",
                            "rightLabel": "$connection_resource"
                        },
                        {
                            "text": "ocilogon",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_connect}",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$username $password $connection_string $character_set $session_mode"
                        },
                        {
                            "text": "ocinlogon",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_new_connect}",
                            "leftLabel": "resource",
                            "rightLabel": "$username $password $connection_string $character_set $session_mode"
                        },
                        {
                            "text": "ociplogon",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_pconnect}",
                            "leftLabel": "resource",
                            "rightLabel": "$username $password $connection_string $character_set $session_mode"
                        },
                        {
                            "text": "ocierror",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_error}",
                            "leftLabel": "array | bool",
                            "rightLabel": "$connection_or_statement_resource"
                        },
                        {
                            "text": "ocifreedesc",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI-Lob::free}",
                            "leftLabel": "boolean",
                            "rightLabel": "$lob_descriptor"
                        },
                        {
                            "text": "ocisavelob",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI-Lob::save}",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_descriptor $data $offset"
                        },
                        {
                            "text": "ocisavelobfile",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_Lob::import}",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_descriptor $filename"
                        },
                        {
                            "text": "ociwritelobtofile",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_Lob::export}",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_descriptor $filename $start $length"
                        },
                        {
                            "text": "ociloadlob",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_Lob::load}",
                            "leftLabel": "string | bool",
                            "rightLabel": "$lob_descriptor"
                        },
                        {
                            "text": "ocicommit",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_commit}",
                            "leftLabel": "bool",
                            "rightLabel": "$connection_resource"
                        },
                        {
                            "text": "ocirollback",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_rollback}",
                            "leftLabel": "bool",
                            "rightLabel": "$connection_resource"
                        },
                        {
                            "text": "ocinewdescriptor",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_new_descriptor}",
                            "leftLabel": "OCI_LOB | bool",
                            "rightLabel": "$connection_resource $type"
                        },
                        {
                            "text": "ocisetprefetch",
                            "type": "function",
                            "description": "(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see oci_set_prefetch}",
                            "leftLabel": "bool",
                            "rightLabel": "$statement_resource $number_of_rows"
                        },
                        {
                            "text": "ocipasswordchange",
                            "type": "function",
                            "description": "(PHP 5, PECL OCI8 >= 1.1.0)\nChanges password of Oracle's user",
                            "leftLabel": "bool | resource",
                            "rightLabel": "$connection_resource_or_connection_string_or_dbname $username $old_password $new_password"
                        },
                        {
                            "text": "ocifreecollection",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.7, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see OCI_Collection::free}",
                            "leftLabel": "bool",
                            "rightLabel": "$collection"
                        },
                        {
                            "text": "ocinewcollection",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see oci_new_collection}",
                            "leftLabel": "OCI_Collection | bool",
                            "rightLabel": "$connection_resource $tdo $schema"
                        },
                        {
                            "text": "ocicollappend",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n(@see OCI_Collection::append)",
                            "leftLabel": "bool",
                            "rightLabel": "$collection $value"
                        },
                        {
                            "text": "ocicollgetelem",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_COLLection::getElem}",
                            "leftLabel": "mixed",
                            "rightLabel": "$collection $index"
                        },
                        {
                            "text": "ocicollassignelem",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of {@see OCI_Collection::assignElem}",
                            "leftLabel": "bool",
                            "rightLabel": "$collection $index $value"
                        },
                        {
                            "text": "ocicollsize",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_COLLection::size}",
                            "leftLabel": "int",
                            "rightLabel": "$collection"
                        },
                        {
                            "text": "ocicollmax",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_COLLection::max}",
                            "leftLabel": "int",
                            "rightLabel": "$collection"
                        },
                        {
                            "text": "ocicolltrim",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)\nAlias of\n{@see OCI_Collection::trim}",
                            "leftLabel": "bool",
                            "rightLabel": "$collection $number"
                        },
                        {
                            "text": "ociwritetemporarylob",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PECL OCI8 1.0)\nWrites a temporary large object\nAlias of {@see OCI-Lob::writeTemporary()}",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_descriptor $data $lob_type"
                        },
                        {
                            "text": "ocicloselob",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PECL OCI8 1.0)\nAlias of {@see OCI-Lob::close()}",
                            "leftLabel": "bool",
                            "rightLabel": "$lob_descriptor"
                        },
                        {
                            "text": "ocicollassign",
                            "type": "function",
                            "description": "(PHP 4 >= 4.0.6, PECL OCI8 1.0)\nAlias of {@see OCI-Collection::assign()}\nAssigns a value to the collection from another existing collection",
                            "leftLabel": "bool",
                            "rightLabel": "$to $from"
                        },
                        {
                            "text": "odbc_autocommit",
                            "type": "function",
                            "description": "Start of odbc v.1.0",
                            "rightLabel": "$connection_id $OnOff"
                        },
                        {
                            "text": "odbc_binmode",
                            "type": "function",
                            "description": "Handling of binary column data Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id $mode"
                        },
                        {
                            "text": "odbc_close",
                            "type": "function",
                            "description": "Close an ODBC connection Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_close_all",
                            "type": "function",
                            "description": "Close all ODBC connections Since PHP 4.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "odbc_columns",
                            "type": "function",
                            "description": "Lists the column names in specified tables Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $qualifier $schema $table_name $column_name"
                        },
                        {
                            "text": "odbc_commit",
                            "type": "function",
                            "description": "Commit an ODBC transaction Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_connect",
                            "type": "function",
                            "description": "Connect to a datasource Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$dsn $user $password $cursor_type"
                        },
                        {
                            "text": "odbc_cursor",
                            "type": "function",
                            "description": "Get cursorname Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "odbc_data_source",
                            "type": "function",
                            "description": "Returns information about a current connection Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$connection_id $fetch_type"
                        },
                        {
                            "text": "odbc_execute",
                            "type": "function",
                            "description": "Execute a prepared statement Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id array $parameters_array"
                        },
                        {
                            "text": "odbc_error",
                            "type": "function",
                            "description": "Get the last error code Since PHP 4.0.5 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_errormsg",
                            "type": "function",
                            "description": "Get the last error message Since PHP 4.0.5 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_exec",
                            "type": "function",
                            "description": "Prepare and execute an SQL statement Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $query_string $flags"
                        },
                        {
                            "text": "odbc_fetch_array",
                            "type": "function",
                            "description": "Fetch a result row as an associative array Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $rownumber"
                        },
                        {
                            "text": "odbc_fetch_object",
                            "type": "function",
                            "description": "Fetch a result row as an object Since PHP 4.0.2 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$result $rownumber"
                        },
                        {
                            "text": "odbc_fetch_row",
                            "type": "function",
                            "description": "Fetch a row Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id $row_number"
                        },
                        {
                            "text": "odbc_fetch_into",
                            "type": "function",
                            "description": "Fetch one result row into array Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id array $result_array $rownumber"
                        },
                        {
                            "text": "odbc_field_len",
                            "type": "function",
                            "description": "Get the length (precision) of a field Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id $field_number"
                        },
                        {
                            "text": "odbc_field_scale",
                            "type": "function",
                            "description": "Get the scale of a field Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id $field_number"
                        },
                        {
                            "text": "odbc_field_name",
                            "type": "function",
                            "description": "Get the columnname Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result_id $field_number"
                        },
                        {
                            "text": "odbc_field_type",
                            "type": "function",
                            "description": "Datatype of a field Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result_id $field_number"
                        },
                        {
                            "text": "odbc_field_num",
                            "type": "function",
                            "description": "Return column number Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id $field_name"
                        },
                        {
                            "text": "odbc_free_result",
                            "type": "function",
                            "description": "Free resources associated with a result Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "odbc_gettypeinfo",
                            "type": "function",
                            "description": "Retrieves information about data types supported by the data source Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $data_type"
                        },
                        {
                            "text": "odbc_longreadlen",
                            "type": "function",
                            "description": "Handling of LONG columns Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id $length"
                        },
                        {
                            "text": "odbc_next_result",
                            "type": "function",
                            "description": "Checks if multiple results are available Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "odbc_num_fields",
                            "type": "function",
                            "description": "Number of columns in a result Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "odbc_num_rows",
                            "type": "function",
                            "description": "Number of rows in a result Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id"
                        },
                        {
                            "text": "odbc_pconnect",
                            "type": "function",
                            "description": "Open a persistent database connection Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$dsn $user $password $cursor_type"
                        },
                        {
                            "text": "odbc_prepare",
                            "type": "function",
                            "description": "Prepares a statement for execution Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $query_string"
                        },
                        {
                            "text": "odbc_result",
                            "type": "function",
                            "description": "Get result data Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$result_id $field"
                        },
                        {
                            "text": "odbc_result_all",
                            "type": "function",
                            "description": "Print result as HTML table Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result_id $format"
                        },
                        {
                            "text": "odbc_rollback",
                            "type": "function",
                            "description": "Rollback a transaction Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_setoption",
                            "type": "function",
                            "description": "Adjust ODBC settings Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$id $function $option $param"
                        },
                        {
                            "text": "odbc_specialcolumns",
                            "type": "function",
                            "description": "Retrieves special columns Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $type $qualifier $owner $table $scope $nullable"
                        },
                        {
                            "text": "odbc_statistics",
                            "type": "function",
                            "description": "Retrieve statistics about a table Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $qualifier $owner $table_name $unique $accuracy"
                        },
                        {
                            "text": "odbc_tables",
                            "type": "function",
                            "description": "Get the list of table names stored in a specific data source Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $qualifier $owner $name $types"
                        },
                        {
                            "text": "odbc_primarykeys",
                            "type": "function",
                            "description": "Gets the primary keys for a table Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $qualifier $owner $table"
                        },
                        {
                            "text": "odbc_columnprivileges",
                            "type": "function",
                            "description": "Lists columns and associated privileges for the given table Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $qualifier $owner $table_name $column_name"
                        },
                        {
                            "text": "odbc_tableprivileges",
                            "type": "function",
                            "description": "Lists tables and the privileges associated with each table Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $qualifier $owner $name"
                        },
                        {
                            "text": "odbc_foreignkeys",
                            "type": "function",
                            "description": "Retrieves a list of foreign keys Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id $pk_qualifier $pk_owner $pk_table $fk_qualifier $fk_owner $fk_table"
                        },
                        {
                            "text": "odbc_procedures",
                            "type": "function",
                            "description": "Get the list of procedures stored in a specific data source Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_procedurecolumns",
                            "type": "function",
                            "description": "Retrieve information about parameters to procedures Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_id"
                        },
                        {
                            "text": "odbc_do",
                            "type": "function",
                            "description": "Alias of odbc_exec Since PHP 4.0 5.0",
                            "rightLabel": "$connection_id $query $flags"
                        },
                        {
                            "text": "odbc_field_precision",
                            "type": "function",
                            "description": "Alias of odbc_field_len Since PHP 4.0 5.0",
                            "rightLabel": "$result_id $field_number"
                        },
                        {
                            "text": "opcache_compile_file",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.5, PECL ZendOpcache >= 7.0.2 )\nCompiles and caches a PHP script without executing it",
                            "leftLabel": "boolean",
                            "rightLabel": "$file"
                        },
                        {
                            "text": "opcache_invalidate",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0 )\nInvalidates a cached script",
                            "leftLabel": "boolean",
                            "rightLabel": "$script $force"
                        },
                        {
                            "text": "opcache_reset",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PECL ZendOpcache >= 7.0.0 )\nResets the contents of the opcode cache",
                            "leftLabel": "boolean"
                        },
                        {
                            "text": "opcache_get_status",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.5, PECL ZendOpcache >= 7.0.2 )\nGet status information about the cache",
                            "leftLabel": "array",
                            "rightLabel": "$get_scripts"
                        },
                        {
                            "text": "opcache_get_configuration",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.5, PECL ZendOpcache >= 7.0.2 )\nGet configuration information about the cache",
                            "leftLabel": "array"
                        },
                        {
                            "text": "opcache_is_script_cached",
                            "type": "function",
                            "description": "(PHP 5 >= 5.6, PECL ZendOpcache >= 7.0.4 )\nThis function checks if a PHP script has been cached in OPCache.",
                            "leftLabel": "bool",
                            "rightLabel": "$file"
                        },
                        {
                            "text": "openssl_pkey_free",
                            "type": "function",
                            "description": "Start of openssl v.",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "openssl_pkey_new",
                            "type": "function",
                            "description": "Generates a new private key Since PHP 4.2.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "array $configargs"
                        },
                        {
                            "text": "openssl_pkey_export",
                            "type": "function",
                            "description": "Gets an exportable representation of a key into a string Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $out $passphrase array $configargs"
                        },
                        {
                            "text": "openssl_pkey_export_to_file",
                            "type": "function",
                            "description": "Gets an exportable representation of a key into a file Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $outfilename $passphrase array $configargs"
                        },
                        {
                            "text": "openssl_pkey_get_private",
                            "type": "function",
                            "description": "Get a private key Since PHP 4.2.0 5.0",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$key $passphrase"
                        },
                        {
                            "text": "openssl_pkey_get_public",
                            "type": "function",
                            "description": "Extract public key from certificate and prepare it for use Since PHP 4.2.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$certificate"
                        },
                        {
                            "text": "openssl_pkey_get_details",
                            "type": "function",
                            "description": "Returns an array with the key details Since PHP 5.2.0",
                            "leftLabel": "array",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "openssl_free_key",
                            "type": "function",
                            "description": "Free key resource Since PHP 4.0.4 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$key_identifier"
                        },
                        {
                            "text": "openssl_get_privatekey",
                            "type": "function",
                            "description": "Alias of openssl_pkey_get_private Since PHP 4.0.4 5.0",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$key $passphrase"
                        },
                        {
                            "text": "openssl_get_publickey",
                            "type": "function",
                            "description": "Alias of openssl_pkey_get_public Since PHP 4.0.4 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$certificate"
                        },
                        {
                            "text": "openssl_spki_new",
                            "type": "function",
                            "description": "Generate a new signed public key and challenge Since PHP 5.6.0",
                            "leftLabel": "string",
                            "rightLabel": "$privkey $challenge $algorithm"
                        },
                        {
                            "text": "openssl_spki_verify",
                            "type": "function",
                            "description": "Verifies a signed public key and challenge Since PHP 5.6.0",
                            "leftLabel": "boolean",
                            "rightLabel": "$spkac"
                        },
                        {
                            "text": "openssl_spki_export_challenge",
                            "type": "function",
                            "description": "Exports the challenge assoicated with a signed public key and challenge Since PHP 5.6.0",
                            "leftLabel": "string | NULL",
                            "rightLabel": "$spkac"
                        },
                        {
                            "text": "openssl_spki_export",
                            "type": "function",
                            "description": "Exports a valid PEM formatted public key signed public key and challenge Since PHP 5.6.0",
                            "leftLabel": "string | NULL",
                            "rightLabel": "$spkac"
                        },
                        {
                            "text": "openssl_x509_read",
                            "type": "function",
                            "description": "Parse an X.509 certificate and return a resource identifier for Since PHP 4.0.6 5.0\nit",
                            "leftLabel": "resource",
                            "rightLabel": "$x509certdata"
                        },
                        {
                            "text": "openssl_x509_fingerprint",
                            "type": "function",
                            "description": " Since PHP 5.6.0",
                            "leftLabel": "string | boolean",
                            "rightLabel": "$x509 $type $binary"
                        },
                        {
                            "text": "openssl_x509_free",
                            "type": "function",
                            "description": "Free certificate resource Since PHP 4.0.6 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$x509cert"
                        },
                        {
                            "text": "openssl_x509_parse",
                            "type": "function",
                            "description": "Parse an X509 certificate and return the information as an array Since PHP 4.0.6 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$x509cert $shortnames"
                        },
                        {
                            "text": "openssl_x509_checkpurpose",
                            "type": "function",
                            "description": "Verifies if a certificate can be used for a particular purpose Since PHP 4.0.6 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$x509cert $purpose array $cainfo $untrustedfile"
                        },
                        {
                            "text": "openssl_x509_check_private_key",
                            "type": "function",
                            "description": "Checks if a private key corresponds to a certificate Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$cert $key"
                        },
                        {
                            "text": "openssl_x509_export",
                            "type": "function",
                            "description": "Exports a certificate as a string Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$x509 $output $notext"
                        },
                        {
                            "text": "openssl_x509_export_to_file",
                            "type": "function",
                            "description": "Exports a certificate to file Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$x509 $outfilename $notext"
                        },
                        {
                            "text": "openssl_pkcs12_export",
                            "type": "function",
                            "description": "Exports a PKCS#12 Compatible Certificate Store File to variable. Since PHP 5.2.2",
                            "leftLabel": "bool",
                            "rightLabel": "$x509 $out $priv_key $pass array $args"
                        },
                        {
                            "text": "openssl_pkcs12_export_to_file",
                            "type": "function",
                            "description": "Exports a PKCS#12 Compatible Certificate Store File Since PHP 5.2.2",
                            "leftLabel": "bool",
                            "rightLabel": "$x509 $filename $priv_key $pass array $args"
                        },
                        {
                            "text": "openssl_pkcs12_read",
                            "type": "function",
                            "description": "Parse a PKCS#12 Certificate Store into an array Since PHP 5.2.2",
                            "leftLabel": "bool",
                            "rightLabel": "$pkcs12 array $certs $pass"
                        },
                        {
                            "text": "openssl_csr_new",
                            "type": "function",
                            "description": "Generates a CSR Since PHP 4.2.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $dn $privkey array $configargs array $extraattribs"
                        },
                        {
                            "text": "openssl_csr_export",
                            "type": "function",
                            "description": "Exports a CSR as a string Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$csr $out $notext"
                        },
                        {
                            "text": "openssl_csr_export_to_file",
                            "type": "function",
                            "description": "Exports a CSR to a file Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$csr $outfilename $notext"
                        },
                        {
                            "text": "openssl_csr_sign",
                            "type": "function",
                            "description": "Sign a CSR with another certificate (or itself) and generate a certificate Since PHP 4.2.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$csr $cacert $priv_key $days array $configargs $serial"
                        },
                        {
                            "text": "openssl_csr_get_subject",
                            "type": "function",
                            "description": "Returns the subject of a CERT Since PHP 5.2.0",
                            "leftLabel": "array",
                            "rightLabel": "$csr $use_shortnames"
                        },
                        {
                            "text": "openssl_csr_get_public_key",
                            "type": "function",
                            "description": "Returns the public key of a CERT Since PHP 5.2.0",
                            "leftLabel": "resource",
                            "rightLabel": "$csr $use_shortnames"
                        },
                        {
                            "text": "openssl_digest",
                            "type": "function",
                            "description": "Computes a digest Since PHP 5.3.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $method $raw_output"
                        },
                        {
                            "text": "openssl_encrypt",
                            "type": "function",
                            "description": "Encrypts data Since PHP 5.3.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $method $password $options $iv"
                        },
                        {
                            "text": "openssl_decrypt",
                            "type": "function",
                            "description": "Decrypts data Since PHP 5.3.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $method $password $options $iv"
                        },
                        {
                            "text": "openssl_cipher_iv_length",
                            "type": "function",
                            "description": "(PHP 5 >= PHP 5.3.3)\nGets the cipher iv length",
                            "leftLabel": "int",
                            "rightLabel": "$method"
                        },
                        {
                            "text": "openssl_sign",
                            "type": "function",
                            "description": "Generate signature Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$data $signature $priv_key_id $signature_alg"
                        },
                        {
                            "text": "openssl_verify",
                            "type": "function",
                            "description": "Verify signature Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$data $signature $pub_key_id $signature_alg"
                        },
                        {
                            "text": "openssl_seal",
                            "type": "function",
                            "description": "Seal (encrypt) data Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$data $sealed_data array $env_keys array $pub_key_ids $method"
                        },
                        {
                            "text": "openssl_open",
                            "type": "function",
                            "description": "Open sealed data Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$sealed_data $open_data $env_key $priv_key_id $method"
                        },
                        {
                            "text": "openssl_pbkdf2",
                            "type": "function",
                            "description": "Generates a PKCS5 v2 PBKDF2 string, defaults to SHA-1 Since PHP 5.5.0",
                            "leftLabel": "string | bool",
                            "rightLabel": "$password $salt $key_length $iterations $digest_algorithm"
                        },
                        {
                            "text": "openssl_pkcs7_verify",
                            "type": "function",
                            "description": "Verifies the signature of an S\/MIME signed message Since PHP 4.0.6 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$filename $flags $outfilename array $cainfo $extracerts $content"
                        },
                        {
                            "text": "openssl_pkcs7_decrypt",
                            "type": "function",
                            "description": "Decrypts an S\/MIME encrypted message Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$infilename $outfilename $recipcert $recipkey"
                        },
                        {
                            "text": "openssl_pkcs7_sign",
                            "type": "function",
                            "description": "Sign an S\/MIME message Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$infilename $outfilename $signcert $privkey array $headers $flags $extracerts"
                        },
                        {
                            "text": "openssl_pkcs7_encrypt",
                            "type": "function",
                            "description": "Encrypt an S\/MIME message Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$infile $outfile $recipcerts array $headers $flags $cipherid"
                        },
                        {
                            "text": "openssl_private_encrypt",
                            "type": "function",
                            "description": "Encrypts data with private key Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$data $crypted $key $padding"
                        },
                        {
                            "text": "openssl_private_decrypt",
                            "type": "function",
                            "description": "Decrypts data with private key Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$data $decrypted $key $padding"
                        },
                        {
                            "text": "openssl_public_encrypt",
                            "type": "function",
                            "description": "Encrypts data with public key Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$data $crypted $key $padding"
                        },
                        {
                            "text": "openssl_public_decrypt",
                            "type": "function",
                            "description": "Decrypts data with public key Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$data $decrypted $key $padding"
                        },
                        {
                            "text": "openssl_get_md_methods",
                            "type": "function",
                            "description": "Gets available digest methods Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$aliases"
                        },
                        {
                            "text": "openssl_get_cipher_methods",
                            "type": "function",
                            "description": "Gets available cipher methods Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$aliases"
                        },
                        {
                            "text": "openssl_dh_compute_key",
                            "type": "function",
                            "description": "(No version information available, might only be in SVN)\nComputes shared secret for public value of remote DH key and local DH key",
                            "leftLabel": "string",
                            "rightLabel": "$pub_key $dh_key"
                        },
                        {
                            "text": "openssl_random_pseudo_bytes",
                            "type": "function",
                            "description": "Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter. Since PHP 5.3.0",
                            "leftLabel": "string",
                            "rightLabel": "$length $crypto_strong"
                        },
                        {
                            "text": "openssl_error_string",
                            "type": "function",
                            "description": "Return openSSL error message Since PHP 4.0.6",
                            "leftLabel": "string"
                        },
                        {
                            "text": "openssl_get_cert_locations",
                            "type": "function",
                            "description": "Retrieve the available certificate locations Since PHP 5.6.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "password_get_info",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PHP 5) Since PHP 5.5.0",
                            "leftLabel": "array",
                            "rightLabel": "$hash"
                        },
                        {
                            "text": "password_hash",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PHP 5) Since PHP 5.5.0",
                            "leftLabel": "string | bool",
                            "rightLabel": "$password $algo $options"
                        },
                        {
                            "text": "password_needs_rehash",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PHP 5) Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$hash $algo $options"
                        },
                        {
                            "text": "password_verify",
                            "type": "function",
                            "description": "(PHP 5 >= 5.5.0, PHP 5) Since PHP 5.5.0",
                            "leftLabel": "boolean",
                            "rightLabel": "$password $hash"
                        },
                        {
                            "text": "pcntl_fork",
                            "type": "function",
                            "description": "Start of pcntl v."
                        },
                        {
                            "text": "pcntl_waitpid",
                            "type": "function",
                            "description": "Waits on or returns the status of a forked child Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pid $status $options"
                        },
                        {
                            "text": "pcntl_wait",
                            "type": "function",
                            "description": "Waits on or returns the status of a forked child Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$status $options"
                        },
                        {
                            "text": "pcntl_signal",
                            "type": "function",
                            "description": "Installs a signal handler Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$signo $handler $restart_syscalls"
                        },
                        {
                            "text": "pcntl_signal_dispatch",
                            "type": "function",
                            "description": "Calls signal handlers for pending signals Since PHP 5.3.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "pcntl_wifexited",
                            "type": "function",
                            "description": "Checks if status code represents a normal exit Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "pcntl_wifstopped",
                            "type": "function",
                            "description": "Checks whether the child process is currently stopped Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "pcntl_wifsignaled",
                            "type": "function",
                            "description": "Checks whether the status code represents a termination due to a signal Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "pcntl_wexitstatus",
                            "type": "function",
                            "description": "Returns the return code of a terminated child Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "pcntl_wtermsig",
                            "type": "function",
                            "description": "Returns the signal which caused the child to terminate Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "pcntl_wstopsig",
                            "type": "function",
                            "description": "Returns the signal which caused the child to stop Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "pcntl_exec",
                            "type": "function",
                            "description": "Executes specified program in current process space Since PHP 4.2.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$path array $args array $envs"
                        },
                        {
                            "text": "pcntl_alarm",
                            "type": "function",
                            "description": "Set an alarm clock for delivery of a signal Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$seconds"
                        },
                        {
                            "text": "pcntl_get_last_error",
                            "type": "function",
                            "description": "Retrieve the error number set by the last pcntl function which failed Since PHP 5.3.4",
                            "leftLabel": "int"
                        },
                        {
                            "text": "pcntl_errno",
                            "type": "function",
                            "description": "Alias of pcntl_strerror Since PHP 5.3.4"
                        },
                        {
                            "text": "pcntl_strerror",
                            "type": "function",
                            "description": "Retrieve the system error message associated with the given errno Since PHP 5.3.4",
                            "leftLabel": "string",
                            "rightLabel": "$errno"
                        },
                        {
                            "text": "pcntl_getpriority",
                            "type": "function",
                            "description": "Get the priority of any process Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pid $process_identifier"
                        },
                        {
                            "text": "pcntl_setpriority",
                            "type": "function",
                            "description": "Change the priority of any process Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$priority $pid $process_identifier"
                        },
                        {
                            "text": "pcntl_sigprocmask",
                            "type": "function",
                            "description": "Sets and retrieves blocked signals Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$how array $set array $oldset"
                        },
                        {
                            "text": "pcntl_sigwaitinfo",
                            "type": "function",
                            "description": "Waits for signals Since PHP 5.3.0",
                            "leftLabel": "int",
                            "rightLabel": "array $set array $siginfo"
                        },
                        {
                            "text": "pcntl_sigtimedwait",
                            "type": "function",
                            "description": "Waits for signals, with a timeout Since PHP 5.3.0",
                            "leftLabel": "int",
                            "rightLabel": "array $set array $siginfo $seconds $nanoseconds"
                        },
                        {
                            "text": "preg_match",
                            "type": "function",
                            "description": "Start of pcre v.",
                            "rightLabel": "$pattern $subject array $matches $flags $offset"
                        },
                        {
                            "text": "preg_match_all",
                            "type": "function",
                            "description": "Perform a global regular expression match Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pattern $subject array $matches $flags $offset"
                        },
                        {
                            "text": "preg_replace",
                            "type": "function",
                            "description": "Perform a regular expression search and replace Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$pattern $replacement $subject $limit $count"
                        },
                        {
                            "text": "preg_replace_callback",
                            "type": "function",
                            "description": "Perform a regular expression search and replace using a callback Since PHP 4.0.5 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$pattern callable $callback $subject $limit $count"
                        },
                        {
                            "text": "preg_replace_callback_array",
                            "type": "function",
                            "description": "Perform a regular expression search and replace using callbacks",
                            "leftLabel": "array | NUll",
                            "rightLabel": "$patterns_and_callbacks $subject $limit $count"
                        },
                        {
                            "text": "preg_filter",
                            "type": "function",
                            "description": "Perform a regular expression search and replace Since PHP 5.3.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$pattern $replacement $subject $limit $count"
                        },
                        {
                            "text": "preg_split",
                            "type": "function",
                            "description": "Split string by a regular expression Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $subject $limit $flags"
                        },
                        {
                            "text": "preg_quote",
                            "type": "function",
                            "description": "Quote regular expression characters Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $delimiter"
                        },
                        {
                            "text": "preg_grep",
                            "type": "function",
                            "description": "Return array entries that match the pattern Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern array $input $flags"
                        },
                        {
                            "text": "preg_last_error",
                            "type": "function",
                            "description": "Returns the error code of the last PCRE regex execution Since PHP 5.2.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "pdo_drivers",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.3, PECL pdo >= 1.0.3)\nReturn an array of available PDO drivers",
                            "leftLabel": "array"
                        },
                        {
                            "text": "confirm_pdo_ibm_compiled",
                            "type": "function",
                            "description": "Start of pdo_ibm v.1.2.3"
                        },
                        {
                            "text": "pg_connect",
                            "type": "function",
                            "description": "Start of pgsql v.",
                            "rightLabel": "$connection_string $connect_type"
                        },
                        {
                            "text": "pg_pconnect",
                            "type": "function",
                            "description": "Open a persistent PostgreSQL connection Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection_string $connect_type"
                        },
                        {
                            "text": "pg_close",
                            "type": "function",
                            "description": "Closes a PostgreSQL connection Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_connection_status",
                            "type": "function",
                            "description": "Get connection status Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_connection_busy",
                            "type": "function",
                            "description": "Get connection is busy or not Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_connection_reset",
                            "type": "function",
                            "description": "Reset connection (reconnect) Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_host",
                            "type": "function",
                            "description": "Returns the host name associated with the connection Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_dbname",
                            "type": "function",
                            "description": "Get the database name Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_port",
                            "type": "function",
                            "description": "Return the port number associated with the connection Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_tty",
                            "type": "function",
                            "description": "Return the TTY name associated with the connection Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_options",
                            "type": "function",
                            "description": "Get the options associated with the connection Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_version",
                            "type": "function",
                            "description": "Returns an array with client, protocol and server version (when available) Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_ping",
                            "type": "function",
                            "description": "Ping database connection Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_parameter_status",
                            "type": "function",
                            "description": "Looks up a current parameter setting of the server. Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection $param_name"
                        },
                        {
                            "text": "pg_transaction_status",
                            "type": "function",
                            "description": "Returns the current in-transaction status of the server. Since PHP 5.1.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_query",
                            "type": "function",
                            "description": "Execute a query Since PHP 4.2.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $query"
                        },
                        {
                            "text": "pg_query_params",
                            "type": "function",
                            "description": "Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text. Since PHP 5.1.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $query array $params"
                        },
                        {
                            "text": "pg_prepare",
                            "type": "function",
                            "description": "Submits a request to create a prepared statement with the Since PHP 5.1.0\ngiven parameters, and waits for completion.",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $stmtname $query"
                        },
                        {
                            "text": "pg_execute",
                            "type": "function",
                            "description": "Sends a request to execute a prepared statement with given parameters, and waits for the result. Since PHP 5.1.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $stmtname array $params"
                        },
                        {
                            "text": "pg_send_query",
                            "type": "function",
                            "description": "Sends asynchronous query Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $query"
                        },
                        {
                            "text": "pg_send_query_params",
                            "type": "function",
                            "description": "Submits a command and separate parameters to the server without waiting for the result(s). Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $query array $params"
                        },
                        {
                            "text": "pg_send_prepare",
                            "type": "function",
                            "description": "Sends a request to create a prepared statement with the given parameters, without waiting for completion. Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $stmtname $query"
                        },
                        {
                            "text": "pg_send_execute",
                            "type": "function",
                            "description": "Sends a request to execute a prepared statement with given parameters, without waiting for the result(s). Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $stmtname array $params"
                        },
                        {
                            "text": "pg_cancel_query",
                            "type": "function",
                            "description": "Cancel an asynchronous query Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_fetch_result",
                            "type": "function",
                            "description": "Returns values from a result resource Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "pg_fetch_row",
                            "type": "function",
                            "description": "Get a row as an enumerated array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $row $result_type"
                        },
                        {
                            "text": "pg_fetch_assoc",
                            "type": "function",
                            "description": "Fetch a row as an associative array Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $row"
                        },
                        {
                            "text": "pg_fetch_array",
                            "type": "function",
                            "description": "Fetch a row as an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $row $result_type"
                        },
                        {
                            "text": "pg_fetch_object",
                            "type": "function",
                            "description": "Fetch a row as an object Since PHP 4.0 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$result $row $result_type"
                        },
                        {
                            "text": "pg_fetch_all",
                            "type": "function",
                            "description": "Fetches all rows from a result as an array Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_fetch_all_columns",
                            "type": "function",
                            "description": "Fetches all rows in a particular result column as an array Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "$result $column"
                        },
                        {
                            "text": "pg_affected_rows",
                            "type": "function",
                            "description": "Returns number of affected records (tuples) Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_get_result",
                            "type": "function",
                            "description": "Get asynchronous query result Since PHP 4.2.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_result_seek",
                            "type": "function",
                            "description": "Set internal row offset in result resource Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result $offset"
                        },
                        {
                            "text": "pg_result_status",
                            "type": "function",
                            "description": "Get status of query result Since PHP 4.2.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$result $type"
                        },
                        {
                            "text": "pg_free_result",
                            "type": "function",
                            "description": "Free result memory Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_last_oid",
                            "type": "function",
                            "description": "Returns the last row's OID Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_num_rows",
                            "type": "function",
                            "description": "Returns the number of rows in a result Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_num_fields",
                            "type": "function",
                            "description": "Returns the number of fields in a result Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_field_name",
                            "type": "function",
                            "description": "Returns the name of a field Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_field_num",
                            "type": "function",
                            "description": "Returns the field number of the named field Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_name"
                        },
                        {
                            "text": "pg_field_size",
                            "type": "function",
                            "description": "Returns the internal storage size of the named field Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_field_type",
                            "type": "function",
                            "description": "Returns the type name for the corresponding field number Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_field_type_oid",
                            "type": "function",
                            "description": "Returns the type ID (OID) for the corresponding field number Since PHP 5.1.0",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_field_prtlen",
                            "type": "function",
                            "description": "Returns the printed length Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result $row_number $field_name_or_number"
                        },
                        {
                            "text": "pg_field_is_null",
                            "type": "function",
                            "description": "Test if a field is SQL NULL Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "pg_field_table",
                            "type": "function",
                            "description": "Returns the name or oid of the tables field Since PHP 5.2.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$result $field_number $oid_only"
                        },
                        {
                            "text": "pg_get_notify",
                            "type": "function",
                            "description": "Gets SQL NOTIFY message Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$connection $result_type"
                        },
                        {
                            "text": "pg_get_pid",
                            "type": "function",
                            "description": "Gets the backend's process ID Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_result_error",
                            "type": "function",
                            "description": "Get error message associated with result Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_result_error_field",
                            "type": "function",
                            "description": "Returns an individual field of an error report. Since PHP 5.1.0",
                            "leftLabel": "string",
                            "rightLabel": "$result $fieldcode"
                        },
                        {
                            "text": "pg_last_error",
                            "type": "function",
                            "description": "Get the last error message string of a connection Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_last_notice",
                            "type": "function",
                            "description": "Returns the last notice message from PostgreSQL server Since PHP 4.0.6 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_put_line",
                            "type": "function",
                            "description": "Send a NULL-terminated string to PostgreSQL backend Since PHP 4.0.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $data"
                        },
                        {
                            "text": "pg_end_copy",
                            "type": "function",
                            "description": "Sync with PostgreSQL backend Since PHP 4.0.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_copy_to",
                            "type": "function",
                            "description": "Copy a table to an array Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$connection $table_name $delimiter $null_as"
                        },
                        {
                            "text": "pg_copy_from",
                            "type": "function",
                            "description": "Insert records into a table from an array Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $table_name array $rows $delimiter $null_as"
                        },
                        {
                            "text": "pg_trace",
                            "type": "function",
                            "description": "Enable tracing a PostgreSQL connection Since PHP 4.0.1 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pathname $mode $connection"
                        },
                        {
                            "text": "pg_untrace",
                            "type": "function",
                            "description": "Disable tracing of a PostgreSQL connection Since PHP 4.0.1 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_lo_create",
                            "type": "function",
                            "description": "Create a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection $object_id"
                        },
                        {
                            "text": "pg_lo_unlink",
                            "type": "function",
                            "description": "Delete a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $oid"
                        },
                        {
                            "text": "pg_lo_open",
                            "type": "function",
                            "description": "Open a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $oid $mode"
                        },
                        {
                            "text": "pg_lo_close",
                            "type": "function",
                            "description": "Close a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$large_object"
                        },
                        {
                            "text": "pg_lo_read",
                            "type": "function",
                            "description": "Read a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$large_object $len"
                        },
                        {
                            "text": "pg_lo_write",
                            "type": "function",
                            "description": "Write to a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$large_object $data $len"
                        },
                        {
                            "text": "pg_lo_read_all",
                            "type": "function",
                            "description": "Reads an entire large object and send straight to browser Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$large_object"
                        },
                        {
                            "text": "pg_lo_import",
                            "type": "function",
                            "description": "Import a large object from file Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection $pathname $object_id"
                        },
                        {
                            "text": "pg_lo_export",
                            "type": "function",
                            "description": "Export a large object to file Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $oid $pathname"
                        },
                        {
                            "text": "pg_lo_seek",
                            "type": "function",
                            "description": "Seeks position within a large object Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$large_object $offset $whence"
                        },
                        {
                            "text": "pg_lo_tell",
                            "type": "function",
                            "description": "Returns current seek position a of large object Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$large_object"
                        },
                        {
                            "text": "pg_escape_string",
                            "type": "function",
                            "description": "Escape a string for query Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection $data"
                        },
                        {
                            "text": "pg_escape_bytea",
                            "type": "function",
                            "description": "Escape a string for insertion into a bytea field Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection $data"
                        },
                        {
                            "text": "pg_escape_identifier",
                            "type": "function",
                            "description": "Escape a identifier for insertion into a text field Since PHP 5.4.4",
                            "leftLabel": "string",
                            "rightLabel": "$connection $data"
                        },
                        {
                            "text": "pg_escape_literal",
                            "type": "function",
                            "description": "Escape a literal for insertion into a text field Since PHP 5.4.4",
                            "leftLabel": "string",
                            "rightLabel": "$connection $data"
                        },
                        {
                            "text": "pg_unescape_bytea",
                            "type": "function",
                            "description": "Unescape binary for bytea type Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "pg_set_error_verbosity",
                            "type": "function",
                            "description": "Determines the verbosity of messages returned by pg_last_error Since PHP 5.1.0\nand <b>pg_result_error<\/b>.",
                            "leftLabel": "int",
                            "rightLabel": "$connection $verbosity"
                        },
                        {
                            "text": "pg_client_encoding",
                            "type": "function",
                            "description": "Gets the client encoding Since PHP 4.0.3 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_set_client_encoding",
                            "type": "function",
                            "description": "Set the client encoding Since PHP 4.0.3 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$connection $encoding"
                        },
                        {
                            "text": "pg_meta_data",
                            "type": "function",
                            "description": "Get meta data for table Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$connection $table_name"
                        },
                        {
                            "text": "pg_convert",
                            "type": "function",
                            "description": "Convert associative array values into suitable for SQL statement Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$connection $table_name array $assoc_array $options"
                        },
                        {
                            "text": "pg_insert",
                            "type": "function",
                            "description": "Insert array into table Since PHP 4.3.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$connection $table_name array $assoc_array $options"
                        },
                        {
                            "text": "pg_update",
                            "type": "function",
                            "description": "Update table Since PHP 4.3.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$connection $table_name array $data array $condition $options"
                        },
                        {
                            "text": "pg_delete",
                            "type": "function",
                            "description": "Deletes records Since PHP 4.3.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$connection $table_name array $assoc_array $options"
                        },
                        {
                            "text": "pg_select",
                            "type": "function",
                            "description": "Select records Since PHP 4.3.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$connection $table_name array $assoc_array $options"
                        },
                        {
                            "text": "pg_exec",
                            "type": "function",
                            "leftLabel": "mixed",
                            "rightLabel": "$connection $query"
                        },
                        {
                            "text": "pg_getlastoid",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_cmdtuples",
                            "type": "function",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_errormessage",
                            "type": "function",
                            "description": "TODO remove",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_numrows",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_numfields",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_fieldname",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_fieldsize",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_fieldtype",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_number"
                        },
                        {
                            "text": "pg_fieldnum",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$result $field_name"
                        },
                        {
                            "text": "pg_fieldprtlen",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$result $row $field_name_or_number"
                        },
                        {
                            "text": "pg_fieldisnull",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$result $row $field_name_or_number"
                        },
                        {
                            "text": "pg_freeresult",
                            "type": "function",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "pg_result",
                            "type": "function",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_loreadall",
                            "type": "function",
                            "description": "TODO remove",
                            "rightLabel": "$large_object"
                        },
                        {
                            "text": "pg_locreate",
                            "type": "function",
                            "description": "TODO remove",
                            "rightLabel": "$connection $large_object_id"
                        },
                        {
                            "text": "pg_lounlink",
                            "type": "function",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $large_object_oid"
                        },
                        {
                            "text": "pg_loopen",
                            "type": "function",
                            "leftLabel": "resource",
                            "rightLabel": "$connection $large_object_oid $mode"
                        },
                        {
                            "text": "pg_loclose",
                            "type": "function",
                            "leftLabel": "bool",
                            "rightLabel": "$large_object"
                        },
                        {
                            "text": "pg_loread",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$large_object $len"
                        },
                        {
                            "text": "pg_lowrite",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$large_object $buf $len"
                        },
                        {
                            "text": "pg_loimport",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$connection $filename $large_object_oid"
                        },
                        {
                            "text": "pg_loexport",
                            "type": "function",
                            "leftLabel": "bool",
                            "rightLabel": "$connection $objoid $filename"
                        },
                        {
                            "text": "pg_clientencoding",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$connection"
                        },
                        {
                            "text": "pg_setclientencoding",
                            "type": "function",
                            "leftLabel": "int",
                            "rightLabel": "$connection $encoding"
                        },
                        {
                            "text": "posix_kill",
                            "type": "function",
                            "description": "Start of posix v.",
                            "rightLabel": "$pid $sig"
                        },
                        {
                            "text": "posix_getpid",
                            "type": "function",
                            "description": "Return the current process identifier Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_getppid",
                            "type": "function",
                            "description": "Return the parent process identifier Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_getuid",
                            "type": "function",
                            "description": "Return the real user ID of the current process Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_setuid",
                            "type": "function",
                            "description": "Set the UID of the current process Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$uid"
                        },
                        {
                            "text": "posix_geteuid",
                            "type": "function",
                            "description": "Return the effective user ID of the current process Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_seteuid",
                            "type": "function",
                            "description": "Set the effective UID of the current process Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$uid"
                        },
                        {
                            "text": "posix_setrlimit",
                            "type": "function",
                            "description": "Set system resource limits Since PHP 7.0",
                            "leftLabel": "bool",
                            "rightLabel": "$resource $softlimit $hardlimit"
                        },
                        {
                            "text": "posix_getgid",
                            "type": "function",
                            "description": "Return the real group ID of the current process Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_setgid",
                            "type": "function",
                            "description": "Set the GID of the current process Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$gid"
                        },
                        {
                            "text": "posix_getegid",
                            "type": "function",
                            "description": "Return the effective group ID of the current process Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_setegid",
                            "type": "function",
                            "description": "Set the effective GID of the current process Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$gid"
                        },
                        {
                            "text": "posix_getgroups",
                            "type": "function",
                            "description": "Return the group set of the current process Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "posix_getlogin",
                            "type": "function",
                            "description": "Return login name Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "posix_getpgrp",
                            "type": "function",
                            "description": "Return the current process group identifier Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_setsid",
                            "type": "function",
                            "description": "Make the current process a session leader Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_setpgid",
                            "type": "function",
                            "description": "Set process group id for job control Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pid $pgid"
                        },
                        {
                            "text": "posix_getpgid",
                            "type": "function",
                            "description": "Get process group id for job control Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pid"
                        },
                        {
                            "text": "posix_getsid",
                            "type": "function",
                            "description": "Get the current sid of the process Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pid"
                        },
                        {
                            "text": "posix_uname",
                            "type": "function",
                            "description": "Get system name Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "posix_times",
                            "type": "function",
                            "description": "Get process times Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "posix_ctermid",
                            "type": "function",
                            "description": "Get path name of controlling terminal Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "posix_ttyname",
                            "type": "function",
                            "description": "Determine terminal device name Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$fd"
                        },
                        {
                            "text": "posix_isatty",
                            "type": "function",
                            "description": "Determine if a file descriptor is an interactive terminal Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$fd"
                        },
                        {
                            "text": "posix_getcwd",
                            "type": "function",
                            "description": "Pathname of current directory Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "posix_mkfifo",
                            "type": "function",
                            "description": "Create a fifo special file (a named pipe) Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pathname $mode"
                        },
                        {
                            "text": "posix_mknod",
                            "type": "function",
                            "description": "Create a special or ordinary file (POSIX.1) Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pathname $mode $major $minor"
                        },
                        {
                            "text": "posix_access",
                            "type": "function",
                            "description": "Determine accessibility of a file Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$file $mode"
                        },
                        {
                            "text": "posix_getgrnam",
                            "type": "function",
                            "description": "Return info about a group by name Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "posix_getgrgid",
                            "type": "function",
                            "description": "Return info about a group by group id Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$gid"
                        },
                        {
                            "text": "posix_getpwnam",
                            "type": "function",
                            "description": "Return info about a user by username Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$username"
                        },
                        {
                            "text": "posix_getpwuid",
                            "type": "function",
                            "description": "Return info about a user by user id Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$uid"
                        },
                        {
                            "text": "posix_getrlimit",
                            "type": "function",
                            "description": "Return info about system resource limits Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "posix_get_last_error",
                            "type": "function",
                            "description": "Retrieve the error number set by the last posix function that failed Since PHP 4.2.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "posix_errno",
                            "type": "function",
                            "description": "Alias of posix_get_last_error Since PHP 4.2.0 5.0"
                        },
                        {
                            "text": "posix_strerror",
                            "type": "function",
                            "description": "Retrieve the system error message associated with the given errno Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$errno"
                        },
                        {
                            "text": "posix_initgroups",
                            "type": "function",
                            "description": "Calculate the group access list Since PHP 5.2.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $base_group_id"
                        },
                        {
                            "text": "pspell_new",
                            "type": "function",
                            "description": "Start of pspell v.",
                            "rightLabel": "$language $spelling $jargon $encoding $mode"
                        },
                        {
                            "text": "pspell_new_personal",
                            "type": "function",
                            "description": "Load a new dictionary with personal wordlist Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$personal $language $spelling $jargon $encoding $mode"
                        },
                        {
                            "text": "pspell_new_config",
                            "type": "function",
                            "description": "Load a new dictionary with settings based on a given config Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$config"
                        },
                        {
                            "text": "pspell_check",
                            "type": "function",
                            "description": "Check a word Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $word"
                        },
                        {
                            "text": "pspell_suggest",
                            "type": "function",
                            "description": "Suggest spellings of a word Since PHP 4.0.2 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$dictionary_link $word"
                        },
                        {
                            "text": "pspell_store_replacement",
                            "type": "function",
                            "description": "Store a replacement pair for a word Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $misspelled $correct"
                        },
                        {
                            "text": "pspell_add_to_personal",
                            "type": "function",
                            "description": "Add the word to a personal wordlist Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $word"
                        },
                        {
                            "text": "pspell_add_to_session",
                            "type": "function",
                            "description": "Add the word to the wordlist in the current session Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $word"
                        },
                        {
                            "text": "pspell_clear_session",
                            "type": "function",
                            "description": "Clear the current session Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link"
                        },
                        {
                            "text": "pspell_save_wordlist",
                            "type": "function",
                            "description": "Save the personal wordlist to a file Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link"
                        },
                        {
                            "text": "pspell_config_create",
                            "type": "function",
                            "description": "Create a config used to open a dictionary Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$language $spelling $jargon $encoding"
                        },
                        {
                            "text": "pspell_config_runtogether",
                            "type": "function",
                            "description": "Consider run-together words as valid compounds Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $flag"
                        },
                        {
                            "text": "pspell_config_mode",
                            "type": "function",
                            "description": "Change the mode number of suggestions returned Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $mode"
                        },
                        {
                            "text": "pspell_config_ignore",
                            "type": "function",
                            "description": "Ignore words less than N characters long Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $n"
                        },
                        {
                            "text": "pspell_config_personal",
                            "type": "function",
                            "description": "Set a file that contains personal wordlist Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $file"
                        },
                        {
                            "text": "pspell_config_dict_dir",
                            "type": "function",
                            "description": "Location of the main word list Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$conf $directory"
                        },
                        {
                            "text": "pspell_config_data_dir",
                            "type": "function",
                            "description": "location of language data files Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$conf $directory"
                        },
                        {
                            "text": "pspell_config_repl",
                            "type": "function",
                            "description": "Set a file that contains replacement pairs Since PHP 4.0.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $file"
                        },
                        {
                            "text": "pspell_config_save_repl",
                            "type": "function",
                            "description": "Determine whether to save a replacement pairs list Since PHP 4.0.2 5.0\nalong with the wordlist",
                            "leftLabel": "bool",
                            "rightLabel": "$dictionary_link $flag"
                        },
                        {
                            "text": "readline",
                            "type": "function",
                            "description": "Start of readline v.5.5.3-1ubuntu2.1",
                            "rightLabel": "$prompt"
                        },
                        {
                            "text": "readline_info",
                            "type": "function",
                            "description": "Gets\/sets various internal readline variables Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$varname $newvalue"
                        },
                        {
                            "text": "readline_add_history",
                            "type": "function",
                            "description": "Adds a line to the history Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$line"
                        },
                        {
                            "text": "readline_clear_history",
                            "type": "function",
                            "description": "Clears the history Since PHP 4.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "readline_list_history",
                            "type": "function",
                            "description": "Lists the history Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "readline_read_history",
                            "type": "function",
                            "description": "Reads the history Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "readline_write_history",
                            "type": "function",
                            "description": "Writes the history Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "readline_completion_function",
                            "type": "function",
                            "description": "Registers a completion function Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "callable $function"
                        },
                        {
                            "text": "readline_callback_handler_install",
                            "type": "function",
                            "description": "Initializes the readline callback interface and terminal, prints the prompt and returns immediately Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$prompt callable $callback"
                        },
                        {
                            "text": "readline_callback_read_char",
                            "type": "function",
                            "description": "Reads a character and informs the readline callback interface when a line is received Since PHP 5.1.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "readline_callback_handler_remove",
                            "type": "function",
                            "description": "Removes a previously installed callback handler and restores terminal settings Since PHP 5.1.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "readline_redisplay",
                            "type": "function",
                            "description": "Redraws the display Since PHP 5.1.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "readline_on_new_line",
                            "type": "function",
                            "description": "Inform readline that the cursor has moved to a new line Since PHP 5.1.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "recode_string",
                            "type": "function",
                            "description": "Start of recode v.",
                            "rightLabel": "$request $string"
                        },
                        {
                            "text": "recode_file",
                            "type": "function",
                            "description": "Recode from file to file according to recode request Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$request $input $output"
                        },
                        {
                            "text": "recode",
                            "type": "function",
                            "description": "Alias of recode_string Since PHP 4.0 5.0",
                            "rightLabel": "$request $str"
                        },
                        {
                            "text": "session_name",
                            "type": "function",
                            "description": "Start of session v.",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "session_module_name",
                            "type": "function",
                            "description": "Get and\/or set the current session module Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$module"
                        },
                        {
                            "text": "session_save_path",
                            "type": "function",
                            "description": "Get and\/or set the current session save path Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "session_id",
                            "type": "function",
                            "description": "Get and\/or set the current session id Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$id"
                        },
                        {
                            "text": "session_regenerate_id",
                            "type": "function",
                            "description": "Update the current session id with a newly generated one Since PHP 4.3.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$delete_old_session"
                        },
                        {
                            "text": "session_register_shutdown",
                            "type": "function",
                            "description": "PHP > 5.4.0 \nSession shutdown function"
                        },
                        {
                            "text": "session_decode",
                            "type": "function",
                            "description": "Decodes session data from a string Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "session_register",
                            "type": "function",
                            "description": "Register one or more global variables with the current session Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $_"
                        },
                        {
                            "text": "session_unregister",
                            "type": "function",
                            "description": "Unregister a global variable from the current session Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "session_is_registered",
                            "type": "function",
                            "description": "Find out whether a global variable is registered in a session Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "session_encode",
                            "type": "function",
                            "description": "Encodes the current session data as a string Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "session_start",
                            "type": "function",
                            "description": "Initialize session data Since PHP 4.0 5.0 7.0",
                            "leftLabel": "bool",
                            "rightLabel": "$options"
                        },
                        {
                            "text": "session_destroy",
                            "type": "function",
                            "description": "Destroys all data registered to a session Since PHP 4.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "session_unset",
                            "type": "function",
                            "description": "Free all session variables Since PHP 4.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "session_set_save_handler",
                            "type": "function",
                            "description": "Sets user-level session storage functions Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$open $close $read $write $destroy $gc $create_sid"
                        },
                        {
                            "text": "session_set_save_handler",
                            "type": "function",
                            "description": "(PHP 5.4)\nSets user-level session storage functions",
                            "leftLabel": "bool",
                            "rightLabel": "SessionHandlerInterface $session_handler $register_shutdown"
                        },
                        {
                            "text": "session_cache_limiter",
                            "type": "function",
                            "description": "Get and\/or set the current cache limiter Since PHP 4.0.3 5.0 7.0",
                            "leftLabel": "string",
                            "rightLabel": "$cache_limiter"
                        },
                        {
                            "text": "session_cache_expire",
                            "type": "function",
                            "description": "Return current cache expire Since PHP 4.2.0 5.0 7.0",
                            "leftLabel": "int",
                            "rightLabel": "$new_cache_expire"
                        },
                        {
                            "text": "session_set_cookie_params",
                            "type": "function",
                            "description": "Set the session cookie parameters Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$lifetime $path $domain $secure $httponly"
                        },
                        {
                            "text": "session_get_cookie_params",
                            "type": "function",
                            "description": "Get the session cookie parameters Since PHP 4.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "session_write_close",
                            "type": "function",
                            "description": "Write session data and end session Since PHP 4.0.4 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "session_commit",
                            "type": "function",
                            "description": "Alias of session_write_close Since PHP 4.4.0 5.0"
                        },
                        {
                            "text": "session_status",
                            "type": "function",
                            "description": "(PHP 5 >= 5.4.0)\nReturns the current session status",
                            "leftLabel": "int"
                        },
                        {
                            "text": "session_abort",
                            "type": "function",
                            "description": "(PHP 5 >= 5.6.0)\nDiscard session array changes and finish session",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "session_reset",
                            "type": "function",
                            "description": "(PHP 5 >= 5.6.0)\nRe-initialize session array with original values",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "shmop_open",
                            "type": "function",
                            "description": "Start of shmop v.",
                            "rightLabel": "$key $flags $mode $size"
                        },
                        {
                            "text": "shmop_read",
                            "type": "function",
                            "description": "Read data from shared memory block Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$shmid $start $count"
                        },
                        {
                            "text": "shmop_close",
                            "type": "function",
                            "description": "Close shared memory block Since PHP 4.0.4 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$shmid"
                        },
                        {
                            "text": "shmop_size",
                            "type": "function",
                            "description": "Get size of shared memory block Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$shmid"
                        },
                        {
                            "text": "shmop_write",
                            "type": "function",
                            "description": "Write data into shared memory block Since PHP 4.0.4 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$shmid $data $offset"
                        },
                        {
                            "text": "shmop_delete",
                            "type": "function",
                            "description": "Delete shared memory block Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$shmid"
                        },
                        {
                            "text": "simplexml_load_file",
                            "type": "function",
                            "description": "Interprets an XML file into an object Since PHP 5.0",
                            "leftLabel": "SimpleXMLElement",
                            "rightLabel": "$filename $class_name $options $ns $is_prefix"
                        },
                        {
                            "text": "simplexml_load_string",
                            "type": "function",
                            "description": "Interprets a string of XML into an object Since PHP 5.0",
                            "leftLabel": "SimpleXMLElement",
                            "rightLabel": "$data $class_name $options $ns $is_prefix"
                        },
                        {
                            "text": "simplexml_import_dom",
                            "type": "function",
                            "description": "Get a SimpleXMLElement object from a DOM node. Since PHP 5.0",
                            "leftLabel": "SimpleXMLElement",
                            "rightLabel": "DOMNode $node $class_name"
                        },
                        {
                            "text": "snmpget",
                            "type": "function",
                            "description": "Fetch an SNMP object Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hostname $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmpgetnext",
                            "type": "function",
                            "description": "Fetch the SNMP object which follows the given object id Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$host $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmpwalk",
                            "type": "function",
                            "description": "Fetch all the SNMP objects from an agent Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$hostname $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmprealwalk",
                            "type": "function",
                            "description": "Return all objects including their respective object ID within the specified one Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$host $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmpwalkoid",
                            "type": "function",
                            "description": "Query for a tree of information about a network entity Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$hostname $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmpset",
                            "type": "function",
                            "description": "Set the value of an SNMP object Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$host $community $object_id $type $value $timeout $retries"
                        },
                        {
                            "text": "snmp_get_quick_print",
                            "type": "function",
                            "description": "Fetches the current value of the UCD library's quick_print setting Since PHP 4.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "snmp_set_quick_print",
                            "type": "function",
                            "description": "Set the value of quick_print within the UCD SNMP library Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$quick_print"
                        },
                        {
                            "text": "snmp_set_enum_print",
                            "type": "function",
                            "description": "Return all values that are enums with their enum value instead of the raw integer Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$enum_print"
                        },
                        {
                            "text": "snmp_set_oid_output_format",
                            "type": "function",
                            "description": "Set the OID output format Since PHP 5.2.0",
                            "leftLabel": "bool",
                            "rightLabel": "$oid_format"
                        },
                        {
                            "text": "snmp_set_oid_numeric_print",
                            "type": "function",
                            "description": "Return all objects including their respective object id within the specified one Since PHP 4.3.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$oid_format"
                        },
                        {
                            "text": "snmp2_get",
                            "type": "function",
                            "description": "Fetch an SNMP object Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$host $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp2_getnext",
                            "type": "function",
                            "description": "Fetch the SNMP object which follows the given object id Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$host $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp2_walk",
                            "type": "function",
                            "description": "Fetch all the SNMP objects from an agent Since PHP 5.2.0",
                            "leftLabel": "array",
                            "rightLabel": "$host $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp2_real_walk",
                            "type": "function",
                            "description": "Return all objects including their respective object ID within the specified one Since PHP 5.2.0",
                            "leftLabel": "array",
                            "rightLabel": "$host $community $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp2_set",
                            "type": "function",
                            "description": "Set the value of an SNMP object Since PHP 5.2.0",
                            "leftLabel": "bool",
                            "rightLabel": "$host $community $object_id $type $value $timeout $retries"
                        },
                        {
                            "text": "snmp3_get",
                            "type": "function",
                            "description": "Fetch an SNMP object Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$host $sec_name $sec_level $auth_protocol $auth_passphrase $priv_protocol $priv_passphrase $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp3_getnext",
                            "type": "function",
                            "description": "Fetch the SNMP object which follows the given object id Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$host $sec_name $sec_level $auth_protocol $auth_passphrase $priv_protocol $priv_passphrase $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp3_walk",
                            "type": "function",
                            "description": "Fetch all the SNMP objects from an agent Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$host $sec_name $sec_level $auth_protocol $auth_passphrase $priv_protocol $priv_passphrase $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp3_real_walk",
                            "type": "function",
                            "description": "Return all objects including their respective object ID within the specified one Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$host $sec_name $sec_level $auth_protocol $auth_passphrase $priv_protocol $priv_passphrase $object_id $timeout $retries"
                        },
                        {
                            "text": "snmp3_set",
                            "type": "function",
                            "description": "Set the value of an SNMP object Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$host $sec_name $sec_level $auth_protocol $auth_passphrase $priv_protocol $priv_passphrase $object_id $type $value $timeout $retries"
                        },
                        {
                            "text": "snmp_set_valueretrieval",
                            "type": "function",
                            "description": "Specify the method how the SNMP values will be returned Since PHP 4.3.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$method"
                        },
                        {
                            "text": "snmp_get_valueretrieval",
                            "type": "function",
                            "description": "Return the method how the SNMP values will be returned Since PHP 4.3.3 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "snmp_read_mib",
                            "type": "function",
                            "description": "Reads and parses a MIB file into the active MIB tree Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "use_soap_error_handler",
                            "type": "function",
                            "description": "Set whether to use the SOAP error handler",
                            "leftLabel": "bool",
                            "rightLabel": "$handler"
                        },
                        {
                            "text": "is_soap_fault",
                            "type": "function",
                            "description": "Checks if a SOAP call has failed",
                            "leftLabel": "bool",
                            "rightLabel": "$object"
                        },
                        {
                            "text": "socket_select",
                            "type": "function",
                            "description": "Start of sockets v.",
                            "rightLabel": "array $read array $write array $except $tv_sec $tv_usec"
                        },
                        {
                            "text": "socket_create",
                            "type": "function",
                            "description": "Create a socket (endpoint for communication) Since PHP 4.1.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$domain $type $protocol"
                        },
                        {
                            "text": "socket_create_listen",
                            "type": "function",
                            "description": "Opens a socket on port to accept connections Since PHP 4.1.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$port $backlog"
                        },
                        {
                            "text": "socket_create_pair",
                            "type": "function",
                            "description": "Creates a pair of indistinguishable sockets and stores them in an array Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$domain $type $protocol array $fd"
                        },
                        {
                            "text": "socket_accept",
                            "type": "function",
                            "description": "Accepts a connection on a socket Since PHP 4.1.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$socket"
                        },
                        {
                            "text": "socket_set_nonblock",
                            "type": "function",
                            "description": "Sets nonblocking mode for file descriptor fd Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket"
                        },
                        {
                            "text": "socket_set_block",
                            "type": "function",
                            "description": "Sets blocking mode on a socket resource Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket"
                        },
                        {
                            "text": "socket_listen",
                            "type": "function",
                            "description": "Listens for a connection on a socket Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $backlog"
                        },
                        {
                            "text": "socket_close",
                            "type": "function",
                            "description": "Closes a socket resource Since PHP 4.1.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$socket"
                        },
                        {
                            "text": "socket_cmsg_space",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nCalculate message buffer size Since PHP 5.5.0",
                            "rightLabel": "$level $type"
                        },
                        {
                            "text": "socket_write",
                            "type": "function",
                            "description": "Write to a socket Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $buffer $length"
                        },
                        {
                            "text": "socket_read",
                            "type": "function",
                            "description": "Reads a maximum of length bytes from a socket Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$socket $length $type"
                        },
                        {
                            "text": "socket_getsockname",
                            "type": "function",
                            "description": "Queries the local side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $addr $port"
                        },
                        {
                            "text": "socket_getpeername",
                            "type": "function",
                            "description": "Queries the remote side of the given socket which may either result in host\/port or in a Unix filesystem path, dependent on its type Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $address $port"
                        },
                        {
                            "text": "socket_connect",
                            "type": "function",
                            "description": "Initiates a connection on a socket Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $address $port"
                        },
                        {
                            "text": "socket_strerror",
                            "type": "function",
                            "description": "Return a string describing a socket error Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$errno"
                        },
                        {
                            "text": "socket_bind",
                            "type": "function",
                            "description": "Binds a name to a socket Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $address $port"
                        },
                        {
                            "text": "socket_recv",
                            "type": "function",
                            "description": "Receives data from a connected socket Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $buf $len $flags"
                        },
                        {
                            "text": "socket_send",
                            "type": "function",
                            "description": "Sends data to a connected socket Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $buf $len $flags"
                        },
                        {
                            "text": "socket_sendmsg",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nSend a message Since PHP 5.5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket array $message $flags"
                        },
                        {
                            "text": "socket_recvfrom",
                            "type": "function",
                            "description": "Receives data from a socket whether or not it is connection-oriented Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $buf $len $flags $name $port"
                        },
                        {
                            "text": "socket_recvmsg",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nRead a message Since PHP 5.5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $message $flags"
                        },
                        {
                            "text": "socket_sendto",
                            "type": "function",
                            "description": "Sends a message to a socket, whether it is connected or not Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $buf $len $flags $addr $port"
                        },
                        {
                            "text": "socket_get_option",
                            "type": "function",
                            "description": "Gets socket options for the socket Since PHP 4.3.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$socket $level $optname"
                        },
                        {
                            "text": "socket_set_option",
                            "type": "function",
                            "description": "Sets socket options for the socket Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $level $optname $optval"
                        },
                        {
                            "text": "socket_shutdown",
                            "type": "function",
                            "description": "Shuts down a socket for receiving, sending, or both Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $how"
                        },
                        {
                            "text": "socket_last_error",
                            "type": "function",
                            "description": "Returns the last error on the socket Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket"
                        },
                        {
                            "text": "socket_clear_error",
                            "type": "function",
                            "description": "Clears the error on the socket or the last error code Since PHP 4.2.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$socket"
                        },
                        {
                            "text": "socket_import_stream",
                            "type": "function",
                            "description": "Import a stream Since PHP 5.4.0",
                            "leftLabel": "resource",
                            "rightLabel": "$stream"
                        },
                        {
                            "text": "socket_sendmsg",
                            "type": "function",
                            "description": "Send a message Since PHP 5.5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket array $message $flags"
                        },
                        {
                            "text": "socket_recvmsg",
                            "type": "function",
                            "description": "Read a message Since PHP 5.5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $message $flags"
                        },
                        {
                            "text": "socket_cmsg_space",
                            "type": "function",
                            "description": "Calculate message buffer size Since PHP 5.5.0",
                            "leftLabel": "int",
                            "rightLabel": "$level $type"
                        },
                        {
                            "text": "socket_getopt",
                            "type": "function",
                            "rightLabel": "$socket $level $optname"
                        },
                        {
                            "text": "socket_setopt",
                            "type": "function",
                            "rightLabel": "$socket $level $optname $optval"
                        },
                        {
                            "text": "spl_classes",
                            "type": "function",
                            "description": "Start of SPL v.0.2"
                        },
                        {
                            "text": "spl_autoload",
                            "type": "function",
                            "description": "Default implementation for __autoload() Since PHP 5.1.2",
                            "leftLabel": "void",
                            "rightLabel": "$class_name $file_extensions"
                        },
                        {
                            "text": "spl_autoload_extensions",
                            "type": "function",
                            "description": "Register and return default file extensions for spl_autoload Since PHP 5.1.2",
                            "leftLabel": "string",
                            "rightLabel": "$file_extensions"
                        },
                        {
                            "text": "spl_autoload_register",
                            "type": "function",
                            "description": "Register given function as __autoload() implementation Since PHP 5.1.2",
                            "leftLabel": "bool",
                            "rightLabel": "$autoload_function $throw $prepend"
                        },
                        {
                            "text": "spl_autoload_unregister",
                            "type": "function",
                            "description": "Unregister given function as __autoload() implementation Since PHP 5.1.2",
                            "leftLabel": "bool",
                            "rightLabel": "$autoload_function"
                        },
                        {
                            "text": "spl_autoload_functions",
                            "type": "function",
                            "description": "Return all registered __autoload() functions Since PHP 5.1.2",
                            "leftLabel": "array"
                        },
                        {
                            "text": "spl_autoload_call",
                            "type": "function",
                            "description": "Try all registered __autoload() function to load the requested class Since PHP 5.1.2",
                            "leftLabel": "void",
                            "rightLabel": "$class_name"
                        },
                        {
                            "text": "class_parents",
                            "type": "function",
                            "description": "Return the parent classes of the given class Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "$class $autoload"
                        },
                        {
                            "text": "class_implements",
                            "type": "function",
                            "description": "Return the interfaces which are implemented by the given class Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "$class $autoload"
                        },
                        {
                            "text": "spl_object_hash",
                            "type": "function",
                            "description": "Return hash id for given object Since PHP 5.2.0",
                            "leftLabel": "string",
                            "rightLabel": "$obj"
                        },
                        {
                            "text": "iterator_to_array",
                            "type": "function",
                            "description": "Copy the iterator into an array Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "$iterator $use_keys"
                        },
                        {
                            "text": "iterator_count",
                            "type": "function",
                            "description": "Count the elements in an iterator Since PHP 5.1.0",
                            "leftLabel": "int",
                            "rightLabel": "$iterator"
                        },
                        {
                            "text": "iterator_apply",
                            "type": "function",
                            "description": "Call a function for every element in an iterator Since PHP 5.1.0",
                            "leftLabel": "int",
                            "rightLabel": "$iterator $function array $args"
                        },
                        {
                            "text": "class_uses",
                            "type": "function",
                            "description": "End of SPL v.0.2",
                            "rightLabel": "$class bool $autoload"
                        },
                        {
                            "text": "sqlite_open",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nOpens a SQLite database and create the database if it does not exist",
                            "leftLabel": "resource",
                            "rightLabel": "$filename $mode $error_message"
                        },
                        {
                            "text": "sqlite_popen",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nOpens a persistent handle to an SQLite database and create the database if it does not exist",
                            "leftLabel": "resource",
                            "rightLabel": "$filename $mode $error_message"
                        },
                        {
                            "text": "sqlite_close",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nCloses an open SQLite database",
                            "leftLabel": "void",
                            "rightLabel": "$dbhandle"
                        },
                        {
                            "text": "sqlite_query",
                            "type": "function",
                            "description": "(PHP 5 < 5.4.0, PECL sqlite >= 1.0.0)\nExecutes a query against a given database and returns a result handle\nthere are two signatures with $query first and with $dbhandle first.",
                            "leftLabel": "resource",
                            "rightLabel": "$query $dbhandle $result_type $error_msg"
                        },
                        {
                            "text": "sqlite_exec",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.3)\nExecutes a result-less query against a given database",
                            "leftLabel": "bool",
                            "rightLabel": "$dbhandle $query $error_msg"
                        },
                        {
                            "text": "sqlite_array_query",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nExecute a query against a given database and returns an array",
                            "leftLabel": "array",
                            "rightLabel": "$dbhandle $query $result_type $decode_binary"
                        },
                        {
                            "text": "sqlite_single_query",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.1)\nExecutes a query and returns either an array for one single column or the value of the first row",
                            "leftLabel": "array",
                            "rightLabel": "$db $query $first_row_only $decode_binary"
                        },
                        {
                            "text": "sqlite_fetch_array",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nFetches the next row from a result set as an array",
                            "leftLabel": "array",
                            "rightLabel": "$result $result_type $decode_binary"
                        },
                        {
                            "text": "sqlite_fetch_object",
                            "type": "function",
                            "description": "Fetches the next row from a result set as an object Since PHP 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$result $class_name array $ctor_params $decode_binary"
                        },
                        {
                            "text": "sqlite_fetch_single",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.1)\nFetches the first column of a result set as a string",
                            "leftLabel": "string",
                            "rightLabel": "$result $decode_binary"
                        },
                        {
                            "text": "sqlite_fetch_string",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\n&Alias; {@see sqlite_fetch_single}",
                            "leftLabel": "string",
                            "rightLabel": "$result $decode_binary"
                        },
                        {
                            "text": "sqlite_fetch_all",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nFetches all rows from a result set as an array of arrays",
                            "leftLabel": "array",
                            "rightLabel": "$result_type $decode_binary"
                        },
                        {
                            "text": "sqlite_current",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nFetches the current row from a result set as an array",
                            "leftLabel": "array",
                            "rightLabel": "$result $result_type $decode_binary"
                        },
                        {
                            "text": "sqlite_column",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nFetches a column from the current row of a result set",
                            "leftLabel": "mixed",
                            "rightLabel": "$result $index_or_name $decode_binary"
                        },
                        {
                            "text": "sqlite_libversion",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the version of the linked SQLite library",
                            "leftLabel": "string"
                        },
                        {
                            "text": "sqlite_libencoding",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the encoding of the linked SQLite library",
                            "leftLabel": "string"
                        },
                        {
                            "text": "sqlite_changes",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the number of rows that were changed by the most\nrecent SQL statement",
                            "leftLabel": "int",
                            "rightLabel": "$db"
                        },
                        {
                            "text": "sqlite_last_insert_rowid",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the rowid of the most recently inserted row",
                            "leftLabel": "int",
                            "rightLabel": "$dbhandle"
                        },
                        {
                            "text": "sqlite_num_rows",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the number of rows in a buffered result set",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_num_fields",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the number of fields in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_field_name",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the name of a particular field",
                            "leftLabel": "string",
                            "rightLabel": "$result $field_index"
                        },
                        {
                            "text": "sqlite_seek",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nSeek to a particular row number of a buffered result set",
                            "leftLabel": "bool",
                            "rightLabel": "$result $rownum"
                        },
                        {
                            "text": "sqlite_rewind",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nSeek to the first row number",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_next",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nSeek to the next row number",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_prev",
                            "type": "function",
                            "description": "Seek to the previous row number of a result set Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_valid",
                            "type": "function",
                            "description": "Returns whether more rows are available Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_has_more",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nFinds whether or not more rows are available",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_has_prev",
                            "type": "function",
                            "description": "Returns whether or not a previous row is available Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sqlite_escape_string",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nEscapes a string for use as a query parameter",
                            "leftLabel": "string",
                            "rightLabel": "$item"
                        },
                        {
                            "text": "sqlite_busy_timeout",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nSet busy timeout duration, or disable busy handlers",
                            "leftLabel": "void",
                            "rightLabel": "$dbhandle $milliseconds"
                        },
                        {
                            "text": "sqlite_last_error",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the error code of the last error for a database",
                            "leftLabel": "int",
                            "rightLabel": "$dbhandle"
                        },
                        {
                            "text": "sqlite_error_string",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nReturns the textual description of an error code",
                            "leftLabel": "string",
                            "rightLabel": "$error_code"
                        },
                        {
                            "text": "sqlite_unbuffered_query",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nExecute a query that does not prefetch and buffer all data",
                            "leftLabel": "SQLiteUnbuffered",
                            "rightLabel": "$dbhandle $query $result_type $error_msg"
                        },
                        {
                            "text": "sqlite_create_aggregate",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nRegister an aggregating UDF for use in SQL statements",
                            "leftLabel": "void",
                            "rightLabel": "$dbhandle $function_name $step_func $finalize_func $num_args"
                        },
                        {
                            "text": "sqlite_create_function",
                            "type": "function",
                            "description": "(PHP 5, sqlite >= 1.0.0)\nRegisters a \"regular\" User Defined Function for use in SQL statements",
                            "leftLabel": "void",
                            "rightLabel": "$dbhandle $function_name $callback $num_args"
                        },
                        {
                            "text": "sqlite_factory",
                            "type": "function",
                            "description": "Opens a SQLite database and returns a SQLiteDatabase object Since PHP 5.0",
                            "leftLabel": "SQLiteDatabase",
                            "rightLabel": "$filename $mode $error_message"
                        },
                        {
                            "text": "sqlite_udf_encode_binary",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nEncode binary data before returning it from an UDF",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "sqlite_udf_decode_binary",
                            "type": "function",
                            "description": "(PHP 5, PECL sqlite >= 1.0.0)\nDecode binary data passed as parameters to an UDF",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "sqlite_fetch_column_types",
                            "type": "function",
                            "description": "Return an array of column types from a particular table Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$dbhandle $table_name $result_type"
                        },
                        {
                            "text": "sqlsrv_connect",
                            "type": "function",
                            "description": "Creates and opens a connection.",
                            "leftLabel": "resource | false",
                            "rightLabel": "$server_name $connection_info"
                        },
                        {
                            "text": "sqlsrv_close",
                            "type": "function",
                            "description": "Closes a connection. Frees all resources associated with the connection.",
                            "leftLabel": "bool",
                            "rightLabel": "$conn"
                        },
                        {
                            "text": "sqlsrv_commit",
                            "type": "function",
                            "description": "Commits a transaction.",
                            "leftLabel": "bool",
                            "rightLabel": "$conn"
                        },
                        {
                            "text": "sqlsrv_begin_transaction",
                            "type": "function",
                            "description": "Begins a transaction.",
                            "leftLabel": "bool",
                            "rightLabel": "$conn"
                        },
                        {
                            "text": "sqlsrv_rollback",
                            "type": "function",
                            "description": "Rolls back a transaction.",
                            "leftLabel": "bool",
                            "rightLabel": "$conn"
                        },
                        {
                            "text": "sqlsrv_errors",
                            "type": "function",
                            "description": "Returns error and\/or warning information about the last operation.",
                            "leftLabel": "array | null",
                            "rightLabel": "$errorsAndOrWarnings"
                        },
                        {
                            "text": "sqlsrv_configure",
                            "type": "function",
                            "description": "Changes error handling and logging configurations.",
                            "leftLabel": "bool",
                            "rightLabel": "$setting $value"
                        },
                        {
                            "text": "sqlsrv_get_config",
                            "type": "function",
                            "description": "Returns the current value of the specified configuration setting.",
                            "leftLabel": "mixed",
                            "rightLabel": "$setting"
                        },
                        {
                            "text": "sqlsrv_prepare",
                            "type": "function",
                            "description": "Prepares a Transact-SQL query without executing it. Implicitly binds parameters.",
                            "leftLabel": "resource | false",
                            "rightLabel": "$conn $tsql $params $options"
                        },
                        {
                            "text": "sqlsrv_execute",
                            "type": "function",
                            "description": "Executes a prepared statement.",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_query",
                            "type": "function",
                            "description": "Prepares and executes a Transact-SQL query.",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$conn $tsql $params $options"
                        },
                        {
                            "text": "sqlsrv_fetch",
                            "type": "function",
                            "description": "Makes the next row of data available for reading.",
                            "leftLabel": "array | null | false",
                            "rightLabel": "$stmt $row $offset"
                        },
                        {
                            "text": "sqlsrv_get_field",
                            "type": "function",
                            "description": "Retrieves a field in the current row by index. The PHP return type can be specified.",
                            "leftLabel": "mixed",
                            "rightLabel": "$stmt $field_index $get_as_type"
                        },
                        {
                            "text": "sqlsrv_fetch_array",
                            "type": "function",
                            "description": "Retrieves the next row of data as a numerically indexed array, an associative array, or both.",
                            "leftLabel": "array | null | false",
                            "rightLabel": "$stmt $fetch_type $row $offset"
                        },
                        {
                            "text": "sqlsrv_fetch_object",
                            "type": "function",
                            "description": "Retrieves the next row of data as an object.",
                            "leftLabel": "object | false | null",
                            "rightLabel": "$stmt $class_name $ctor_params $row $offset"
                        },
                        {
                            "text": "sqlsrv_has_rows",
                            "type": "function",
                            "description": "Detects if a result set has one or more rows.",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_num_fields",
                            "type": "function",
                            "description": "Retrieves the number of fields in an active result set.",
                            "leftLabel": "int | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_next_result",
                            "type": "function",
                            "description": "Makes the next result available for processing.",
                            "leftLabel": "bool | null",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_num_rows",
                            "type": "function",
                            "description": "Reports the number of rows in a result set.",
                            "leftLabel": "int | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_rows_affected",
                            "type": "function",
                            "description": "Returns the number of modified rows.",
                            "leftLabel": "int | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_client_info",
                            "type": "function",
                            "description": "Provides information about the client.",
                            "leftLabel": "array | null",
                            "rightLabel": "$conn"
                        },
                        {
                            "text": "sqlsrv_server_info",
                            "type": "function",
                            "description": "Provides information about the server.",
                            "leftLabel": "array",
                            "rightLabel": "$conn"
                        },
                        {
                            "text": "sqlsrv_cancel",
                            "type": "function",
                            "description": "Cancels a statement; discards any pending results for the statement.",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_free_stmt",
                            "type": "function",
                            "description": "Closes a statement. Frees all resources associated with the statement.",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_field_metadata",
                            "type": "function",
                            "description": "Returns field metadata.",
                            "leftLabel": "array | bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "sqlsrv_send_stream_data",
                            "type": "function",
                            "description": "Sends up to eight kilobytes (8 KB) of data to the server with each call to the function.",
                            "leftLabel": "bool",
                            "rightLabel": "$stmt"
                        },
                        {
                            "text": "SQLSRV_PHPTYPE_STREAM",
                            "type": "function",
                            "description": "Specifies the encoding of a stream of data from the server.",
                            "leftLabel": "int",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "SQLSRV_PHPTYPE_STRING",
                            "type": "function",
                            "description": "Specifies the encoding of a string being received form the server.",
                            "leftLabel": "int",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_BINARY",
                            "type": "function",
                            "description": "Specifies a SQL Server binary field.",
                            "leftLabel": "int",
                            "rightLabel": "$byteCount"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_VARBINARY",
                            "type": "function",
                            "description": "Specifies a SQL Server varbinary field.",
                            "leftLabel": "int",
                            "rightLabel": "$byteCount"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_VARCHAR",
                            "type": "function",
                            "description": "Specifies a SQL Server varchar filed.",
                            "leftLabel": "int",
                            "rightLabel": "$charCount"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_CHAR",
                            "type": "function",
                            "description": "Specifies a SQL Server char field.",
                            "leftLabel": "int",
                            "rightLabel": "$charCount"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_NCHAR",
                            "type": "function",
                            "description": "Specifies a SQL Server nchar field.",
                            "leftLabel": "int",
                            "rightLabel": "$charCount"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_NVARCHAR",
                            "type": "function",
                            "description": "Specifies a SQL Server nvarchar field.",
                            "leftLabel": "int",
                            "rightLabel": "$charCount"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_DECIMAL",
                            "type": "function",
                            "description": "Specifies a SQL Server decimal field.",
                            "leftLabel": "int",
                            "rightLabel": "$precision $scale"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_NUMERIC",
                            "type": "function",
                            "description": "Specifies a SQL Server numeric field.",
                            "leftLabel": "int",
                            "rightLabel": "$precision $scale"
                        },
                        {
                            "text": "ssh2_connect",
                            "type": "function",
                            "description": "Start of ssh2 v.0.11.0-dev",
                            "rightLabel": "$host $port array $methods array $callbacks"
                        },
                        {
                            "text": "ssh2_methods_negotiated",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nReturn list of negotiated methods",
                            "leftLabel": "array",
                            "rightLabel": "$session"
                        },
                        {
                            "text": "ssh2_fingerprint",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nRetrieve fingerprint of remote server",
                            "leftLabel": "string",
                            "rightLabel": "$session $flags"
                        },
                        {
                            "text": "ssh2_auth_none",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nAuthenticate as \"none\"",
                            "leftLabel": "mixed",
                            "rightLabel": "$session $username"
                        },
                        {
                            "text": "ssh2_auth_password",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nAuthenticate over SSH using a plain password",
                            "leftLabel": "bool",
                            "rightLabel": "$session $username $password"
                        },
                        {
                            "text": "ssh2_auth_pubkey_file",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nAuthenticate using a public key",
                            "leftLabel": "bool",
                            "rightLabel": "$session $username $pubkeyfile $privkeyfile $passphrase"
                        },
                        {
                            "text": "ssh2_auth_hostbased_file",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nAuthenticate using a public hostkey",
                            "leftLabel": "bool",
                            "rightLabel": "$session $username $hostname $pubkeyfile $privkeyfile $passphrase $local_username"
                        },
                        {
                            "text": "ssh2_forward_listen",
                            "type": "function"
                        },
                        {
                            "text": "ssh2_forward_accept",
                            "type": "function"
                        },
                        {
                            "text": "ssh2_shell",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nRequest an interactive shell",
                            "leftLabel": "resource",
                            "rightLabel": "$session $term_type array $env $width $height $width_height_type"
                        },
                        {
                            "text": "ssh2_exec",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nExecute a command on a remote server",
                            "leftLabel": "resource",
                            "rightLabel": "$session $command $pty array $env $width $height $width_height_type"
                        },
                        {
                            "text": "ssh2_tunnel",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nOpen a tunnel through a remote server",
                            "leftLabel": "resource",
                            "rightLabel": "$session $host $port"
                        },
                        {
                            "text": "ssh2_scp_recv",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nRequest a file via SCP",
                            "leftLabel": "bool",
                            "rightLabel": "$session $remote_file $local_file"
                        },
                        {
                            "text": "ssh2_scp_send",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nSend a file via SCP",
                            "leftLabel": "bool",
                            "rightLabel": "$session $local_file $remote_file $create_mode"
                        },
                        {
                            "text": "ssh2_fetch_stream",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nFetch an extended data stream",
                            "leftLabel": "resource",
                            "rightLabel": "$channel $streamid"
                        },
                        {
                            "text": "ssh2_poll",
                            "type": "function",
                            "rightLabel": "$var1"
                        },
                        {
                            "text": "ssh2_sftp",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nInitialize SFTP subsystem",
                            "leftLabel": "resource",
                            "rightLabel": "$session"
                        },
                        {
                            "text": "ssh2_sftp_rename",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nRename a remote file",
                            "leftLabel": "bool",
                            "rightLabel": "$sftp $from $to"
                        },
                        {
                            "text": "ssh2_sftp_unlink",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nDelete a file",
                            "leftLabel": "bool",
                            "rightLabel": "$sftp $filename"
                        },
                        {
                            "text": "ssh2_sftp_mkdir",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nCreate a directory",
                            "leftLabel": "bool",
                            "rightLabel": "$sftp $dirname $mode $recursive"
                        },
                        {
                            "text": "ssh2_sftp_rmdir",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nRemove a directory",
                            "leftLabel": "bool",
                            "rightLabel": "$sftp $dirname"
                        },
                        {
                            "text": "ssh2_sftp_stat",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nStat a file on a remote filesystem",
                            "leftLabel": "array",
                            "rightLabel": "$sftp $path"
                        },
                        {
                            "text": "ssh2_sftp_lstat",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nStat a symbolic link",
                            "leftLabel": "array",
                            "rightLabel": "$sftp $path"
                        },
                        {
                            "text": "ssh2_sftp_symlink",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nCreate a symlink",
                            "leftLabel": "bool",
                            "rightLabel": "$sftp $target $link"
                        },
                        {
                            "text": "ssh2_sftp_readlink",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nReturn the target of a symbolic link",
                            "leftLabel": "string",
                            "rightLabel": "$sftp $link"
                        },
                        {
                            "text": "ssh2_sftp_realpath",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.9.0)\nResolve the realpath of a provided path string",
                            "leftLabel": "string",
                            "rightLabel": "$sftp $filename"
                        },
                        {
                            "text": "ssh2_publickey_init",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.10)\nInitialize Publickey subsystem",
                            "leftLabel": "resource",
                            "rightLabel": "$session"
                        },
                        {
                            "text": "ssh2_publickey_add",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.10)\nAdd an authorized publickey",
                            "leftLabel": "bool",
                            "rightLabel": "$pkey $algoname $blob $overwrite array $attributes"
                        },
                        {
                            "text": "ssh2_publickey_remove",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.10)\nRemove an authorized publickey",
                            "leftLabel": "bool",
                            "rightLabel": "$pkey $algoname $blob"
                        },
                        {
                            "text": "ssh2_publickey_list",
                            "type": "function",
                            "description": "(PECL ssh2 >= 0.10)\nList currently authorized publickeys",
                            "leftLabel": "array",
                            "rightLabel": "$pkey"
                        },
                        {
                            "text": "constant",
                            "type": "function",
                            "description": "Returns the value of a constant Since PHP 4.0.4 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "bin2hex",
                            "type": "function",
                            "description": "Convert binary data into hexadecimal representation Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "sleep",
                            "type": "function",
                            "description": "Delay execution Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$seconds"
                        },
                        {
                            "text": "usleep",
                            "type": "function",
                            "description": "Delay execution in microseconds Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$micro_seconds"
                        },
                        {
                            "text": "time_nanosleep",
                            "type": "function",
                            "description": "Delay for a number of seconds and nanoseconds Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$seconds $nanoseconds"
                        },
                        {
                            "text": "time_sleep_until",
                            "type": "function",
                            "description": "Make the script sleep until the specified time Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$timestamp"
                        },
                        {
                            "text": "strptime",
                            "type": "function",
                            "description": "Parse a time\/date generated with strftime Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "$date $format"
                        },
                        {
                            "text": "flush",
                            "type": "function",
                            "description": "Flush the output buffer Since PHP 4.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "wordwrap",
                            "type": "function",
                            "description": "Wraps a string to a given number of characters Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $width $break $cut"
                        },
                        {
                            "text": "htmlspecialchars",
                            "type": "function",
                            "description": "Convert special characters to HTML entities Since PHP 4.0 5.0\n\n<thead>\n<tr>\n<th>Constant Name<\/th>\n<th>Description<\/th>\n<\/tr>\n\n<\/thead>\n\n<tbody>\n<tr>\n<td><b>ENT_COMPAT<\/b><\/td>\n<td>Will convert double-quotes and leave single-quotes alone.<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_QUOTES<\/b><\/td>\n<td>Will convert both double and single quotes.<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_NOQUOTES<\/b><\/td>\n<td>Will leave both double and single quotes unconverted.<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_IGNORE<\/b><\/td>\n<td>\nSilently discard invalid code unit sequences instead of returning\nan empty string. Using this flag is discouraged as it\n{@link http:\/\/unicode.org\/reports\/tr36\/#Deletion_of_Noncharacters \u00bb&nbsp;may have security implications}.\n<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_SUBSTITUTE<\/b><\/td>\n<td>\nReplace invalid code unit sequences with a Unicode Replacement Character\nU+FFFD (UTF-8) or &amp;#FFFD; (otherwise) instead of returning an empty string.\n<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_DISALLOWED<\/b><\/td>\n<td>\nReplace invalid code points for the given document type with a\nUnicode Replacement Character U+FFFD (UTF-8) or &amp;#FFFD;\n(otherwise) instead of leaving them as is. This may be useful, for\ninstance, to ensure the well-formedness of XML documents with\nembedded external content.\n<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_HTML401<\/b><\/td>\n<td>\nHandle code as HTML 4.01.\n<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_XML1<\/b><\/td>\n<td>\nHandle code as XML 1.\n<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_XHTML<\/b><\/td>\n<td>\nHandle code as XHTML.\n<\/td>\n<\/tr>\n\n<tr>\n<td><b>ENT_HTML5<\/b><\/td>\n<td>\nHandle code as HTML 5.\n<\/td>\n<\/tr>\n\n<\/tbody>\n\n<\/table>",
                            "leftLabel": "string",
                            "rightLabel": "$string $flags $encoding $double_encode"
                        },
                        {
                            "text": "htmlentities",
                            "type": "function",
                            "description": "Convert all applicable characters to HTML entities Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string $quote_style $charset $double_encode"
                        },
                        {
                            "text": "html_entity_decode",
                            "type": "function",
                            "description": "Convert all HTML entities to their applicable characters Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string $quote_style $charset"
                        },
                        {
                            "text": "htmlspecialchars_decode",
                            "type": "function",
                            "description": "Convert special HTML entities back to characters Since PHP 5.1.0",
                            "leftLabel": "string",
                            "rightLabel": "$string $quote_style"
                        },
                        {
                            "text": "get_html_translation_table",
                            "type": "function",
                            "description": "Returns the translation table used by htmlspecialchars and htmlentities Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$table $quote_style"
                        },
                        {
                            "text": "sha1",
                            "type": "function",
                            "description": "Calculate the sha1 hash of a string Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $raw_output"
                        },
                        {
                            "text": "sha1_file",
                            "type": "function",
                            "description": "Calculate the sha1 hash of a file Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename $raw_output"
                        },
                        {
                            "text": "md5",
                            "type": "function",
                            "description": "Calculate the md5 hash of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $raw_output"
                        },
                        {
                            "text": "md5_file",
                            "type": "function",
                            "description": "Calculates the md5 hash of a given file Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename $raw_output"
                        },
                        {
                            "text": "crc32",
                            "type": "function",
                            "description": "Calculates the crc32 polynomial of a string Since PHP 4.0.1 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "iptcparse",
                            "type": "function",
                            "description": "Parse a binary IPTC block into single tags. Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$iptcblock"
                        },
                        {
                            "text": "iptcembed",
                            "type": "function",
                            "description": "Embeds binary IPTC data into a JPEG image Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$iptcdata $jpeg_file_name $spool"
                        },
                        {
                            "text": "getimagesize",
                            "type": "function",
                            "description": "Get the size of an image Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename array $imageinfo"
                        },
                        {
                            "text": "imageaffine",
                            "type": "function",
                            "description": "Return an image containing the affine tramsformed src image, using an optional clipping area",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$image $affine $clip"
                        },
                        {
                            "text": "imageaffinematrixconcat",
                            "type": "function",
                            "description": "Concat two matrices (as in doing many ops in one go) Since PHP 5.5.0",
                            "leftLabel": "array | bool",
                            "rightLabel": "array $m1 array $m2"
                        },
                        {
                            "text": "imageaffinematrixget",
                            "type": "function",
                            "description": "Return an image containing the affine tramsformed src image, using an optional clipping area Since PHP 5.5.0",
                            "leftLabel": "array | bool",
                            "rightLabel": "$type $options"
                        },
                        {
                            "text": "imagecrop",
                            "type": "function",
                            "description": "Crop an image using the given coordinates and size, x, y, width and height Since PHP 5.5.0",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$image $rect"
                        },
                        {
                            "text": "imagecropauto",
                            "type": "function",
                            "description": "Crop an image automatically using one of the available modes Since PHP 5.5.0",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$image $mode $threshold $color"
                        },
                        {
                            "text": "imageflip",
                            "type": "function",
                            "description": "Flips an image using a given mode Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $mode"
                        },
                        {
                            "text": "imagepalettetotruecolor",
                            "type": "function",
                            "description": "Converts a palette based image to true color Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image"
                        },
                        {
                            "text": "imagescale",
                            "type": "function",
                            "description": " Since PHP 5.5.0\nScale an image using the given new width and height",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$image $new_width $new_height $mode"
                        },
                        {
                            "text": "imagesetinterpolation",
                            "type": "function",
                            "description": "Set the interpolation method Since PHP 5.5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$image $method"
                        },
                        {
                            "text": "image_type_to_mime_type",
                            "type": "function",
                            "description": "Get Mime-Type for image-type returned by getimagesize, Since PHP 4.3.0 5.0\nexif_read_data, exif_thumbnail, exif_imagetype",
                            "leftLabel": "string",
                            "rightLabel": "$imagetype"
                        },
                        {
                            "text": "image_type_to_extension",
                            "type": "function",
                            "description": "Get file extension for image type Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$imagetype $include_dot"
                        },
                        {
                            "text": "phpinfo",
                            "type": "function",
                            "description": "Outputs lots of PHP information Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$what"
                        },
                        {
                            "text": "phpversion",
                            "type": "function",
                            "description": "Gets the current PHP version Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$extension"
                        },
                        {
                            "text": "phpcredits",
                            "type": "function",
                            "description": "Prints out the credits for PHP Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$flag"
                        },
                        {
                            "text": "php_logo_guid",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "php_real_logo_guid",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0"
                        },
                        {
                            "text": "php_egg_logo_guid",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0"
                        },
                        {
                            "text": "zend_logo_guid",
                            "type": "function",
                            "description": " Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "php_sapi_name",
                            "type": "function",
                            "description": "Returns the type of interface between web server and PHP Since PHP 4.0.1 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "php_uname",
                            "type": "function",
                            "description": "Returns information about the operating system PHP is running on Since PHP 4.0.2 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$mode"
                        },
                        {
                            "text": "php_ini_scanned_files",
                            "type": "function",
                            "description": "Return a list of .ini files parsed from the additional ini dir Since PHP 4.3.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "php_ini_loaded_file",
                            "type": "function",
                            "description": "Retrieve a path to the loaded php.ini file Since PHP 5.2.4",
                            "leftLabel": "string"
                        },
                        {
                            "text": "strnatcmp",
                            "type": "function",
                            "description": "String comparisons using a \"natural order\" algorithm Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2"
                        },
                        {
                            "text": "strnatcasecmp",
                            "type": "function",
                            "description": "Case insensitive string comparisons using a \"natural order\" algorithm Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2"
                        },
                        {
                            "text": "substr_count",
                            "type": "function",
                            "description": "Count the number of substring occurrences Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset $length"
                        },
                        {
                            "text": "strspn",
                            "type": "function",
                            "description": "Finds the length of the first segment of a string consisting Since PHP 4.0 5.0\nentirely of characters contained within a given mask.",
                            "leftLabel": "int",
                            "rightLabel": "$subject $mask $start $length"
                        },
                        {
                            "text": "strcspn",
                            "type": "function",
                            "description": "Find length of initial segment not matching mask Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2 $start $length"
                        },
                        {
                            "text": "strtok",
                            "type": "function",
                            "description": "Tokenize string\nNote that only the first call to strtok uses the string argument. Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $token"
                        },
                        {
                            "text": "strtoupper",
                            "type": "function",
                            "description": "Make a string uppercase Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "strtolower",
                            "type": "function",
                            "description": "Make a string lowercase Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "strpos",
                            "type": "function",
                            "description": "Find the position of the first occurrence of a substring in a string Since PHP 4.0 5.0",
                            "leftLabel": "int | boolean",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "stripos",
                            "type": "function",
                            "description": "Find position of first occurrence of a case-insensitive string Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "strrpos",
                            "type": "function",
                            "description": "Find the position of the last occurrence of a substring in a string Since PHP 4.0 5.0",
                            "leftLabel": "int | boolean",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "strripos",
                            "type": "function",
                            "description": "Find position of last occurrence of a case-insensitive string in a string Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$haystack $needle $offset"
                        },
                        {
                            "text": "strrev",
                            "type": "function",
                            "description": "Reverse a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "hebrev",
                            "type": "function",
                            "description": "Convert logical Hebrew text to visual text Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hebrew_text $max_chars_per_line"
                        },
                        {
                            "text": "hebrevc",
                            "type": "function",
                            "description": "Convert logical Hebrew text to visual text with newline conversion Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hebrew_text $max_chars_per_line"
                        },
                        {
                            "text": "nl2br",
                            "type": "function",
                            "description": "Inserts HTML line breaks before all newlines in a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string $is_xhtml"
                        },
                        {
                            "text": "basename",
                            "type": "function",
                            "description": "Returns filename component of path Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$path $suffix"
                        },
                        {
                            "text": "dirname",
                            "type": "function",
                            "description": "Returns directory name component of path Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$path $levels"
                        },
                        {
                            "text": "pathinfo",
                            "type": "function",
                            "description": "Returns information about a file path Since PHP 4.0.3 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$path $options"
                        },
                        {
                            "text": "stripslashes",
                            "type": "function",
                            "description": "Un-quotes a quoted string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "stripcslashes",
                            "type": "function",
                            "description": "Un-quote string quoted with addcslashes Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "strstr",
                            "type": "function",
                            "description": "Find first occurrence of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $before_needle"
                        },
                        {
                            "text": "stristr",
                            "type": "function",
                            "description": "Case-insensitive strstr Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $before_needle"
                        },
                        {
                            "text": "strrchr",
                            "type": "function",
                            "description": "Find the last occurrence of a character in a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle"
                        },
                        {
                            "text": "str_shuffle",
                            "type": "function",
                            "description": "Randomly shuffles a string Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "str_word_count",
                            "type": "function",
                            "description": "Return information about words used in a string Since PHP 4.3.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$string $format $charlist"
                        },
                        {
                            "text": "str_split",
                            "type": "function",
                            "description": "Convert a string to an array Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$string $split_length"
                        },
                        {
                            "text": "strpbrk",
                            "type": "function",
                            "description": "Search a string for any of a set of characters Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $char_list"
                        },
                        {
                            "text": "substr_compare",
                            "type": "function",
                            "description": "Binary safe comparison of 2 strings from an offset, up to length characters Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$main_str $str $offset $length $case_insensitivity"
                        },
                        {
                            "text": "strcoll",
                            "type": "function",
                            "description": "Locale based string comparison Since PHP 4.0.5 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2"
                        },
                        {
                            "text": "money_format",
                            "type": "function",
                            "description": "Formats a number as a currency string Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$format $number"
                        },
                        {
                            "text": "substr",
                            "type": "function",
                            "description": "Return part of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$string $start $length"
                        },
                        {
                            "text": "substr_replace",
                            "type": "function",
                            "description": "Replace text within a portion of a string Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$string $replacement $start $length"
                        },
                        {
                            "text": "quotemeta",
                            "type": "function",
                            "description": "Quote meta characters Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "ucfirst",
                            "type": "function",
                            "description": "Make a string's first character uppercase Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "lcfirst",
                            "type": "function",
                            "description": "Make a string's first character lowercase Since PHP 5.3.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "ucwords",
                            "type": "function",
                            "description": "Uppercase the first character of each word in a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $delimiters"
                        },
                        {
                            "text": "strtr",
                            "type": "function",
                            "description": "Translate certain characters Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $from $to"
                        },
                        {
                            "text": "addslashes",
                            "type": "function",
                            "description": "Quote string with slashes Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "addcslashes",
                            "type": "function",
                            "description": "Quote string with slashes in a C style Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $charlist"
                        },
                        {
                            "text": "rtrim",
                            "type": "function",
                            "description": "Strip whitespace (or other characters) from the end of a string. Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $charlist"
                        },
                        {
                            "text": "str_replace",
                            "type": "function",
                            "description": "Replace all occurrences of the search string with the replacement string Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$search $replace $subject $count"
                        },
                        {
                            "text": "str_ireplace",
                            "type": "function",
                            "description": "Case-insensitive version of str_replace. Since PHP 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$search $replace $subject $count"
                        },
                        {
                            "text": "str_repeat",
                            "type": "function",
                            "description": "Repeat a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$input $multiplier"
                        },
                        {
                            "text": "count_chars",
                            "type": "function",
                            "description": "Return information about characters used in a string Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$string $mode"
                        },
                        {
                            "text": "chunk_split",
                            "type": "function",
                            "description": "Split a string into smaller chunks Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$body $chunklen $end"
                        },
                        {
                            "text": "trim",
                            "type": "function",
                            "description": "Strip whitespace (or other characters) from the beginning and end of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $charlist"
                        },
                        {
                            "text": "ltrim",
                            "type": "function",
                            "description": "Strip whitespace (or other characters) from the beginning of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $charlist"
                        },
                        {
                            "text": "strip_tags",
                            "type": "function",
                            "description": "Strip HTML and PHP tags from a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $allowable_tags"
                        },
                        {
                            "text": "similar_text",
                            "type": "function",
                            "description": "Calculate the similarity between two strings Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$first $second $percent"
                        },
                        {
                            "text": "explode",
                            "type": "function",
                            "description": "Split a string by string Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$delimiter $string $limit"
                        },
                        {
                            "text": "implode",
                            "type": "function",
                            "description": "Join array elements with a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$glue array $pieces"
                        },
                        {
                            "text": "join",
                            "type": "function",
                            "description": "&Alias; implode Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$glue $pieces"
                        },
                        {
                            "text": "setlocale",
                            "type": "function",
                            "description": "Set locale information Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$category $locale $_"
                        },
                        {
                            "text": "localeconv",
                            "type": "function",
                            "description": "Get numeric formatting information Since PHP 4.0.5 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "nl_langinfo",
                            "type": "function",
                            "description": "Query language and locale information Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$item"
                        },
                        {
                            "text": "soundex",
                            "type": "function",
                            "description": "Calculate the soundex key of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "levenshtein",
                            "type": "function",
                            "description": "Calculate Levenshtein distance between two strings Since PHP 4.0.1 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$str1 $str2 $cost_ins $cost_rep $cost_del"
                        },
                        {
                            "text": "chr",
                            "type": "function",
                            "description": "Return a specific character Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ascii"
                        },
                        {
                            "text": "ord",
                            "type": "function",
                            "description": "Return ASCII value of character Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$string"
                        },
                        {
                            "text": "parse_str",
                            "type": "function",
                            "description": "Parses the string into variables Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$str array $arr"
                        },
                        {
                            "text": "str_getcsv",
                            "type": "function",
                            "description": "Parse a CSV string into an array Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$input $delimiter $enclosure $escape"
                        },
                        {
                            "text": "str_pad",
                            "type": "function",
                            "description": "Pad a string to a certain length with another string Since PHP 4.0.1 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$input $pad_length $pad_string $pad_type"
                        },
                        {
                            "text": "chop",
                            "type": "function",
                            "description": "&Alias; rtrim Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $character_mask"
                        },
                        {
                            "text": "strchr",
                            "type": "function",
                            "description": "&Alias; strstr Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$haystack $needle $part"
                        },
                        {
                            "text": "sprintf",
                            "type": "function",
                            "description": "Return a formatted string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$format $args $_"
                        },
                        {
                            "text": "printf",
                            "type": "function",
                            "description": "Output a formatted string Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$format $args $_"
                        },
                        {
                            "text": "vprintf",
                            "type": "function",
                            "description": "Output a formatted string Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$format array $args"
                        },
                        {
                            "text": "vsprintf",
                            "type": "function",
                            "description": "Return a formatted string Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$format array $args"
                        },
                        {
                            "text": "fprintf",
                            "type": "function",
                            "description": "Write a formatted string to a stream Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle $format $args $_"
                        },
                        {
                            "text": "vfprintf",
                            "type": "function",
                            "description": "Write a formatted string to a stream Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle $format array $args"
                        },
                        {
                            "text": "sscanf",
                            "type": "function",
                            "description": "Parses input from a string according to a format Since PHP 4.0.1 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$str $format $_"
                        },
                        {
                            "text": "fscanf",
                            "type": "function",
                            "description": "Parses input from a file according to a format Since PHP 4.0.1 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$handle $format $_"
                        },
                        {
                            "text": "parse_url",
                            "type": "function",
                            "description": "Parse a URL and return its components Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$url $component"
                        },
                        {
                            "text": "urlencode",
                            "type": "function",
                            "description": "URL-encodes string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "urldecode",
                            "type": "function",
                            "description": "Decodes URL-encoded string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "rawurlencode",
                            "type": "function",
                            "description": "URL-encode according to RFC 1738 Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "rawurldecode",
                            "type": "function",
                            "description": "Decode URL-encoded strings Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "http_build_query",
                            "type": "function",
                            "description": "Generate URL-encoded query string Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$query_data $numeric_prefix $arg_separator $enc_type"
                        },
                        {
                            "text": "readlink",
                            "type": "function",
                            "description": "Returns the target of a symbolic link Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "linkinfo",
                            "type": "function",
                            "description": "Gets information about a link Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "symlink",
                            "type": "function",
                            "description": "Creates a symbolic link Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$target $link"
                        },
                        {
                            "text": "link",
                            "type": "function",
                            "description": "Create a hard link Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "string $target string $link"
                        },
                        {
                            "text": "unlink",
                            "type": "function",
                            "description": "Deletes a file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $context"
                        },
                        {
                            "text": "exec",
                            "type": "function",
                            "description": "Execute an external program Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$command array $output $return_var"
                        },
                        {
                            "text": "system",
                            "type": "function",
                            "description": "Execute an external program and display the output Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$command $return_var"
                        },
                        {
                            "text": "escapeshellcmd",
                            "type": "function",
                            "description": "Escape shell metacharacters Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$command"
                        },
                        {
                            "text": "escapeshellarg",
                            "type": "function",
                            "description": "Escape a string to be used as a shell argument Since PHP 4.0.3 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "passthru",
                            "type": "function",
                            "description": "Execute an external program and display raw output Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$command $return_var"
                        },
                        {
                            "text": "shell_exec",
                            "type": "function",
                            "description": "Execute command via shell and return the complete output as a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$cmd"
                        },
                        {
                            "text": "proc_open",
                            "type": "function",
                            "description": "Execute a command and open file pointers for input\/output Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$cmd array $descriptorspec array $pipes $cwd array $env array $other_options"
                        },
                        {
                            "text": "proc_close",
                            "type": "function",
                            "description": "Close a process opened by proc_open and return the exit code of that process Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$process"
                        },
                        {
                            "text": "proc_terminate",
                            "type": "function",
                            "description": "Kills a process opened by proc_open Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$process $signal"
                        },
                        {
                            "text": "proc_get_status",
                            "type": "function",
                            "description": "Get information about a process opened by proc_open Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$process"
                        },
                        {
                            "text": "proc_nice",
                            "type": "function",
                            "description": "Change the priority of the current process Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$increment"
                        },
                        {
                            "text": "rand",
                            "type": "function",
                            "description": "Generate a random integer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$min $max"
                        },
                        {
                            "text": "srand",
                            "type": "function",
                            "description": "Seed the random number generator Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$seed"
                        },
                        {
                            "text": "getrandmax",
                            "type": "function",
                            "description": "Show largest possible random value Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "mt_rand",
                            "type": "function",
                            "description": "Generate a better random value Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$min $max"
                        },
                        {
                            "text": "mt_srand",
                            "type": "function",
                            "description": "Seed the better random number generator Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$seed"
                        },
                        {
                            "text": "mt_getrandmax",
                            "type": "function",
                            "description": "Show largest possible random value Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "getservbyname",
                            "type": "function",
                            "description": "Get port number associated with an Internet service and protocol Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$service $protocol"
                        },
                        {
                            "text": "getservbyport",
                            "type": "function",
                            "description": "Get Internet service which corresponds to port and protocol Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$port $protocol"
                        },
                        {
                            "text": "getprotobyname",
                            "type": "function",
                            "description": "Get protocol number associated with protocol name Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "getprotobynumber",
                            "type": "function",
                            "description": "Get protocol name associated with protocol number Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "getmyuid",
                            "type": "function",
                            "description": "Gets PHP script owner's UID Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "getmygid",
                            "type": "function",
                            "description": "Get PHP script owner's GID Since PHP 4.1.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "getmypid",
                            "type": "function",
                            "description": "Gets PHP's process ID Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "getmyinode",
                            "type": "function",
                            "description": "Gets the inode of the current script Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "getlastmod",
                            "type": "function",
                            "description": "Gets time of last page modification Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "base64_decode",
                            "type": "function",
                            "description": "Decodes data encoded with MIME base64 Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $strict"
                        },
                        {
                            "text": "base64_encode",
                            "type": "function",
                            "description": "Encodes data with MIME base64 Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "convert_uuencode",
                            "type": "function",
                            "description": "Uuencode a string Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "convert_uudecode",
                            "type": "function",
                            "description": "Decode a uuencoded string Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "abs",
                            "type": "function",
                            "description": "Absolute value Since PHP 4.0 5.0",
                            "leftLabel": "number",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "ceil",
                            "type": "function",
                            "description": "Round fractions up Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$value"
                        },
                        {
                            "text": "floor",
                            "type": "function",
                            "description": "Round fractions down Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$value"
                        },
                        {
                            "text": "round",
                            "type": "function",
                            "description": "Returns the rounded value of val to specified precision (number of digits after the decimal point). Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$val $precision $mode"
                        },
                        {
                            "text": "sin",
                            "type": "function",
                            "description": "Sine Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "cos",
                            "type": "function",
                            "description": "Cosine Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "tan",
                            "type": "function",
                            "description": "Tangent Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "asin",
                            "type": "function",
                            "description": "Arc sine Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "acos",
                            "type": "function",
                            "description": "Arc cosine Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "atan",
                            "type": "function",
                            "description": "Arc tangent Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "atanh",
                            "type": "function",
                            "description": "Inverse hyperbolic tangent Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "atan2",
                            "type": "function",
                            "description": "Arc tangent of two variables Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$y $x"
                        },
                        {
                            "text": "sinh",
                            "type": "function",
                            "description": "Hyperbolic sine Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "cosh",
                            "type": "function",
                            "description": "Hyperbolic cosine Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "tanh",
                            "type": "function",
                            "description": "Hyperbolic tangent Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "asinh",
                            "type": "function",
                            "description": "Inverse hyperbolic sine Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "acosh",
                            "type": "function",
                            "description": "Inverse hyperbolic cosine Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "expm1",
                            "type": "function",
                            "description": "Returns exp(number) - 1, computed in a way that is accurate even Since PHP 4.1.0 5.0\nwhen the value of number is close to zero",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "log1p",
                            "type": "function",
                            "description": "Returns log(1 + number), computed in a way that is accurate even when Since PHP 4.1.0 5.0\nthe value of number is close to zero",
                            "leftLabel": "float",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "pi",
                            "type": "function",
                            "description": "Get value of pi Since PHP 4.0 5.0",
                            "leftLabel": "float"
                        },
                        {
                            "text": "is_finite",
                            "type": "function",
                            "description": "Finds whether a value is a legal finite number Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$val"
                        },
                        {
                            "text": "is_nan",
                            "type": "function",
                            "description": "Finds whether a value is not a number Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$val"
                        },
                        {
                            "text": "intdiv",
                            "type": "function",
                            "description": "Integer division Since PHP 7.0",
                            "leftLabel": "int",
                            "rightLabel": "$dividend $divisor"
                        },
                        {
                            "text": "is_infinite",
                            "type": "function",
                            "description": "Finds whether a value is infinite Since PHP 4.2.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$val"
                        },
                        {
                            "text": "pow",
                            "type": "function",
                            "description": "Exponential expression Since PHP 4.0 5.0",
                            "leftLabel": "number",
                            "rightLabel": "$base $exp"
                        },
                        {
                            "text": "exp",
                            "type": "function",
                            "description": "Calculates the exponent of e Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "log",
                            "type": "function",
                            "description": "Natural logarithm Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg $base"
                        },
                        {
                            "text": "log10",
                            "type": "function",
                            "description": "Base-10 logarithm Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "sqrt",
                            "type": "function",
                            "description": "Square root Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "hypot",
                            "type": "function",
                            "description": "Calculate the length of the hypotenuse of a right-angle triangle Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$x $y"
                        },
                        {
                            "text": "deg2rad",
                            "type": "function",
                            "description": "Converts the number in degrees to the radian equivalent Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "rad2deg",
                            "type": "function",
                            "description": "Converts the radian number to the equivalent number in degrees Since PHP 4.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "bindec",
                            "type": "function",
                            "description": "Binary to decimal Since PHP 4.0 5.0",
                            "leftLabel": "number",
                            "rightLabel": "$binary_string"
                        },
                        {
                            "text": "hexdec",
                            "type": "function",
                            "description": "Hexadecimal to decimal Since PHP 4.0 5.0",
                            "leftLabel": "number",
                            "rightLabel": "$hex_string"
                        },
                        {
                            "text": "octdec",
                            "type": "function",
                            "description": "Octal to decimal Since PHP 4.0 5.0",
                            "leftLabel": "number",
                            "rightLabel": "$octal_string"
                        },
                        {
                            "text": "decbin",
                            "type": "function",
                            "description": "Decimal to binary Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "decoct",
                            "type": "function",
                            "description": "Decimal to octal Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "dechex",
                            "type": "function",
                            "description": "Decimal to hexadecimal Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$number"
                        },
                        {
                            "text": "base_convert",
                            "type": "function",
                            "description": "Convert a number between arbitrary bases Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$number $frombase $tobase"
                        },
                        {
                            "text": "number_format",
                            "type": "function",
                            "description": "Format a number with grouped thousands Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$number $decimals $dec_point $thousands_sep"
                        },
                        {
                            "text": "fmod",
                            "type": "function",
                            "description": "Returns the floating point remainder (modulo) of the division Since PHP 4.2.0 5.0\nof the arguments",
                            "leftLabel": "float",
                            "rightLabel": "$x $y"
                        },
                        {
                            "text": "inet_ntop",
                            "type": "function",
                            "description": "Converts a packed internet address to a human readable representation Since PHP 5.1.0",
                            "leftLabel": "string",
                            "rightLabel": "$in_addr"
                        },
                        {
                            "text": "inet_pton",
                            "type": "function",
                            "description": "Converts a human readable IP address to its packed in_addr representation Since PHP 5.1.0",
                            "leftLabel": "string",
                            "rightLabel": "$address"
                        },
                        {
                            "text": "ip2long",
                            "type": "function",
                            "description": "Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$ip_address"
                        },
                        {
                            "text": "long2ip",
                            "type": "function",
                            "description": "Converts an (IPv4) Internet network address into a string in Internet standard dotted format Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$proper_address"
                        },
                        {
                            "text": "getenv",
                            "type": "function",
                            "description": "Gets the value of an environment variable Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$varname"
                        },
                        {
                            "text": "putenv",
                            "type": "function",
                            "description": "Sets the value of an environment variable Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$setting"
                        },
                        {
                            "text": "getopt",
                            "type": "function",
                            "description": "Gets options from the command line argument list Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$options array $longopts"
                        },
                        {
                            "text": "sys_getloadavg",
                            "type": "function",
                            "description": "Gets system load average Since PHP 5.1.3",
                            "leftLabel": "array"
                        },
                        {
                            "text": "microtime",
                            "type": "function",
                            "description": "Return current Unix timestamp with microseconds Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$get_as_float"
                        },
                        {
                            "text": "gettimeofday",
                            "type": "function",
                            "description": "Get current time Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$return_float"
                        },
                        {
                            "text": "getrusage",
                            "type": "function",
                            "description": "Gets the current resource usages Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$who"
                        },
                        {
                            "text": "uniqid",
                            "type": "function",
                            "description": "Generate a unique ID Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$prefix $more_entropy"
                        },
                        {
                            "text": "quoted_printable_decode",
                            "type": "function",
                            "description": "Convert a quoted-printable string to an 8 bit string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "quoted_printable_encode",
                            "type": "function",
                            "description": "Convert a 8 bit string to a quoted-printable string Since PHP 5.3.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "convert_cyr_string",
                            "type": "function",
                            "description": "Convert from one Cyrillic character set to another Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $from $to"
                        },
                        {
                            "text": "get_current_user",
                            "type": "function",
                            "description": "Gets the name of the owner of the current PHP script Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "set_time_limit",
                            "type": "function",
                            "description": "Limits the maximum execution time Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$seconds"
                        },
                        {
                            "text": "get_cfg_var",
                            "type": "function",
                            "description": "Gets the value of a PHP configuration option Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$option"
                        },
                        {
                            "text": "magic_quotes_runtime",
                            "type": "function",
                            "description": "&Alias; set_magic_quotes_runtime Since PHP 4.0 5.0",
                            "rightLabel": "$new_setting"
                        },
                        {
                            "text": "set_magic_quotes_runtime",
                            "type": "function",
                            "description": "Sets the current active configuration setting of magic_quotes_runtime Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$new_setting"
                        },
                        {
                            "text": "get_magic_quotes_gpc",
                            "type": "function",
                            "description": "Gets the current configuration setting of magic quotes gpc Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "get_magic_quotes_runtime",
                            "type": "function",
                            "description": "Gets the current active configuration setting of magic_quotes_runtime Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "import_request_variables",
                            "type": "function",
                            "description": "Import GET\/POST\/Cookie variables into the global scope Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$types $prefix"
                        },
                        {
                            "text": "error_log",
                            "type": "function",
                            "description": "Send an error message somewhere Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$message $message_type $destination $extra_headers"
                        },
                        {
                            "text": "error_get_last",
                            "type": "function",
                            "description": "Get the last occurred error Since PHP 5.2.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "call_user_func",
                            "type": "function",
                            "description": "Call a user function given by the first parameter Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$function $parameter $_"
                        },
                        {
                            "text": "call_user_func_array",
                            "type": "function",
                            "description": "Call a user function given with an array of parameters Since PHP 4.0.4 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$function array $param_arr"
                        },
                        {
                            "text": "call_user_method",
                            "type": "function",
                            "description": "Call a user method on an specific object Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$method_name $obj $parameter $_"
                        },
                        {
                            "text": "call_user_method_array",
                            "type": "function",
                            "description": "Call a user method given with an array of parameters Since PHP 4.0.5 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$method_name $obj array $params"
                        },
                        {
                            "text": "forward_static_call",
                            "type": "function",
                            "description": "Call a static method Since PHP 5.3.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$function $parameter $_"
                        },
                        {
                            "text": "forward_static_call_array",
                            "type": "function",
                            "description": "Call a static method and pass the arguments as array Since PHP 5.3.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$function array $parameters"
                        },
                        {
                            "text": "serialize",
                            "type": "function",
                            "description": "Generates a storable representation of a value Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$value"
                        },
                        {
                            "text": "unserialize",
                            "type": "function",
                            "description": "Creates a PHP value from a stored representation Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "var_dump",
                            "type": "function",
                            "description": "Dumps information about a variable Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$expression $_"
                        },
                        {
                            "text": "var_export",
                            "type": "function",
                            "description": "Outputs or returns a parsable string representation of a variable Since PHP 4.2.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$expression $return"
                        },
                        {
                            "text": "debug_zval_dump",
                            "type": "function",
                            "description": "Dumps a string representation of an internal zend value to output Since PHP 4.2.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$variable"
                        },
                        {
                            "text": "print_r",
                            "type": "function",
                            "description": "Prints human-readable information about a variable Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$expression $return"
                        },
                        {
                            "text": "memory_get_usage",
                            "type": "function",
                            "description": "Returns the amount of memory allocated to PHP Since PHP 4.3.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$real_usage"
                        },
                        {
                            "text": "memory_get_peak_usage",
                            "type": "function",
                            "description": "Returns the peak of memory allocated by PHP Since PHP 5.2.0",
                            "leftLabel": "int",
                            "rightLabel": "$real_usage"
                        },
                        {
                            "text": "register_shutdown_function",
                            "type": "function",
                            "description": "Register a function for execution on shutdown Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$function $parameter $_"
                        },
                        {
                            "text": "register_tick_function",
                            "type": "function",
                            "description": "Register a function for execution on each tick Since PHP 4.0.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$function $arg $_"
                        },
                        {
                            "text": "unregister_tick_function",
                            "type": "function",
                            "description": "De-register a function for execution on each tick Since PHP 4.0.3 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$function_name"
                        },
                        {
                            "text": "highlight_file",
                            "type": "function",
                            "description": "Syntax highlighting of a file Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$filename $return"
                        },
                        {
                            "text": "show_source",
                            "type": "function",
                            "description": "&Alias; highlight_file Since PHP 4.0 5.0",
                            "rightLabel": "$file_name $return"
                        },
                        {
                            "text": "highlight_string",
                            "type": "function",
                            "description": "Syntax highlighting of a string Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$str $return"
                        },
                        {
                            "text": "php_strip_whitespace",
                            "type": "function",
                            "description": "Return source with stripped comments and whitespace Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "ini_get",
                            "type": "function",
                            "description": "Gets the value of a configuration option Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$varname"
                        },
                        {
                            "text": "ini_get_all",
                            "type": "function",
                            "description": "Gets all configuration options Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$extension $details"
                        },
                        {
                            "text": "ini_set",
                            "type": "function",
                            "description": "Sets the value of a configuration option Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$varname $newvalue"
                        },
                        {
                            "text": "ini_alter",
                            "type": "function",
                            "description": "&Alias; ini_set Since PHP 4.0 5.0",
                            "rightLabel": "$varname $newvalue"
                        },
                        {
                            "text": "ini_restore",
                            "type": "function",
                            "description": "Restores the value of a configuration option Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$varname"
                        },
                        {
                            "text": "get_include_path",
                            "type": "function",
                            "description": "Gets the current include_path configuration option Since PHP 4.3.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "set_include_path",
                            "type": "function",
                            "description": "Sets the include_path configuration option Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$new_include_path"
                        },
                        {
                            "text": "restore_include_path",
                            "type": "function",
                            "description": "Restores the value of the include_path configuration option Since PHP 4.3.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "setcookie",
                            "type": "function",
                            "description": "Send a cookie Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $value $expire $path $domain $secure $httponly"
                        },
                        {
                            "text": "setrawcookie",
                            "type": "function",
                            "description": "Send a cookie without urlencoding the cookie value Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $value $expire $path $domain $secure $httponly"
                        },
                        {
                            "text": "header",
                            "type": "function",
                            "description": "Send a raw HTTP header Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$string $replace $http_response_code"
                        },
                        {
                            "text": "header_remove",
                            "type": "function",
                            "description": "Remove previously set headers Since PHP 5.3.0",
                            "leftLabel": "void",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "headers_sent",
                            "type": "function",
                            "description": "Checks if or where headers have been sent Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$file $line"
                        },
                        {
                            "text": "headers_list",
                            "type": "function",
                            "description": "Returns a list of response headers sent (or ready to send) Since PHP 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "connection_aborted",
                            "type": "function",
                            "description": "Check whether client disconnected Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "connection_status",
                            "type": "function",
                            "description": "Returns connection status bitfield Since PHP 4.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ignore_user_abort",
                            "type": "function",
                            "description": "Set whether a client disconnect should abort script execution Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$value"
                        },
                        {
                            "text": "parse_ini_file",
                            "type": "function",
                            "description": "Parse a configuration file Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename $process_sections $scanner_mode"
                        },
                        {
                            "text": "parse_ini_string",
                            "type": "function",
                            "description": "Parse a configuration string Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$ini $process_sections $scanner_mode"
                        },
                        {
                            "text": "is_uploaded_file",
                            "type": "function",
                            "description": "Tells whether the file was uploaded via HTTP POST Since PHP 4.0.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "move_uploaded_file",
                            "type": "function",
                            "description": "Moves an uploaded file to a new location Since PHP 4.0.3 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $destination"
                        },
                        {
                            "text": "gethostbyaddr",
                            "type": "function",
                            "description": "Get the Internet host name corresponding to a given IP address Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$ip_address"
                        },
                        {
                            "text": "gethostbyname",
                            "type": "function",
                            "description": "Get the IPv4 address corresponding to a given Internet host name Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "gethostbynamel",
                            "type": "function",
                            "description": "Get a list of IPv4 addresses corresponding to a given Internet host Since PHP 4.0 5.0\nname",
                            "leftLabel": "array",
                            "rightLabel": "$hostname"
                        },
                        {
                            "text": "gethostname",
                            "type": "function",
                            "description": "Gets the host name Since PHP 5.3.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "dns_check_record",
                            "type": "function",
                            "description": "&Alias; checkdnsrr Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$host $type"
                        },
                        {
                            "text": "checkdnsrr",
                            "type": "function",
                            "description": "Check DNS records corresponding to a given Internet host name or IP address Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$host $type"
                        },
                        {
                            "text": "dns_get_mx",
                            "type": "function",
                            "description": "&Alias; getmxrr Since PHP 5.0",
                            "rightLabel": "$hostname $mxhosts $weight"
                        },
                        {
                            "text": "getmxrr",
                            "type": "function",
                            "description": "Get MX records corresponding to a given Internet host name Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$hostname array $mxhosts array $weight"
                        },
                        {
                            "text": "dns_get_record",
                            "type": "function",
                            "description": "Fetch DNS Resource Records associated with a hostname Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$hostname $type array $authns array $addtl"
                        },
                        {
                            "text": "boolval",
                            "type": "function",
                            "description": "(PHP 5.5.0)\nGet the boolean value of a variable Since PHP 5.5.0",
                            "leftLabel": "boolean",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "intval",
                            "type": "function",
                            "description": "Get the integer value of a variable Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$var $base"
                        },
                        {
                            "text": "floatval",
                            "type": "function",
                            "description": "Get float value of a variable Since PHP 4.2.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "doubleval",
                            "type": "function",
                            "description": "(PHP 4.2.0, PHP 5)\ndoubleval \ufffd Alias of floatval()\nGet float value of a variable\n&Alias; floatval",
                            "leftLabel": "float",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "strval",
                            "type": "function",
                            "description": "Get string value of a variable Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "gettype",
                            "type": "function",
                            "description": "Get the type of a variable Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "settype",
                            "type": "function",
                            "description": "Set the type of a variable Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var $type"
                        },
                        {
                            "text": "is_null",
                            "type": "function",
                            "description": "Finds whether a variable is &null; Since PHP 4.0.4 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_resource",
                            "type": "function",
                            "description": "Finds whether a variable is a resource Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_bool",
                            "type": "function",
                            "description": "Finds out whether a variable is a boolean Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_long",
                            "type": "function",
                            "description": "&Alias; is_int Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_float",
                            "type": "function",
                            "description": "Finds whether the type of a variable is float Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_int",
                            "type": "function",
                            "description": "Find whether the type of a variable is integer Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_integer",
                            "type": "function",
                            "description": "&Alias; is_int Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_double",
                            "type": "function",
                            "description": "&Alias; is_float Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_real",
                            "type": "function",
                            "description": "&Alias; is_float Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_numeric",
                            "type": "function",
                            "description": "Finds whether a variable is a number or a numeric string Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_string",
                            "type": "function",
                            "description": "Find whether the type of a variable is string Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_array",
                            "type": "function",
                            "description": "Finds whether a variable is an array Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_object",
                            "type": "function",
                            "description": "Finds whether a variable is an object Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_scalar",
                            "type": "function",
                            "description": "Finds whether a variable is a scalar Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$var"
                        },
                        {
                            "text": "is_callable",
                            "type": "function",
                            "description": "Verify that the contents of a variable can be called as a function Since PHP 4.0.6 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $syntax_only $callable_name"
                        },
                        {
                            "text": "pclose",
                            "type": "function",
                            "description": "Closes process file pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "popen",
                            "type": "function",
                            "description": "Opens process file pointer Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$command $mode"
                        },
                        {
                            "text": "readfile",
                            "type": "function",
                            "description": "Outputs a file Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename $use_include_path $context"
                        },
                        {
                            "text": "rewind",
                            "type": "function",
                            "description": "Rewind the position of a file pointer Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "rmdir",
                            "type": "function",
                            "description": "Removes directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$dirname $context"
                        },
                        {
                            "text": "umask",
                            "type": "function",
                            "description": "Changes the current umask Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$mask"
                        },
                        {
                            "text": "fclose",
                            "type": "function",
                            "description": "Closes an open file pointer Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "feof",
                            "type": "function",
                            "description": "Tests for end-of-file on a file pointer Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "fgetc",
                            "type": "function",
                            "description": "Gets character from file pointer Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "fgets",
                            "type": "function",
                            "description": "Gets line from file pointer Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle $length"
                        },
                        {
                            "text": "fgetss",
                            "type": "function",
                            "description": "Gets line from file pointer and strip HTML tags Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle $length $allowable_tags"
                        },
                        {
                            "text": "fread",
                            "type": "function",
                            "description": "Binary-safe file read Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle $length"
                        },
                        {
                            "text": "fopen",
                            "type": "function",
                            "description": "Opens file or URL Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename $mode $use_include_path $context"
                        },
                        {
                            "text": "fpassthru",
                            "type": "function",
                            "description": "Output all remaining data on a file pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "ftruncate",
                            "type": "function",
                            "description": "Truncates a file to a given length Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle $size"
                        },
                        {
                            "text": "fstat",
                            "type": "function",
                            "description": "Gets information about a file using an open file pointer Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "fseek",
                            "type": "function",
                            "description": "Seeks on a file pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle $offset $whence"
                        },
                        {
                            "text": "ftell",
                            "type": "function",
                            "description": "Returns the current position of the file read\/write pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "fflush",
                            "type": "function",
                            "description": "Flushes the output to a file Since PHP 4.0.1 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle"
                        },
                        {
                            "text": "fwrite",
                            "type": "function",
                            "description": "Binary-safe file write Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle $string $length"
                        },
                        {
                            "text": "fputs",
                            "type": "function",
                            "description": "&Alias; fwrite Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle $string $length"
                        },
                        {
                            "text": "mkdir",
                            "type": "function",
                            "description": "Attempts to create the directory specified by pathname. Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pathname $mode $recursive $context"
                        },
                        {
                            "text": "rename",
                            "type": "function",
                            "description": "Renames a file or directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$oldname $newname $context"
                        },
                        {
                            "text": "copy",
                            "type": "function",
                            "description": "Copies file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$source $dest $context"
                        },
                        {
                            "text": "tempnam",
                            "type": "function",
                            "description": "Create file with unique file name Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$dir $prefix"
                        },
                        {
                            "text": "tmpfile",
                            "type": "function",
                            "description": "Creates a temporary file Since PHP 4.0 5.0",
                            "leftLabel": "resource"
                        },
                        {
                            "text": "file",
                            "type": "function",
                            "description": "Reads entire file into an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename $flags $context"
                        },
                        {
                            "text": "file_get_contents",
                            "type": "function",
                            "description": "Reads entire file into a string Since PHP 4.3.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename $flags $context $offset $maxlen"
                        },
                        {
                            "text": "file_put_contents",
                            "type": "function",
                            "description": "Write a string to a file Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename $data $flags $context"
                        },
                        {
                            "text": "stream_select",
                            "type": "function",
                            "description": "Runs the equivalent of the select() system call on the given\narrays of streams with a timeout specified by tv_sec and tv_usec Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "array $read array $write array $except $tv_sec $tv_usec"
                        },
                        {
                            "text": "stream_context_create",
                            "type": "function",
                            "description": "Create a streams context Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "array $options array $params"
                        },
                        {
                            "text": "stream_context_set_params",
                            "type": "function",
                            "description": "Set parameters for a stream\/wrapper\/context Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream_or_context array $params"
                        },
                        {
                            "text": "stream_context_get_params",
                            "type": "function",
                            "description": "Retrieves parameters from a context Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "$stream_or_context"
                        },
                        {
                            "text": "stream_context_set_option",
                            "type": "function",
                            "description": "Sets an option for a stream\/wrapper\/context Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream_or_context $wrapper $option $value"
                        },
                        {
                            "text": "stream_context_set_option",
                            "type": "function",
                            "description": "Sets an option for a stream\/wrapper\/context Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream_or_context array $options"
                        },
                        {
                            "text": "stream_context_get_options",
                            "type": "function",
                            "description": "Retrieve options for a stream\/wrapper\/context Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$stream_or_context"
                        },
                        {
                            "text": "stream_context_get_default",
                            "type": "function",
                            "description": "Retreive the default streams context Since PHP 5.1.0",
                            "leftLabel": "resource",
                            "rightLabel": "array $options"
                        },
                        {
                            "text": "stream_context_set_default",
                            "type": "function",
                            "description": "Set the default streams context Since PHP 5.3.0",
                            "leftLabel": "resource",
                            "rightLabel": "array $options"
                        },
                        {
                            "text": "stream_filter_prepend",
                            "type": "function",
                            "description": "Attach a filter to a stream Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$stream $filtername $read_write $params"
                        },
                        {
                            "text": "stream_filter_append",
                            "type": "function",
                            "description": "Attach a filter to a stream Since PHP 4.3.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$stream $filtername $read_write $params"
                        },
                        {
                            "text": "stream_filter_remove",
                            "type": "function",
                            "description": "Remove a filter from a stream Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream_filter"
                        },
                        {
                            "text": "stream_socket_client",
                            "type": "function",
                            "description": "Open Internet or Unix domain socket connection Since PHP 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$remote_socket $errno $errstr $timeout $flags $context"
                        },
                        {
                            "text": "stream_socket_server",
                            "type": "function",
                            "description": "Create an Internet or Unix domain server socket Since PHP 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$local_socket $errno $errstr $flags $context"
                        },
                        {
                            "text": "stream_socket_accept",
                            "type": "function",
                            "description": "Accept a connection on a socket created by stream_socket_server Since PHP 5.0",
                            "leftLabel": "resource | bool",
                            "rightLabel": "$server_socket $timeout $peername"
                        },
                        {
                            "text": "stream_socket_get_name",
                            "type": "function",
                            "description": "Retrieve the name of the local or remote sockets Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle $want_peer"
                        },
                        {
                            "text": "stream_socket_recvfrom",
                            "type": "function",
                            "description": "Receives data from a socket, connected or not Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$socket $length $flags $address"
                        },
                        {
                            "text": "stream_socket_sendto",
                            "type": "function",
                            "description": "Sends a message to a socket, whether it is connected or not Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$socket $data $flags $address"
                        },
                        {
                            "text": "stream_socket_enable_crypto",
                            "type": "function",
                            "description": "Turns encryption on\/off on an already connected socket Since PHP 5.1.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$stream $enable $crypto_type $session_stream"
                        },
                        {
                            "text": "stream_socket_shutdown",
                            "type": "function",
                            "description": "Shutdown a full-duplex connection Since PHP 5.2.1",
                            "leftLabel": "bool",
                            "rightLabel": "$stream $how"
                        },
                        {
                            "text": "stream_socket_pair",
                            "type": "function",
                            "description": "Creates a pair of connected, indistinguishable socket streams Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "$domain $type $protocol"
                        },
                        {
                            "text": "stream_copy_to_stream",
                            "type": "function",
                            "description": "Copies data from one stream to another Since PHP 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$source $dest $maxlength $offset"
                        },
                        {
                            "text": "stream_get_contents",
                            "type": "function",
                            "description": "Reads remainder of a stream into a string Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle $maxlength $offset"
                        },
                        {
                            "text": "stream_supports_lock",
                            "type": "function",
                            "description": "Tells whether the stream supports locking. Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream"
                        },
                        {
                            "text": "fgetcsv",
                            "type": "function",
                            "description": "Gets line from file pointer and parse for CSV fields Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$handle $length $delimiter $enclosure $escape"
                        },
                        {
                            "text": "fputcsv",
                            "type": "function",
                            "description": "Format line as CSV and write to file pointer Since PHP 5.1.0",
                            "leftLabel": "int",
                            "rightLabel": "$handle array $fields $delimiter $enclosure $escape_char"
                        },
                        {
                            "text": "flock",
                            "type": "function",
                            "description": "Portable advisory file locking Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$handle $operation $wouldblock"
                        },
                        {
                            "text": "get_meta_tags",
                            "type": "function",
                            "description": "Extracts all meta tag content attributes from a file and returns an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename $use_include_path"
                        },
                        {
                            "text": "stream_set_write_buffer",
                            "type": "function",
                            "description": "Sets file buffering on the given stream Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$stream $buffer"
                        },
                        {
                            "text": "stream_set_read_buffer",
                            "type": "function",
                            "description": "Sets file buffering on the given stream Since PHP 4.3.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$stream $buffer"
                        },
                        {
                            "text": "set_file_buffer",
                            "type": "function",
                            "description": "&Alias; stream_set_write_buffer\nSets the buffering for write operations on the given stream to buffer bytes. Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$fp $buffer"
                        },
                        {
                            "text": "set_socket_blocking",
                            "type": "function",
                            "description": "&Alias; stream_set_blocking\nSets blocking or non-blocking mode on a stream. Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $mode"
                        },
                        {
                            "text": "stream_set_blocking",
                            "type": "function",
                            "description": "Set blocking\/non-blocking mode on a stream Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream $mode"
                        },
                        {
                            "text": "socket_set_blocking",
                            "type": "function",
                            "description": "&Alias; stream_set_blocking Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$socket $mode"
                        },
                        {
                            "text": "stream_get_meta_data",
                            "type": "function",
                            "description": "Retrieves header\/meta data from streams\/file pointers Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$stream"
                        },
                        {
                            "text": "stream_get_line",
                            "type": "function",
                            "description": "Gets line from stream resource up to a given delimiter Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$handle $length $ending"
                        },
                        {
                            "text": "stream_wrapper_register",
                            "type": "function",
                            "description": "Register a URL wrapper implemented as a PHP class Since PHP 4.3.2 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$protocol $classname $flags"
                        },
                        {
                            "text": "stream_register_wrapper",
                            "type": "function",
                            "description": "&Alias; stream_wrapper_register\nRegister a URL wrapper implemented as a PHP class Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$protocol $classname $flags"
                        },
                        {
                            "text": "stream_resolve_include_path",
                            "type": "function",
                            "description": "Resolve filename against the include path according to the same rules as fopen()\/include(). Since PHP 5.3.2",
                            "leftLabel": "string",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "stream_wrapper_unregister",
                            "type": "function",
                            "description": "Unregister a URL wrapper Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$protocol"
                        },
                        {
                            "text": "stream_wrapper_restore",
                            "type": "function",
                            "description": "Restores a previously unregistered built-in wrapper Since PHP 5.1.0",
                            "leftLabel": "bool",
                            "rightLabel": "$protocol"
                        },
                        {
                            "text": "stream_get_wrappers",
                            "type": "function",
                            "description": "Retrieve list of registered streams Since PHP 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "stream_get_transports",
                            "type": "function",
                            "description": "Retrieve list of registered socket transports Since PHP 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "stream_is_local",
                            "type": "function",
                            "description": "Checks if a stream is a local stream Since PHP 5.2.4",
                            "leftLabel": "bool",
                            "rightLabel": "$stream_or_url"
                        },
                        {
                            "text": "get_headers",
                            "type": "function",
                            "description": "Fetches all the headers sent by the server in response to a HTTP request Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$url $format"
                        },
                        {
                            "text": "stream_set_timeout",
                            "type": "function",
                            "description": "Set timeout period on a stream Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream $seconds $microseconds"
                        },
                        {
                            "text": "socket_set_timeout",
                            "type": "function",
                            "description": "&Alias; stream_set_timeout\nSet timeout period on a stream Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$stream $seconds $microseconds"
                        },
                        {
                            "text": "socket_get_status",
                            "type": "function",
                            "description": "&Alias; stream_get_meta_data\nRetrieves header\/meta data from streams\/file pointers Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "resource $stream"
                        },
                        {
                            "text": "realpath",
                            "type": "function",
                            "description": "Returns canonicalized absolute pathname Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "fnmatch",
                            "type": "function",
                            "description": "Match filename against a pattern Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$pattern $string $flags"
                        },
                        {
                            "text": "fsockopen",
                            "type": "function",
                            "description": "Open Internet or Unix domain socket connection Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$hostname $port $errno $errstr $timeout"
                        },
                        {
                            "text": "pfsockopen",
                            "type": "function",
                            "description": "Open persistent Internet or Unix domain socket connection Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$hostname $port $errno $errstr $timeout"
                        },
                        {
                            "text": "pack",
                            "type": "function",
                            "description": "Pack data into binary string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$format $args $_"
                        },
                        {
                            "text": "unpack",
                            "type": "function",
                            "description": "Unpack data from binary string Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$format $data"
                        },
                        {
                            "text": "get_browser",
                            "type": "function",
                            "description": "Tells what the user's browser is capable of Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$user_agent $return_array"
                        },
                        {
                            "text": "crypt",
                            "type": "function",
                            "description": "One-way string encryption (hashing) Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $salt"
                        },
                        {
                            "text": "opendir",
                            "type": "function",
                            "description": "Open directory handle Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$path $context"
                        },
                        {
                            "text": "closedir",
                            "type": "function",
                            "description": "Close directory handle Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$dir_handle"
                        },
                        {
                            "text": "chdir",
                            "type": "function",
                            "description": "Change directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$directory"
                        },
                        {
                            "text": "chroot",
                            "type": "function",
                            "description": "Change the root directory Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$directory"
                        },
                        {
                            "text": "getcwd",
                            "type": "function",
                            "description": "Gets the current working directory Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "rewinddir",
                            "type": "function",
                            "description": "Rewind directory handle Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$dir_handle"
                        },
                        {
                            "text": "readdir",
                            "type": "function",
                            "description": "Read entry from directory handle Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$dir_handle"
                        },
                        {
                            "text": "dir",
                            "type": "function",
                            "description": "Return an instance of the Directory class Since PHP 4.0 5.0",
                            "leftLabel": "Directory",
                            "rightLabel": "$directory $context"
                        },
                        {
                            "text": "scandir",
                            "type": "function",
                            "description": "List files and directories inside the specified path Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$directory $sorting_order $context"
                        },
                        {
                            "text": "glob",
                            "type": "function",
                            "description": "Find pathnames matching a pattern Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$pattern $flags"
                        },
                        {
                            "text": "fileatime",
                            "type": "function",
                            "description": "Gets last access time of file Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "filectime",
                            "type": "function",
                            "description": "Gets inode change time of file Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "filegroup",
                            "type": "function",
                            "description": "Gets file group Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "fileinode",
                            "type": "function",
                            "description": "Gets file inode Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "filemtime",
                            "type": "function",
                            "description": "Gets file modification time Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "fileowner",
                            "type": "function",
                            "description": "Gets file owner Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "fileperms",
                            "type": "function",
                            "description": "Gets file permissions Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "filesize",
                            "type": "function",
                            "description": "Gets file size Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "filetype",
                            "type": "function",
                            "description": "Gets file type Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "file_exists",
                            "type": "function",
                            "description": "Checks whether a file or directory exists Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_writable",
                            "type": "function",
                            "description": "Tells whether the filename is writable Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_writeable",
                            "type": "function",
                            "description": "&Alias; is_writable Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_readable",
                            "type": "function",
                            "description": "Tells whether a file exists and is readable Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_executable",
                            "type": "function",
                            "description": "Tells whether the filename is executable Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_file",
                            "type": "function",
                            "description": "Tells whether the filename is a regular file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_dir",
                            "type": "function",
                            "description": "Tells whether the filename is a directory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "is_link",
                            "type": "function",
                            "description": "Tells whether the filename is a symbolic link Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "stat",
                            "type": "function",
                            "description": "Gives information about a file Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "lstat",
                            "type": "function",
                            "description": "Gives information about a file or symbolic link Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "chown",
                            "type": "function",
                            "description": "Changes file owner Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $user"
                        },
                        {
                            "text": "chgrp",
                            "type": "function",
                            "description": "Changes file group Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $group"
                        },
                        {
                            "text": "lchown",
                            "type": "function",
                            "description": "Changes user ownership of symlink Since PHP 5.1.2",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $user"
                        },
                        {
                            "text": "lchgrp",
                            "type": "function",
                            "description": "Changes group ownership of symlink Since PHP 5.1.2",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $group"
                        },
                        {
                            "text": "chmod",
                            "type": "function",
                            "description": "Changes file mode Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $mode"
                        },
                        {
                            "text": "touch",
                            "type": "function",
                            "description": "Sets access and modification time of file Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $time $atime"
                        },
                        {
                            "text": "clearstatcache",
                            "type": "function",
                            "description": "Clears file status cache Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$clear_realpath_cache $filename"
                        },
                        {
                            "text": "disk_total_space",
                            "type": "function",
                            "description": "Returns the total size of a directory Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$directory"
                        },
                        {
                            "text": "disk_free_space",
                            "type": "function",
                            "description": "Returns available space in directory Since PHP 4.1.0 5.0",
                            "leftLabel": "float",
                            "rightLabel": "$directory"
                        },
                        {
                            "text": "diskfreespace",
                            "type": "function",
                            "description": "&Alias; disk_free_space Since PHP 4.0 5.0",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "mail",
                            "type": "function",
                            "description": "Send mail Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$to $subject $message $additional_headers $additional_parameters"
                        },
                        {
                            "text": "ezmlm_hash",
                            "type": "function",
                            "description": "Calculate the hash value needed by EZMLM Since PHP 4.0.2 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$addr"
                        },
                        {
                            "text": "openlog",
                            "type": "function",
                            "description": "Open connection to system logger Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$ident $option $facility"
                        },
                        {
                            "text": "syslog",
                            "type": "function",
                            "description": "Generate a system log message Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$priority $message"
                        },
                        {
                            "text": "closelog",
                            "type": "function",
                            "description": "Close connection to system logger Since PHP 4.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "header_register_callback",
                            "type": "function",
                            "description": "Registers a function that will be called when PHP starts sending output. Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "callable $callback"
                        },
                        {
                            "text": "getimagesizefromstring",
                            "type": "function",
                            "description": "PHP > 5.4.0\nGet the size of an image from a string.",
                            "leftLabel": "array",
                            "rightLabel": "$imagedata array $imageinfo"
                        },
                        {
                            "text": "stream_set_chunk_size",
                            "type": "function",
                            "description": "PHP > 5.4.0\nSet the stream chunk size.",
                            "leftLabel": "int",
                            "rightLabel": "$fp $chunk_size"
                        },
                        {
                            "text": "socket_import_stream",
                            "type": "function",
                            "description": "PHP > 5.4.0\nImport a stream.",
                            "leftLabel": "void",
                            "rightLabel": "$stream"
                        },
                        {
                            "text": "define_syslog_variables",
                            "type": "function",
                            "description": "Initializes all syslog related variables Since PHP 4.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "lcg_value",
                            "type": "function",
                            "description": "Combined linear congruential generator Since PHP 4.0 5.0",
                            "leftLabel": "float"
                        },
                        {
                            "text": "metaphone",
                            "type": "function",
                            "description": "Calculate the metaphone key of a string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str $phones"
                        },
                        {
                            "text": "ob_start",
                            "type": "function",
                            "description": "Turn on output buffering Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$output_callback $chunk_size $erase"
                        },
                        {
                            "text": "ob_flush",
                            "type": "function",
                            "description": "Flush (send) the output buffer Since PHP 4.2.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ob_clean",
                            "type": "function",
                            "description": "Clean (erase) the output buffer Since PHP 4.2.0 5.0",
                            "leftLabel": "void"
                        },
                        {
                            "text": "ob_end_flush",
                            "type": "function",
                            "description": "Flush (send) the output buffer and turn off output buffering Since PHP 4.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ob_end_clean",
                            "type": "function",
                            "description": "Clean (erase) the output buffer and turn off output buffering Since PHP 4.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "ob_get_flush",
                            "type": "function",
                            "description": "Flush the output buffer, return it as a string and turn off output buffering Since PHP 4.3.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ob_get_clean",
                            "type": "function",
                            "description": "Get current buffer contents and delete current output buffer Since PHP 4.3.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ob_get_length",
                            "type": "function",
                            "description": "Return the length of the output buffer Since PHP 4.0.2 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ob_get_level",
                            "type": "function",
                            "description": "Return the nesting level of the output buffering mechanism Since PHP 4.2.0 5.0",
                            "leftLabel": "int"
                        },
                        {
                            "text": "ob_get_status",
                            "type": "function",
                            "description": "Get status of output buffers Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$full_status"
                        },
                        {
                            "text": "ob_get_contents",
                            "type": "function",
                            "description": "Return the contents of the output buffer Since PHP 4.0 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ob_implicit_flush",
                            "type": "function",
                            "description": "Turn implicit flush on\/off Since PHP 4.0 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$flag"
                        },
                        {
                            "text": "ob_list_handlers",
                            "type": "function",
                            "description": "List all output handlers in use Since PHP 4.3.0 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "ksort",
                            "type": "function",
                            "description": "Sort an array by key Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "krsort",
                            "type": "function",
                            "description": "Sort an array by key in reverse order Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "natsort",
                            "type": "function",
                            "description": "Sort an array using a \"natural order\" algorithm Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "natcasesort",
                            "type": "function",
                            "description": "Sort an array using a case insensitive \"natural order\" algorithm Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "asort",
                            "type": "function",
                            "description": "Sort an array and maintain index association Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "arsort",
                            "type": "function",
                            "description": "Sort an array in reverse order and maintain index association Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "sort",
                            "type": "function",
                            "description": "Sort an array Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "rsort",
                            "type": "function",
                            "description": "Sort an array in reverse order Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "usort",
                            "type": "function",
                            "description": "Sort an array by values using a user-defined comparison function Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $cmp_function"
                        },
                        {
                            "text": "uasort",
                            "type": "function",
                            "description": "Sort an array with a user-defined comparison function and maintain index association Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $cmp_function"
                        },
                        {
                            "text": "uksort",
                            "type": "function",
                            "description": "Sort an array by keys using a user-defined comparison function Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $cmp_function"
                        },
                        {
                            "text": "shuffle",
                            "type": "function",
                            "description": "Shuffle an array Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "array_walk",
                            "type": "function",
                            "description": "Apply a user function to every member of an array Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $array $funcname $userdata"
                        },
                        {
                            "text": "array_walk_recursive",
                            "type": "function",
                            "description": "Apply a user function recursively to every member of an array Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $input $funcname $userdata"
                        },
                        {
                            "text": "count",
                            "type": "function",
                            "description": "Counts all elements in an array, or something in an object. Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$var $mode"
                        },
                        {
                            "text": "end",
                            "type": "function",
                            "description": "Set the internal pointer of an array to its last element Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "prev",
                            "type": "function",
                            "description": "Rewind the internal array pointer Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "next",
                            "type": "function",
                            "description": "Advance the internal array pointer of an array Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "reset",
                            "type": "function",
                            "description": "Set the internal pointer of an array to its first element Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "current",
                            "type": "function",
                            "description": "Return the current element in an array Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "key",
                            "type": "function",
                            "description": "Fetch a key from an array Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "min",
                            "type": "function",
                            "description": "Find lowest value Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $value1 $value2 $values"
                        },
                        {
                            "text": "max",
                            "type": "function",
                            "description": "Find highest value Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $value1 $value2 $values"
                        },
                        {
                            "text": "in_array",
                            "type": "function",
                            "description": "Checks if a value exists in an array Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$needle array $haystack $strict"
                        },
                        {
                            "text": "array_search",
                            "type": "function",
                            "description": "Searches the array for a given value and returns the corresponding key if successful Since PHP 4.0.5 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$needle array $haystack $strict"
                        },
                        {
                            "text": "extract",
                            "type": "function",
                            "description": "Import variables into the current symbol table from an array Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "array $var_array $extract_type $prefix"
                        },
                        {
                            "text": "compact",
                            "type": "function",
                            "description": "Create array containing variables and their values Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$varname $_"
                        },
                        {
                            "text": "array_fill",
                            "type": "function",
                            "description": "Fill an array with values Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$start_index $num $value"
                        },
                        {
                            "text": "array_fill_keys",
                            "type": "function",
                            "description": "Fill an array with values, specifying keys Since PHP 5.2.0",
                            "leftLabel": "array",
                            "rightLabel": "array $keys $value"
                        },
                        {
                            "text": "range",
                            "type": "function",
                            "description": "Create an array containing a range of elements Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$low $high $step"
                        },
                        {
                            "text": "array_multisort",
                            "type": "function",
                            "description": "Sort multiple or multi-dimensional arrays Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $arr $arg $arg $_"
                        },
                        {
                            "text": "array_push",
                            "type": "function",
                            "description": "Push one or more elements onto the end of array Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "array $array $var $_"
                        },
                        {
                            "text": "array_pop",
                            "type": "function",
                            "description": "Pop the element off the end of array Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "array_shift",
                            "type": "function",
                            "description": "Shift an element off the beginning of array Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "array_unshift",
                            "type": "function",
                            "description": "Prepend one or more elements to the beginning of an array Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "array $array $var $_"
                        },
                        {
                            "text": "array_splice",
                            "type": "function",
                            "description": "Remove a portion of the array and replace it with something else Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input $offset $length $replacement"
                        },
                        {
                            "text": "array_slice",
                            "type": "function",
                            "description": "Extract a slice of the array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array $offset $length $preserve_keys"
                        },
                        {
                            "text": "array_merge",
                            "type": "function",
                            "description": "Merge one or more arrays Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_merge_recursive",
                            "type": "function",
                            "description": "Merge two or more arrays recursively Since PHP 4.0.1 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $_"
                        },
                        {
                            "text": "array_replace",
                            "type": "function",
                            "description": "array_replace() replaces the values of the first array with the same values from all the following arrays. Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_replace_recursive",
                            "type": "function",
                            "description": "Replaces elements from passed arrays into the first array recursively Since PHP 5.3.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_keys",
                            "type": "function",
                            "description": "Return all the keys of an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input $search_value $strict"
                        },
                        {
                            "text": "array_values",
                            "type": "function",
                            "description": "Return all the values of an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input"
                        },
                        {
                            "text": "array_count_values",
                            "type": "function",
                            "description": "Counts all the values of an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input"
                        },
                        {
                            "text": "array_column",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nReturn the values from a single column in the input array Since PHP 5.5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array $column $index_key"
                        },
                        {
                            "text": "array_reverse",
                            "type": "function",
                            "description": "Return an array with elements in reverse order Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array $preserve_keys"
                        },
                        {
                            "text": "array_reduce",
                            "type": "function",
                            "description": "Iteratively reduce the array to a single value using a callback function Since PHP 4.0.5 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $input $function $initial"
                        },
                        {
                            "text": "array_pad",
                            "type": "function",
                            "description": "Pad array to the specified length with a value Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input $pad_size $pad_value"
                        },
                        {
                            "text": "array_flip",
                            "type": "function",
                            "description": "Exchanges all keys with their associated values in an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $trans"
                        },
                        {
                            "text": "array_change_key_case",
                            "type": "function",
                            "description": "Changes all keys in an array Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input $case"
                        },
                        {
                            "text": "array_rand",
                            "type": "function",
                            "description": "Pick one or more random entries out of an array Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "array $input $num_req"
                        },
                        {
                            "text": "array_unique",
                            "type": "function",
                            "description": "Removes duplicate values from an array Since PHP 4.0.1 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array $sort_flags"
                        },
                        {
                            "text": "array_intersect",
                            "type": "function",
                            "description": "Computes the intersection of arrays Since PHP 4.0.1 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_intersect_key",
                            "type": "function",
                            "description": "Computes the intersection of arrays using keys for comparison Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_intersect_ukey",
                            "type": "function",
                            "description": "Computes the intersection of arrays using a callback function on the keys for comparison Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $key_compare_func"
                        },
                        {
                            "text": "array_uintersect",
                            "type": "function",
                            "description": "Computes the intersection of arrays, compares data by a callback function Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $data_compare_func"
                        },
                        {
                            "text": "array_intersect_assoc",
                            "type": "function",
                            "description": "Computes the intersection of arrays with additional index check Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_uintersect_assoc",
                            "type": "function",
                            "description": "Computes the intersection of arrays with additional index check, compares data by a callback function Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $data_compare_func"
                        },
                        {
                            "text": "array_intersect_uassoc",
                            "type": "function",
                            "description": "Computes the intersection of arrays with additional index check, compares indexes by a callback function Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $key_compare_func"
                        },
                        {
                            "text": "array_uintersect_uassoc",
                            "type": "function",
                            "description": "Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $data_compare_func $key_compare_func"
                        },
                        {
                            "text": "array_diff",
                            "type": "function",
                            "description": "Computes the difference of arrays Since PHP 4.0.1 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_diff_key",
                            "type": "function",
                            "description": "Computes the difference of arrays using keys for comparison Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_diff_ukey",
                            "type": "function",
                            "description": "Computes the difference of arrays using a callback function on the keys for comparison Since PHP 5.1.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $key_compare_func"
                        },
                        {
                            "text": "array_udiff",
                            "type": "function",
                            "description": "Computes the difference of arrays by using a callback function for data comparison Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $data_compare_func"
                        },
                        {
                            "text": "array_diff_assoc",
                            "type": "function",
                            "description": "Computes the difference of arrays with additional index check Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_"
                        },
                        {
                            "text": "array_udiff_assoc",
                            "type": "function",
                            "description": "Computes the difference of arrays with additional index check, compares data by a callback function Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $data_compare_func"
                        },
                        {
                            "text": "array_diff_uassoc",
                            "type": "function",
                            "description": "Computes the difference of arrays with additional index check which is performed by a user supplied callback function Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $key_compare_func"
                        },
                        {
                            "text": "array_udiff_uassoc",
                            "type": "function",
                            "description": "Computes the difference of arrays with additional index check, compares data and indexes by a callback function Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $array1 array $array2 array $_ $data_compare_func $key_compare_func"
                        },
                        {
                            "text": "array_sum",
                            "type": "function",
                            "description": "Calculate the sum of values in an array Since PHP 4.0.4 5.0",
                            "leftLabel": "number",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "array_product",
                            "type": "function",
                            "description": "Calculate the product of values in an array Since PHP 5.1.0",
                            "leftLabel": "number",
                            "rightLabel": "array $array"
                        },
                        {
                            "text": "array_filter",
                            "type": "function",
                            "description": "Iterates over each value in the array\npassing them to the callback function. Since PHP 4.0.6 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input $callback $flag"
                        },
                        {
                            "text": "array_map",
                            "type": "function",
                            "description": "Applies the callback to the elements of the given arrays Since PHP 4.0.6 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$callback array $arr1 array $_"
                        },
                        {
                            "text": "array_chunk",
                            "type": "function",
                            "description": "Split an array into chunks Since PHP 4.2.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $input $size $preserve_keys"
                        },
                        {
                            "text": "array_combine",
                            "type": "function",
                            "description": "Creates an array by using one array for keys and another for its values Since PHP 5.0",
                            "leftLabel": "array",
                            "rightLabel": "array $keys array $values"
                        },
                        {
                            "text": "array_key_exists",
                            "type": "function",
                            "description": "Checks if the given key or index exists in the array Since PHP 4.0.7 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key array $search"
                        },
                        {
                            "text": "pos",
                            "type": "function",
                            "description": "&Alias; current Since PHP 4.0 5.0",
                            "rightLabel": "$arg"
                        },
                        {
                            "text": "sizeof",
                            "type": "function",
                            "description": "&Alias; count Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$var $mode"
                        },
                        {
                            "text": "key_exists",
                            "type": "function",
                            "description": "Checks if the given key or index exists in the array. The name of this function is array_key_exists() in PHP > 4.0.6. Since PHP 4.0.7 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key $search"
                        },
                        {
                            "text": "assert",
                            "type": "function",
                            "description": "Checks if assertion is &false; Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$assertion $description"
                        },
                        {
                            "text": "cli_get_process_title",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nReturns the current process title",
                            "leftLabel": "string"
                        },
                        {
                            "text": "cli_set_process_title",
                            "type": "function",
                            "description": "(PHP 5 >=5.5.0)\nSets the process title",
                            "leftLabel": "bool",
                            "rightLabel": "$title"
                        },
                        {
                            "text": "assert_options",
                            "type": "function",
                            "description": "Set\/get the various assert flags Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$what $value"
                        },
                        {
                            "text": "version_compare",
                            "type": "function",
                            "description": "Compares two \"PHP-standardized\" version number strings Since PHP 4.1.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$version1 $version2 $operator"
                        },
                        {
                            "text": "ftok",
                            "type": "function",
                            "description": "Convert a pathname and a project identifier to a System V IPC key Since PHP 4.2.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$pathname $proj"
                        },
                        {
                            "text": "str_rot13",
                            "type": "function",
                            "description": "Perform the rot13 transform on a string Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$str"
                        },
                        {
                            "text": "stream_get_filters",
                            "type": "function",
                            "description": "Retrieve list of registered filters Since PHP 5.0",
                            "leftLabel": "array"
                        },
                        {
                            "text": "stream_filter_register",
                            "type": "function",
                            "description": "Register a user defined stream filter Since PHP 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$filtername $classname"
                        },
                        {
                            "text": "stream_bucket_make_writeable",
                            "type": "function",
                            "description": "Return a bucket object from the brigade for operating on Since PHP 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$brigade"
                        },
                        {
                            "text": "stream_bucket_prepend",
                            "type": "function",
                            "description": "Prepend bucket to brigade Since PHP 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$brigade $bucket"
                        },
                        {
                            "text": "stream_bucket_append",
                            "type": "function",
                            "description": "Append bucket to brigade Since PHP 5.0",
                            "leftLabel": "void",
                            "rightLabel": "$brigade $bucket"
                        },
                        {
                            "text": "stream_bucket_new",
                            "type": "function",
                            "description": "Create a new bucket for use on the current stream Since PHP 5.0",
                            "leftLabel": "object",
                            "rightLabel": "$stream $buffer"
                        },
                        {
                            "text": "output_add_rewrite_var",
                            "type": "function",
                            "description": "Add URL rewriter values Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$name $value"
                        },
                        {
                            "text": "output_reset_rewrite_vars",
                            "type": "function",
                            "description": "Reset URL rewriter values Since PHP 4.3.0 5.0",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "sys_get_temp_dir",
                            "type": "function",
                            "description": "Returns directory path used for temporary files Since PHP 5.2.1",
                            "leftLabel": "string"
                        },
                        {
                            "text": "realpath_cache_get",
                            "type": "function",
                            "description": "Get the contents of the realpath cache. Since PHP 5.3.2",
                            "leftLabel": "array"
                        },
                        {
                            "text": "realpath_cache_size",
                            "type": "function",
                            "description": "Get the amount of memory used by the realpath cache. Since PHP 5.3.2",
                            "leftLabel": "int"
                        },
                        {
                            "text": "suhosin_encrypt_cookie",
                            "type": "function",
                            "description": "Start of suhosin v.0.9.32.1",
                            "rightLabel": "$name $value"
                        },
                        {
                            "text": "suhosin_get_raw_cookies",
                            "type": "function",
                            "description": "Returns an array containing the raw cookie values",
                            "leftLabel": "array"
                        },
                        {
                            "text": "svn_checkout",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nChecks out a working copy from the repository",
                            "leftLabel": "bool",
                            "rightLabel": "$repos $targetpath $revision $flags"
                        },
                        {
                            "text": "svn_cat",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the contents of a file in a repository",
                            "leftLabel": "string",
                            "rightLabel": "$repos_url $revision_no"
                        },
                        {
                            "text": "svn_ls",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns list of directory contents in repository URL, optionally at revision number",
                            "leftLabel": "array",
                            "rightLabel": "$repos_url $revision_no $recurse $peg"
                        },
                        {
                            "text": "svn_log",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the commit log messages of a repository URL",
                            "leftLabel": "array",
                            "rightLabel": "$repos_url $start_revision $end_revision $limit $flags"
                        },
                        {
                            "text": "svn_auth_set_parameter",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nSets an authentication parameter",
                            "leftLabel": "void",
                            "rightLabel": "$key $value"
                        },
                        {
                            "text": "svn_auth_get_parameter",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nRetrieves authentication parameter",
                            "leftLabel": "string | NULL",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "svn_client_version",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the version of the SVN client libraries",
                            "leftLabel": "string"
                        },
                        {
                            "text": "svn_config_ensure",
                            "type": "function"
                        },
                        {
                            "text": "svn_diff",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nRecursively diffs two paths",
                            "leftLabel": "array",
                            "rightLabel": "$path1 $rev1 $path2 $rev2"
                        },
                        {
                            "text": "svn_cleanup",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nRecursively cleanup a working copy directory, finishing incomplete operations and removing locks",
                            "leftLabel": "bool",
                            "rightLabel": "$workingdir"
                        },
                        {
                            "text": "svn_revert",
                            "type": "function",
                            "description": "(PECL svn >= 0.3.0)\nRevert changes to the working copy",
                            "leftLabel": "bool",
                            "rightLabel": "$path $recursive"
                        },
                        {
                            "text": "svn_resolved",
                            "type": "function"
                        },
                        {
                            "text": "svn_commit",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nSends changes from the local working copy to the repository",
                            "leftLabel": "array",
                            "rightLabel": "$log array $targets $recursive"
                        },
                        {
                            "text": "svn_lock",
                            "type": "function"
                        },
                        {
                            "text": "svn_unlock",
                            "type": "function"
                        },
                        {
                            "text": "svn_add",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nSchedules the addition of an item in a working directory",
                            "leftLabel": "bool",
                            "rightLabel": "$path $recursive $force"
                        },
                        {
                            "text": "svn_status",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the status of working copy files and directories",
                            "leftLabel": "array",
                            "rightLabel": "$path $flags"
                        },
                        {
                            "text": "svn_update",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nUpdate working copy",
                            "leftLabel": "int",
                            "rightLabel": "$path $revno $recurse"
                        },
                        {
                            "text": "svn_import",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nImports an unversioned path into a repository",
                            "leftLabel": "bool",
                            "rightLabel": "$path $url $nonrecursive"
                        },
                        {
                            "text": "svn_info",
                            "type": "function"
                        },
                        {
                            "text": "svn_export",
                            "type": "function",
                            "description": "(PECL svn >= 0.3.0)\nExport the contents of a SVN directory",
                            "leftLabel": "bool",
                            "rightLabel": "$frompath $topath $working_copy $revision_no"
                        },
                        {
                            "text": "svn_copy",
                            "type": "function"
                        },
                        {
                            "text": "svn_switch",
                            "type": "function"
                        },
                        {
                            "text": "svn_blame",
                            "type": "function",
                            "description": "(PECL svn >= 0.3.0)\nGet the SVN blame for a file",
                            "leftLabel": "array",
                            "rightLabel": "$repository_url $revision_no"
                        },
                        {
                            "text": "svn_delete",
                            "type": "function",
                            "description": "(PECL svn >= 0.4.0)\nDelete items from a working copy or repository.",
                            "leftLabel": "bool",
                            "rightLabel": "$path $force"
                        },
                        {
                            "text": "svn_mkdir",
                            "type": "function",
                            "description": "(PECL svn >= 0.4.0)\nCreates a directory in a working copy or repository",
                            "leftLabel": "bool",
                            "rightLabel": "$path $log_message"
                        },
                        {
                            "text": "svn_move",
                            "type": "function",
                            "leftLabel": "mixed",
                            "rightLabel": "$src_path $dst_path $force"
                        },
                        {
                            "text": "svn_proplist",
                            "type": "function",
                            "leftLabel": "mixed",
                            "rightLabel": "$path $recurse $revision"
                        },
                        {
                            "text": "svn_propget",
                            "type": "function",
                            "leftLabel": "mixed",
                            "rightLabel": "$path $property_name $recurse $revision"
                        },
                        {
                            "text": "svn_repos_create",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nCreate a new subversion repository at path",
                            "leftLabel": "resource",
                            "rightLabel": "$path array $config array $fsconfig"
                        },
                        {
                            "text": "svn_repos_recover",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nRun recovery procedures on the repository located at path.",
                            "leftLabel": "bool",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "svn_repos_hotcopy",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nMake a hot-copy of the repos at repospath; copy it to destpath",
                            "leftLabel": "bool",
                            "rightLabel": "$repospath $destpath $cleanlogs"
                        },
                        {
                            "text": "svn_repos_open",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nOpen a shared lock on a repository.",
                            "leftLabel": "resource",
                            "rightLabel": "$path"
                        },
                        {
                            "text": "svn_repos_fs",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nGets a handle on the filesystem for a repository",
                            "leftLabel": "resource",
                            "rightLabel": "$repos"
                        },
                        {
                            "text": "svn_repos_fs_begin_txn_for_commit",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCreate a new transaction",
                            "leftLabel": "resource",
                            "rightLabel": "$repos $rev $author $log_msg"
                        },
                        {
                            "text": "svn_repos_fs_commit_txn",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCommits a transaction and returns the new revision",
                            "leftLabel": "int",
                            "rightLabel": "$txn"
                        },
                        {
                            "text": "svn_fs_revision_root",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nGet a handle on a specific version of the repository root",
                            "leftLabel": "resource",
                            "rightLabel": "$fs $revnum"
                        },
                        {
                            "text": "svn_fs_check_path",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nDetermines what kind of item lives at path in a given repository fsroot",
                            "leftLabel": "int",
                            "rightLabel": "$fsroot $path"
                        },
                        {
                            "text": "svn_fs_revision_prop",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nFetches the value of a named property",
                            "leftLabel": "string",
                            "rightLabel": "$fs $revnum $propname"
                        },
                        {
                            "text": "svn_fs_dir_entries",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nEnumerates the directory entries under path; returns a hash of dir names to file type",
                            "leftLabel": "array",
                            "rightLabel": "$fsroot $path"
                        },
                        {
                            "text": "svn_fs_node_created_rev",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the revision in which path under fsroot was created",
                            "leftLabel": "int",
                            "rightLabel": "$fsroot $path"
                        },
                        {
                            "text": "svn_fs_youngest_rev",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the number of the youngest revision in the filesystem",
                            "leftLabel": "int",
                            "rightLabel": "$fs"
                        },
                        {
                            "text": "svn_fs_file_contents",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns a stream to access the contents of a file from a given version of the fs",
                            "leftLabel": "resource",
                            "rightLabel": "$fsroot $path"
                        },
                        {
                            "text": "svn_fs_file_length",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the length of a file from a given version of the fs",
                            "leftLabel": "int",
                            "rightLabel": "$fsroot $path"
                        },
                        {
                            "text": "svn_fs_txn_root",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCreates and returns a transaction root",
                            "leftLabel": "resource",
                            "rightLabel": "$txn"
                        },
                        {
                            "text": "svn_fs_make_file",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCreates a new empty file, returns true if all is ok, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root $path"
                        },
                        {
                            "text": "svn_fs_make_dir",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCreates a new empty directory, returns true if all is ok, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root $path"
                        },
                        {
                            "text": "svn_fs_apply_text",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCreates and returns a stream that will be used to replace",
                            "leftLabel": "resource",
                            "rightLabel": "$root $path"
                        },
                        {
                            "text": "svn_fs_copy",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCopies a file or a directory, returns true if all is ok, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$from_root $from_path $to_root $to_path"
                        },
                        {
                            "text": "svn_fs_delete",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nDeletes a file or a directory, return true if all is ok, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root $path"
                        },
                        {
                            "text": "svn_fs_begin_txn2",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nCreate a new transaction",
                            "leftLabel": "resource",
                            "rightLabel": "$repos $rev"
                        },
                        {
                            "text": "svn_fs_is_dir",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nReturn true if the path points to a directory, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root $path"
                        },
                        {
                            "text": "svn_fs_is_file",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nReturn true if the path points to a file, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root $path"
                        },
                        {
                            "text": "svn_fs_node_prop",
                            "type": "function",
                            "description": "(PECL svn >= 0.1.0)\nReturns the value of a property for a node",
                            "leftLabel": "string",
                            "rightLabel": "$fsroot $path $propname"
                        },
                        {
                            "text": "svn_fs_change_node_prop",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nReturn true if everything is ok, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root $path $name $value"
                        },
                        {
                            "text": "svn_fs_contents_changed",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nReturn true if content is different, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root1 $path1 $root2 $path2"
                        },
                        {
                            "text": "svn_fs_props_changed",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nReturn true if props are different, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$root1 $path1 $root2 $path2"
                        },
                        {
                            "text": "svn_fs_abort_txn",
                            "type": "function",
                            "description": "(PECL svn >= 0.2.0)\nAbort a transaction, returns true if everything is okay, false otherwise",
                            "leftLabel": "bool",
                            "rightLabel": "$txn"
                        },
                        {
                            "text": "sybase_connect",
                            "type": "function",
                            "description": "Opens a Sybase server connection",
                            "leftLabel": "resource",
                            "rightLabel": "$servername $username $password $charset $appname"
                        },
                        {
                            "text": "sybase_pconnect",
                            "type": "function",
                            "description": "Open persistent Sybase connection",
                            "leftLabel": "resource",
                            "rightLabel": "$servername $username $password $charset $appname"
                        },
                        {
                            "text": "sybase_close",
                            "type": "function",
                            "description": "Closes a Sybase connection",
                            "leftLabel": "bool",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "sybase_select_db",
                            "type": "function",
                            "description": "Selects a Sybase database",
                            "leftLabel": "bool",
                            "rightLabel": "$database_name $link_identifier"
                        },
                        {
                            "text": "sybase_query",
                            "type": "function",
                            "description": "Sends a Sybase query",
                            "leftLabel": "mixed",
                            "rightLabel": "$query $link_identifier"
                        },
                        {
                            "text": "sybase_unbuffered_query",
                            "type": "function",
                            "description": "Send a Sybase query and do not block",
                            "leftLabel": "resource",
                            "rightLabel": "$query $link_identifier $store_result"
                        },
                        {
                            "text": "sybase_free_result",
                            "type": "function",
                            "description": "Frees result memory",
                            "leftLabel": "bool",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sybase_get_last_message",
                            "type": "function",
                            "description": "Returns the last message from the server",
                            "leftLabel": "string"
                        },
                        {
                            "text": "sybase_num_rows",
                            "type": "function",
                            "description": "Get number of rows in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sybase_num_fields",
                            "type": "function",
                            "description": "Gets the number of fields in a result set",
                            "leftLabel": "int",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sybase_fetch_row",
                            "type": "function",
                            "description": "Get a result row as an enumerated array",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sybase_fetch_array",
                            "type": "function",
                            "description": "Fetch row as array",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sybase_fetch_assoc",
                            "type": "function",
                            "description": "Fetch a result row as an associative array",
                            "leftLabel": "array",
                            "rightLabel": "$result"
                        },
                        {
                            "text": "sybase_fetch_object",
                            "type": "function",
                            "description": "Fetch a row as an object",
                            "leftLabel": "object",
                            "rightLabel": "$result $object"
                        },
                        {
                            "text": "sybase_data_seek",
                            "type": "function",
                            "description": "Moves internal row pointer",
                            "leftLabel": "bool",
                            "rightLabel": "$result_identifier $row_number"
                        },
                        {
                            "text": "sybase_fetch_field",
                            "type": "function",
                            "description": "Get field information from a result",
                            "leftLabel": "object",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "sybase_field_seek",
                            "type": "function",
                            "description": "Sets field offset",
                            "leftLabel": "bool",
                            "rightLabel": "$result $field_offset"
                        },
                        {
                            "text": "sybase_result",
                            "type": "function",
                            "description": "Get result data",
                            "leftLabel": "string",
                            "rightLabel": "$result $row $field"
                        },
                        {
                            "text": "sybase_affected_rows",
                            "type": "function",
                            "description": "Gets number of affected rows in last query",
                            "leftLabel": "int",
                            "rightLabel": "$link_identifier"
                        },
                        {
                            "text": "sybase_min_client_severity",
                            "type": "function",
                            "description": "Sets minimum client severity",
                            "leftLabel": "void",
                            "rightLabel": "$severity"
                        },
                        {
                            "text": "sybase_min_server_severity",
                            "type": "function",
                            "description": "Sets minimum server severity",
                            "leftLabel": "void",
                            "rightLabel": "$severity"
                        },
                        {
                            "text": "sybase_set_message_handler",
                            "type": "function",
                            "description": "Sets the handler called when a server message is raised",
                            "leftLabel": "bool",
                            "rightLabel": "$handler $connection"
                        },
                        {
                            "text": "sybase_deadlock_retry_count",
                            "type": "function",
                            "description": "Sets the deadlock retry count",
                            "leftLabel": "void",
                            "rightLabel": "$retry_count"
                        },
                        {
                            "text": "msg_get_queue",
                            "type": "function",
                            "description": "Start of sysvmsg v.",
                            "rightLabel": "$key $perms"
                        },
                        {
                            "text": "msg_send",
                            "type": "function",
                            "description": "Send a message to a message queue Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$queue $msgtype $message $serialize $blocking $errorcode"
                        },
                        {
                            "text": "msg_receive",
                            "type": "function",
                            "description": "Receive a message from a message queue Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$queue $desiredmsgtype $msgtype $maxsize $message $unserialize $flags $errorcode"
                        },
                        {
                            "text": "msg_remove_queue",
                            "type": "function",
                            "description": "Destroy a message queue Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$queue"
                        },
                        {
                            "text": "msg_stat_queue",
                            "type": "function",
                            "description": "Returns information from the message queue data structure Since PHP 4.3.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$queue"
                        },
                        {
                            "text": "msg_set_queue",
                            "type": "function",
                            "description": "Set information in the message queue data structure Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$queue array $data"
                        },
                        {
                            "text": "msg_queue_exists",
                            "type": "function",
                            "description": "Check whether a message queue exists Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "sem_get",
                            "type": "function",
                            "description": "Start of sysvsem v.",
                            "rightLabel": "$key $max_acquire $perm $auto_release"
                        },
                        {
                            "text": "sem_acquire",
                            "type": "function",
                            "description": "Acquire a semaphore Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$sem_identifier"
                        },
                        {
                            "text": "sem_release",
                            "type": "function",
                            "description": "Release a semaphore Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$sem_identifier"
                        },
                        {
                            "text": "sem_remove",
                            "type": "function",
                            "description": "Remove a semaphore Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$sem_identifier"
                        },
                        {
                            "text": "shm_attach",
                            "type": "function",
                            "description": "Start of sysvshm v.",
                            "rightLabel": "$key $memsize $perm"
                        },
                        {
                            "text": "shm_remove",
                            "type": "function",
                            "description": "Removes shared memory from Unix systems Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$shm_identifier"
                        },
                        {
                            "text": "shm_detach",
                            "type": "function",
                            "description": "Disconnects from shared memory segment Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$shm_identifier"
                        },
                        {
                            "text": "shm_put_var",
                            "type": "function",
                            "description": "Inserts or updates a variable in shared memory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$shm_identifier $variable_key $variable"
                        },
                        {
                            "text": "shm_has_var",
                            "type": "function",
                            "description": "Check whether a specific entry exists Since PHP 5.3.0",
                            "leftLabel": "bool",
                            "rightLabel": "$shm_identifier $variable_key"
                        },
                        {
                            "text": "shm_get_var",
                            "type": "function",
                            "description": "Returns a variable from shared memory Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$shm_identifier $variable_key"
                        },
                        {
                            "text": "shm_remove_var",
                            "type": "function",
                            "description": "Removes a variable from shared memory Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$shm_identifier $variable_key"
                        },
                        {
                            "text": "tidy_getopt",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturns the value of the specified configuration option for the tidy document",
                            "leftLabel": "mixed",
                            "rightLabel": "$option"
                        },
                        {
                            "text": "tidy_parse_string",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nParse a document stored in a string",
                            "leftLabel": "bool",
                            "rightLabel": "$input $config $encoding"
                        },
                        {
                            "text": "tidy_parse_file",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nParse markup in file or URI",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $config $encoding $use_include_path"
                        },
                        {
                            "text": "tidy_get_output",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturn a string representing the parsed tidy markup",
                            "leftLabel": "string",
                            "rightLabel": "tidy $object"
                        },
                        {
                            "text": "tidy_get_error_buffer",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturn warnings and errors which occurred parsing the specified document",
                            "leftLabel": "mixed"
                        },
                        {
                            "text": "tidy_clean_repair",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nExecute configured cleanup and repair operations on parsed markup",
                            "leftLabel": "bool",
                            "rightLabel": "tidy $object"
                        },
                        {
                            "text": "tidy_repair_string",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.7.0)\nRepair a string using an optionally provided configuration file",
                            "leftLabel": "string",
                            "rightLabel": "$data $config $encoding"
                        },
                        {
                            "text": "tidy_repair_file",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.7.0)\nRepair a file and return it as a string",
                            "leftLabel": "string",
                            "rightLabel": "$filename $config $encoding $use_include_path"
                        },
                        {
                            "text": "tidy_diagnose",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nRun configured diagnostics on parsed and repaired markup",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "tidy_get_release",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nGet release date (version) for Tidy library",
                            "leftLabel": "string"
                        },
                        {
                            "text": "tidy_get_config",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.7.0)\nGet current Tidy configuration",
                            "leftLabel": "array"
                        },
                        {
                            "text": "tidy_get_status",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nGet status of specified document",
                            "leftLabel": "int"
                        },
                        {
                            "text": "tidy_get_html_ver",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nGet the Detected HTML version for the specified document",
                            "leftLabel": "int"
                        },
                        {
                            "text": "tidy_is_xhtml",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nIndicates if the document is a XHTML document",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "tidy_is_xml",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nIndicates if the document is a generic (non HTML\/XHTML) XML document",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "tidy_error_count",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturns the Number of Tidy errors encountered for specified document",
                            "leftLabel": "int",
                            "rightLabel": "tidy $object"
                        },
                        {
                            "text": "tidy_warning_count",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturns the Number of Tidy warnings encountered for specified document",
                            "leftLabel": "int",
                            "rightLabel": "tidy $object"
                        },
                        {
                            "text": "tidy_access_count",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturns the Number of Tidy accessibility warnings encountered for specified document",
                            "leftLabel": "int",
                            "rightLabel": "tidy $object"
                        },
                        {
                            "text": "tidy_config_count",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy >= 0.5.2)\nReturns the Number of Tidy configuration errors encountered for specified document",
                            "leftLabel": "int",
                            "rightLabel": "tidy $object"
                        },
                        {
                            "text": "tidy_get_opt_doc",
                            "type": "function",
                            "description": "Returns the documentation for the given option name Since PHP 5.1.0",
                            "leftLabel": "string",
                            "rightLabel": "$optname"
                        },
                        {
                            "text": "tidy_get_root",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy 0.5.2-1.0.0)\nReturns a tidyNode object representing the root of the tidy parse tree",
                            "leftLabel": "tidyNode"
                        },
                        {
                            "text": "tidy_get_head",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy 0.5.2-1.0.0)\nReturns a tidyNode object starting from the <head> tag of the tidy parse tree",
                            "leftLabel": "tidyNode"
                        },
                        {
                            "text": "tidy_get_html",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy 0.5.2-1.0.0)\nReturns a tidyNode object starting from the <html> tag of the tidy parse tree",
                            "leftLabel": "tidyNode"
                        },
                        {
                            "text": "tidy_get_body",
                            "type": "function",
                            "description": "(PHP 5, PECL tidy 0.5.2-1.0)\nReturns a tidyNode object starting from the <body> tag of the tidy parse tree",
                            "leftLabel": "tidyNode",
                            "rightLabel": "$tidy"
                        },
                        {
                            "text": "ob_tidyhandler",
                            "type": "function",
                            "description": "ob_start callback function to repair the buffer Since PHP 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$input $mode"
                        },
                        {
                            "text": "token_get_all",
                            "type": "function",
                            "description": "Start of tokenizer v.0.1",
                            "rightLabel": "$source"
                        },
                        {
                            "text": "token_name",
                            "type": "function",
                            "description": "Get the symbolic name of a given PHP token Since PHP 4.2.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$token"
                        },
                        {
                            "text": "wddx_serialize_value",
                            "type": "function",
                            "description": "Start of wddx v.",
                            "rightLabel": "$var $comment"
                        },
                        {
                            "text": "wddx_serialize_vars",
                            "type": "function",
                            "description": "Serialize variables into a WDDX packet Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$var_name $_"
                        },
                        {
                            "text": "wddx_packet_start",
                            "type": "function",
                            "description": "Starts a new WDDX packet with structure inside it Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$comment"
                        },
                        {
                            "text": "wddx_packet_end",
                            "type": "function",
                            "description": "Ends a WDDX packet with the specified ID Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$packet_id"
                        },
                        {
                            "text": "wddx_add_vars",
                            "type": "function",
                            "description": "Add variables to a WDDX packet with the specified ID Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$packet_id $var_name $_"
                        },
                        {
                            "text": "wddx_deserialize",
                            "type": "function",
                            "description": "Unserializes a WDDX packet Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$packet"
                        },
                        {
                            "text": "wincache_fcache_fileinfo",
                            "type": "function",
                            "description": "Stubs for WinCache extension by Microsoft (v1.1.0)",
                            "rightLabel": "$summaryonly"
                        },
                        {
                            "text": "wincache_fcache_meminfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.0.0)\nRetrieves information about memory usage by file cache.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "wincache_lock",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nObtains an exclusive lock on a given key.",
                            "leftLabel": "boolean",
                            "rightLabel": "$key $isglobal"
                        },
                        {
                            "text": "wincache_ocache_fileinfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.0.0)\nRetrieves information about opcode cache content and its usage",
                            "leftLabel": "array",
                            "rightLabel": "$summaryonly"
                        },
                        {
                            "text": "wincache_ocache_meminfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.0.0)\nRetrieves information about memory usage by opcode cache.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "wincache_refresh_if_changed",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.0.0)\nRefreshes the cache entries for the files, whose names were passed in the input argument.",
                            "leftLabel": "boolean",
                            "rightLabel": "array $files"
                        },
                        {
                            "text": "wincache_rplist_fileinfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.0.0)\nRetrieves information about cached mappings between relative file paths and\ncorresponding absolute file paths.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "wincache_rplist_meminfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.0.0)\nRetrieves information about memory usage by resolve file path cache.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "wincache_scache_info",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nRetrieves information about session cache content and its usage.",
                            "leftLabel": "array",
                            "rightLabel": "$summaryonly"
                        },
                        {
                            "text": "wincache_scache_meminfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nRetrieves information about memory usage by session cache.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "wincache_ucache_add",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nAdds a variable in user cache, only if this variable doesn't already exist in the cache.",
                            "leftLabel": "boolean",
                            "rightLabel": "$key $value $ttl"
                        },
                        {
                            "text": "wincache_ucache_cas",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nCompares the variable associated with the key with old_value\nand if it matches then assigns the new_value to it.",
                            "leftLabel": "boolean",
                            "rightLabel": "$key $old_value $new_value"
                        },
                        {
                            "text": "wincache_ucache_clear",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nClears\/deletes all the values stored in the user cache.",
                            "leftLabel": "boolean"
                        },
                        {
                            "text": "wincache_ucache_dec",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nDecrements the value associated with the key by 1 or as specified by dec_by.",
                            "leftLabel": "int",
                            "rightLabel": "$key $dec_by $success"
                        },
                        {
                            "text": "wincache_ucache_delete",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nDeletes the elements in the user cache pointed by key.",
                            "leftLabel": "boolean",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "wincache_ucache_exists",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nChecks if a variable with the key exists in the user cache or not.",
                            "leftLabel": "boolean",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "wincache_ucache_get",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nGets a variable stored in the user cache.",
                            "leftLabel": "mixed",
                            "rightLabel": "$key $success"
                        },
                        {
                            "text": "wincache_ucache_inc",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nIncrements the value associated with the key by 1 or as specified by inc_by.",
                            "leftLabel": "int",
                            "rightLabel": "$key $inc_by $success"
                        },
                        {
                            "text": "wincache_ucache_info",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nRetrieves information about data stored in the user cache.",
                            "leftLabel": "array",
                            "rightLabel": "$summaryonly $key"
                        },
                        {
                            "text": "wincache_ucache_meminfo",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nRetrieves information about memory usage by user cache.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "wincache_ucache_set",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nAdds a variable in user cache and overwrites a variable if it already exists in the cache.",
                            "leftLabel": "boolean<p>",
                            "rightLabel": "$key $value $ttl"
                        },
                        {
                            "text": "wincache_unlock",
                            "type": "function",
                            "description": "(PHP 5.2+; PECL wincache >= 1.1.0)\nReleases an exclusive lock that was obtained on a given key by using wincache_lock().",
                            "leftLabel": "boolean",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "xcache_get",
                            "type": "function",
                            "description": "Common Used Functions",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xcache_set",
                            "type": "function",
                            "description": "Store data to cache by specified name",
                            "leftLabel": "bool",
                            "rightLabel": "$name $value $ttl"
                        },
                        {
                            "text": "xcache_isset",
                            "type": "function",
                            "description": "Check if an entry exists in cache by specified name",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xcache_unset",
                            "type": "function",
                            "description": "Unset existing data in cache by specified name",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xcache_unset_by_prefix",
                            "type": "function",
                            "description": "Unset existing data in cache by specified prefix",
                            "leftLabel": "bool",
                            "rightLabel": "$prefix"
                        },
                        {
                            "text": "xcache_inc",
                            "type": "function",
                            "description": "Increase an int counter in cache by specified name, create it if not exists",
                            "leftLabel": "int",
                            "rightLabel": "$name $value $ttl"
                        },
                        {
                            "text": "xcache_dec",
                            "type": "function",
                            "description": "Decrease an int counter in cache by specified name, create it if not exists",
                            "leftLabel": "int",
                            "rightLabel": "$name $value $ttl"
                        },
                        {
                            "text": "xcache_count",
                            "type": "function",
                            "description": "Administrator Functions",
                            "rightLabel": "$type"
                        },
                        {
                            "text": "xcache_info",
                            "type": "function",
                            "description": "Get cache info by id on specified cache type",
                            "leftLabel": "array",
                            "rightLabel": "$type $id"
                        },
                        {
                            "text": "xcache_list",
                            "type": "function",
                            "description": "Get cache entries list by id on specified cache type",
                            "leftLabel": "array",
                            "rightLabel": "$type $id"
                        },
                        {
                            "text": "xcache_clear_cache",
                            "type": "function",
                            "description": "Clear cache by id on specified cache type",
                            "leftLabel": "void",
                            "rightLabel": "$type $id"
                        },
                        {
                            "text": "xcache_coredump",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$op_type"
                        },
                        {
                            "text": "xcache_coverager_decode",
                            "type": "function",
                            "description": "Coverager Functions",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "xcache_coverager_start",
                            "type": "function",
                            "leftLabel": "void",
                            "rightLabel": "$clean"
                        },
                        {
                            "text": "xcache_coverager_stop",
                            "type": "function",
                            "leftLabel": "void",
                            "rightLabel": "$clean"
                        },
                        {
                            "text": "xcache_coverager_get",
                            "type": "function",
                            "leftLabel": "array",
                            "rightLabel": "$clean"
                        },
                        {
                            "text": "xcache_asm",
                            "type": "function",
                            "description": "Opcode Functions",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "xcache_dasm_file",
                            "type": "function",
                            "description": "Disassemble file into opcode array by filename",
                            "leftLabel": "string",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "xcache_dasm_string",
                            "type": "function",
                            "description": "Disassemble php code into opcode array",
                            "leftLabel": "string",
                            "rightLabel": "$code"
                        },
                        {
                            "text": "xcache_encode",
                            "type": "function",
                            "description": "Encode php file into XCache opcode encoded format",
                            "leftLabel": "string",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "xcache_decode",
                            "type": "function",
                            "description": "Decode(load) opcode from XCache encoded format file",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "xcache_get_op_type",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$op_type"
                        },
                        {
                            "text": "xcache_get_data_type",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$type"
                        },
                        {
                            "text": "xcache_get_opcode",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$opcode"
                        },
                        {
                            "text": "xcache_get_op_spec",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$op_type"
                        },
                        {
                            "text": "xcache_get_opcode_spec",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$opcode"
                        },
                        {
                            "text": "xcache_is_autoglobal",
                            "type": "function",
                            "leftLabel": "string",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xhprof_enable",
                            "type": "function",
                            "description": "Start of xhprof v.0.9.4",
                            "rightLabel": "$flags array $options"
                        },
                        {
                            "text": "xhprof_disable",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL xhprof >= 0.9.0)\nStops the profiler, and returns xhprof data from the run.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "xhprof_sample_enable",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL xhprof >= 0.9.0)\nStarts profiling in sample mode, which is a lighter weight version of {@see xhprof_enable()}. The sampling interval\nis 0.1 seconds, and samples record the full function call stack. The main use case is when lower overhead is\nrequired when doing performance monitoring and diagnostics.",
                            "leftLabel": "null"
                        },
                        {
                            "text": "xhprof_sample_disable",
                            "type": "function",
                            "description": "(PHP >= 5.2.0, PECL xhprof >= 0.9.0)\nStops the sample mode xhprof profiler, and returns xhprof data from the run.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "xml_parser_create",
                            "type": "function",
                            "description": "Start of xml v.",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "xml_parser_create_ns",
                            "type": "function",
                            "description": "Create an XML parser with namespace support Since PHP 4.0.5 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$encoding $separator"
                        },
                        {
                            "text": "xml_set_object",
                            "type": "function",
                            "description": "Use XML Parser within an object Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser $object"
                        },
                        {
                            "text": "xml_set_element_handler",
                            "type": "function",
                            "description": "Set up start and end element handlers Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $start_element_handler callable $end_element_handler"
                        },
                        {
                            "text": "xml_set_character_data_handler",
                            "type": "function",
                            "description": "Set up character data handler Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_processing_instruction_handler",
                            "type": "function",
                            "description": "Set up processing instruction (PI) handler Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_default_handler",
                            "type": "function",
                            "description": "Set up default handler Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_unparsed_entity_decl_handler",
                            "type": "function",
                            "description": "Set up unparsed entity declaration handler Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_notation_decl_handler",
                            "type": "function",
                            "description": "Set up notation declaration handler Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_external_entity_ref_handler",
                            "type": "function",
                            "description": "Set up external entity reference handler Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_start_namespace_decl_handler",
                            "type": "function",
                            "description": "Set up start namespace declaration handler Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_set_end_namespace_decl_handler",
                            "type": "function",
                            "description": "Set up end namespace declaration handler Since PHP 4.0.5 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser callable $handler"
                        },
                        {
                            "text": "xml_parse",
                            "type": "function",
                            "description": "Start parsing an XML document Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$parser $data $is_final"
                        },
                        {
                            "text": "xml_parse_into_struct",
                            "type": "function",
                            "description": "Parse XML data into an array structure Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$parser $data array $values array $index"
                        },
                        {
                            "text": "xml_get_error_code",
                            "type": "function",
                            "description": "Get XML parser error code Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$parser"
                        },
                        {
                            "text": "xml_error_string",
                            "type": "function",
                            "description": "Get XML parser error string Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$code"
                        },
                        {
                            "text": "xml_get_current_line_number",
                            "type": "function",
                            "description": "Get current line number for an XML parser Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$parser"
                        },
                        {
                            "text": "xml_get_current_column_number",
                            "type": "function",
                            "description": "Get current column number for an XML parser Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$parser"
                        },
                        {
                            "text": "xml_get_current_byte_index",
                            "type": "function",
                            "description": "Get current byte index for an XML parser Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$parser"
                        },
                        {
                            "text": "xml_parser_free",
                            "type": "function",
                            "description": "Free an XML parser Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser"
                        },
                        {
                            "text": "xml_parser_set_option",
                            "type": "function",
                            "description": "Set options in an XML parser Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$parser $option $value"
                        },
                        {
                            "text": "xml_parser_get_option",
                            "type": "function",
                            "description": "Get options from an XML parser Since PHP 4.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$parser $option"
                        },
                        {
                            "text": "utf8_encode",
                            "type": "function",
                            "description": "Encodes an ISO-8859-1 string to UTF-8 Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "utf8_decode",
                            "type": "function",
                            "description": "Converts a string with ISO-8859-1 characters encoded with UTF-8 Since PHP 4.0 5.0\nto single-byte ISO-8859-1",
                            "leftLabel": "string",
                            "rightLabel": "$data"
                        },
                        {
                            "text": "xmlrpc_encode",
                            "type": "function",
                            "description": "Start of xmlrpc v.0.51",
                            "rightLabel": "$value"
                        },
                        {
                            "text": "xmlrpc_decode",
                            "type": "function",
                            "description": "Decodes XML into native PHP types Since PHP 4.1.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$xml $encoding"
                        },
                        {
                            "text": "xmlrpc_decode_request",
                            "type": "function",
                            "description": "Decodes XML into native PHP types Since PHP 4.1.0 5.0",
                            "leftLabel": "mixed",
                            "rightLabel": "$xml $method $encoding"
                        },
                        {
                            "text": "xmlrpc_encode_request",
                            "type": "function",
                            "description": "Generates XML for a method request Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$method $params array $output_options"
                        },
                        {
                            "text": "xmlrpc_get_type",
                            "type": "function",
                            "description": "Gets xmlrpc type for a PHP value Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$value"
                        },
                        {
                            "text": "xmlrpc_set_type",
                            "type": "function",
                            "description": "Sets xmlrpc type, base64 or datetime, for a PHP string value Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$value $type"
                        },
                        {
                            "text": "xmlrpc_is_fault",
                            "type": "function",
                            "description": "Determines if an array value represents an XMLRPC fault Since PHP 4.3.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "array $arg"
                        },
                        {
                            "text": "xmlrpc_server_create",
                            "type": "function",
                            "description": "Creates an xmlrpc server Since PHP 4.1.0 5.0",
                            "leftLabel": "resource"
                        },
                        {
                            "text": "xmlrpc_server_destroy",
                            "type": "function",
                            "description": "Destroys server resources Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$server"
                        },
                        {
                            "text": "xmlrpc_server_register_method",
                            "type": "function",
                            "description": "Register a PHP function to resource method matching method_name Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$server $method_name $function"
                        },
                        {
                            "text": "xmlrpc_server_call_method",
                            "type": "function",
                            "description": "Parses XML requests and call methods Since PHP 4.1.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$server $xml $user_data array $output_options"
                        },
                        {
                            "text": "xmlrpc_parse_method_descriptions",
                            "type": "function",
                            "description": "Decodes XML into a list of method descriptions Since PHP 4.1.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$xml"
                        },
                        {
                            "text": "xmlrpc_server_add_introspection_data",
                            "type": "function",
                            "description": "Adds introspection documentation Since PHP 4.1.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$server array $desc"
                        },
                        {
                            "text": "xmlrpc_server_register_introspection_callback",
                            "type": "function",
                            "description": "Register a PHP function to generate documentation Since PHP 4.1.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$server $function"
                        },
                        {
                            "text": "xmlwriter_open_uri",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate new xmlwriter using source uri for output",
                            "leftLabel": "bool",
                            "rightLabel": "$uri"
                        },
                        {
                            "text": "xmlwriter_open_memory",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate new xmlwriter using memory for string output",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "xmlwriter_set_indent",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nToggle indentation on\/off",
                            "leftLabel": "bool",
                            "rightLabel": "$indent"
                        },
                        {
                            "text": "xmlwriter_set_indent_string",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nSet string used for indenting",
                            "leftLabel": "bool",
                            "rightLabel": "$indentString"
                        },
                        {
                            "text": "xmlwriter_start_comment",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)\nCreate start comment",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_end_comment",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)\nCreate end comment",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_start_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start attribute",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xmlwriter_end_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd attribute",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_attribute",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full attribute",
                            "leftLabel": "bool",
                            "rightLabel": "$name $value"
                        },
                        {
                            "text": "xmlwriter_start_attribute_ns",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start namespaced attribute",
                            "leftLabel": "bool",
                            "rightLabel": "$prefix $name $uri"
                        },
                        {
                            "text": "xmlwriter_write_attribute_ns",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full namespaced attribute",
                            "leftLabel": "bool",
                            "rightLabel": "$prefix $name $uri $content"
                        },
                        {
                            "text": "xmlwriter_start_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start element tag",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xmlwriter_end_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current element",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_full_end_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)\nEnd current element",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_start_element_ns",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start namespaced element tag",
                            "leftLabel": "bool",
                            "rightLabel": "$prefix $name $uri"
                        },
                        {
                            "text": "xmlwriter_write_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full element tag",
                            "leftLabel": "bool",
                            "rightLabel": "$name $content"
                        },
                        {
                            "text": "xmlwriter_write_element_ns",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full namespaced element tag",
                            "leftLabel": "bool",
                            "rightLabel": "$prefix $name $uri $content"
                        },
                        {
                            "text": "xmlwriter_start_pi",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start PI tag",
                            "leftLabel": "bool",
                            "rightLabel": "$target"
                        },
                        {
                            "text": "xmlwriter_end_pi",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current PI",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_pi",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrites a PI",
                            "leftLabel": "bool",
                            "rightLabel": "$target $content"
                        },
                        {
                            "text": "xmlwriter_start_cdata",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start CDATA tag",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_end_cdata",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current CDATA",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_cdata",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full CDATA tag",
                            "leftLabel": "bool",
                            "rightLabel": "$content"
                        },
                        {
                            "text": "xmlwriter_text",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite text",
                            "leftLabel": "bool",
                            "rightLabel": "$content"
                        },
                        {
                            "text": "xmlwriter_write_raw",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)\nWrite a raw XML text",
                            "leftLabel": "bool",
                            "rightLabel": "$content"
                        },
                        {
                            "text": "xmlwriter_start_document",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate document tag",
                            "leftLabel": "bool",
                            "rightLabel": "$version $encoding $standalone"
                        },
                        {
                            "text": "xmlwriter_end_document",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current document",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_comment",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full comment tag",
                            "leftLabel": "bool",
                            "rightLabel": "$content"
                        },
                        {
                            "text": "xmlwriter_start_dtd",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start DTD tag",
                            "leftLabel": "bool",
                            "rightLabel": "$qualifiedName $publicId $systemId"
                        },
                        {
                            "text": "xmlwriter_end_dtd",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current DTD",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_dtd",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full DTD tag",
                            "leftLabel": "bool",
                            "rightLabel": "$name $publicId $systemId $subset"
                        },
                        {
                            "text": "xmlwriter_start_dtd_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start DTD element",
                            "leftLabel": "bool",
                            "rightLabel": "$qualifiedName"
                        },
                        {
                            "text": "xmlwriter_end_dtd_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current DTD element",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_dtd_element",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full DTD element tag",
                            "leftLabel": "bool",
                            "rightLabel": "$name $content"
                        },
                        {
                            "text": "xmlwriter_start_dtd_attlist",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start DTD AttList",
                            "leftLabel": "bool",
                            "rightLabel": "$name"
                        },
                        {
                            "text": "xmlwriter_end_dtd_attlist",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current DTD AttList",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_dtd_attlist",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full DTD AttList tag",
                            "leftLabel": "bool",
                            "rightLabel": "$name $content"
                        },
                        {
                            "text": "xmlwriter_start_dtd_entity",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nCreate start DTD Entity",
                            "leftLabel": "bool",
                            "rightLabel": "$name $isparam"
                        },
                        {
                            "text": "xmlwriter_end_dtd_entity",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nEnd current DTD Entity",
                            "leftLabel": "bool",
                            "rightLabel": "$xmlwriter"
                        },
                        {
                            "text": "xmlwriter_write_dtd_entity",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nWrite full DTD Entity tag",
                            "leftLabel": "bool",
                            "rightLabel": "$name $content $pe $pubid $sysid $ndataid"
                        },
                        {
                            "text": "xmlwriter_output_memory",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)\nReturns current buffer",
                            "leftLabel": "string",
                            "rightLabel": "$flush"
                        },
                        {
                            "text": "xmlwriter_flush",
                            "type": "function",
                            "description": "(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)\nFlush current buffer",
                            "leftLabel": "mixed",
                            "rightLabel": "$empty"
                        },
                        {
                            "text": "yaml_emit_file",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL yaml >= 0.5.0)\nSend the YAML representation of a value to a file",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $data $encoding $linebreak $callbacks"
                        },
                        {
                            "text": "yaml_parse_file",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL yaml >= 0.4.0)\nParse a YAML stream from a file",
                            "leftLabel": "mixed",
                            "rightLabel": "$filename $pos $ndocs $callbacks"
                        },
                        {
                            "text": "yaml_parse_url",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL yaml >= 0.4.0)\nParse a Yaml stream from a URL",
                            "leftLabel": "mixed",
                            "rightLabel": "$url $pos $ndocs $callbacks"
                        },
                        {
                            "text": "yaml_parse",
                            "type": "function",
                            "description": "(PHP 5 >= 5.2.0, PECL yaml >= 0.4.0)\nParse a YAML stream",
                            "leftLabel": "mixed",
                            "rightLabel": "$input $pos $ndocs $callbacks"
                        },
                        {
                            "text": "accelerator_set_status",
                            "type": "function",
                            "description": "Disable\/enable the Code Acceleration functionality at run time.",
                            "leftLabel": "void",
                            "rightLabel": "$status"
                        },
                        {
                            "text": "output_cache_disable",
                            "type": "function",
                            "description": "Disables output caching for currently running scripts.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "output_cache_disable_compression",
                            "type": "function",
                            "description": "Does not allow the cache to perform compression on the output of the current page.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "output_cache_fetch",
                            "type": "function",
                            "description": "Gets the code\u2019s return value from the cache if it is there, if not - run function and cache the value.",
                            "leftLabel": "string",
                            "rightLabel": "$key $function $lifetime"
                        },
                        {
                            "text": "output_cache_output",
                            "type": "function",
                            "description": "If they cache for the key exists, output it, otherwise capture expression output, cache and pass it out.",
                            "leftLabel": "expression",
                            "rightLabel": "$key $function $lifetime"
                        },
                        {
                            "text": "output_cache_remove",
                            "type": "function",
                            "description": "Removes all the cache data for the given filename.",
                            "leftLabel": "bool",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "output_cache_remove_url",
                            "type": "function",
                            "description": "Remove cache data for the script with given URL (all dependent data is removed)",
                            "leftLabel": "bool",
                            "rightLabel": "$url"
                        },
                        {
                            "text": "output_cache_remove_key",
                            "type": "function",
                            "description": "Remove item from PHP API cache by key",
                            "leftLabel": "bool",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "output_cache_put",
                            "type": "function",
                            "description": "Puts data in cache according to the assigned key.",
                            "leftLabel": "bool",
                            "rightLabel": "$key $data"
                        },
                        {
                            "text": "output_cache_get",
                            "type": "function",
                            "description": "Gets cached data according to the assigned key.",
                            "leftLabel": "mixed",
                            "rightLabel": "$key $lifetime"
                        },
                        {
                            "text": "output_cache_exists",
                            "type": "function",
                            "description": "If data for assigned key exists, this function outputs it and returns a value of true.",
                            "leftLabel": "bool",
                            "rightLabel": "$key $lifetime"
                        },
                        {
                            "text": "output_cache_stop",
                            "type": "function",
                            "description": "If output was captured by output_cache_exists, this function stops the output capture and stores\nthe data under the key that was given to output_cache_exists().",
                            "leftLabel": "void"
                        },
                        {
                            "text": "monitor_pass_error",
                            "type": "function",
                            "description": "Should be called from a custom error handler to pass the error to the monitor.",
                            "leftLabel": "void",
                            "rightLabel": "$errno $errstr $errfile $errline"
                        },
                        {
                            "text": "monitor_set_aggregation_hint",
                            "type": "function",
                            "description": "Limited in the database to 255 chars",
                            "leftLabel": "void",
                            "rightLabel": "$hint"
                        },
                        {
                            "text": "monitor_custom_event",
                            "type": "function",
                            "description": "Creates a custom event with class $class, text $text and possibly severity and other user data",
                            "leftLabel": "void",
                            "rightLabel": "$class $text $severe $user_data"
                        },
                        {
                            "text": "monitor_httperror_event",
                            "type": "function",
                            "description": "Create an HTTPERROR event",
                            "leftLabel": "void",
                            "rightLabel": "$error_code $url $severe"
                        },
                        {
                            "text": "monitor_license_info",
                            "type": "function",
                            "description": "Returns an array containing information about\nmodule loading status (and cause of error if module failed to load)\nmodule license status (and cause of error if license not valid)",
                            "leftLabel": "array"
                        },
                        {
                            "text": "register_event_handler",
                            "type": "function",
                            "description": "Allow you to register a user function as an event handler.When a monitor event is triggerd\nall the user event handler are called and the return value from the handler is saved in\nan array keyed by the name the event handler was registered under. The event handlers\nresults array is saved in the event_extra_data table.",
                            "leftLabel": "bool",
                            "rightLabel": "$event_handler_func $handler_register_name $event_type_mask"
                        },
                        {
                            "text": "unregister_event_handler",
                            "type": "function",
                            "description": "Allow you to unregister an event handler.",
                            "leftLabel": "bool",
                            "rightLabel": "$handler_name"
                        },
                        {
                            "text": "zend_send_file",
                            "type": "function",
                            "description": "Send a file using ZDS",
                            "leftLabel": "bool",
                            "rightLabel": "$filename $mime_type $custom_headers"
                        },
                        {
                            "text": "zend_send_buffer",
                            "type": "function",
                            "description": "Send a buffer using ZDS",
                            "leftLabel": "bool",
                            "rightLabel": "$buffer $mime_type $custom_headers"
                        },
                        {
                            "text": "set_job_failed",
                            "type": "function",
                            "description": "Start of Zend Extensions",
                            "rightLabel": "$error_string"
                        },
                        {
                            "text": "jobqueue_license_info",
                            "type": "function",
                            "description": "returns array containing following fields:\n\"license_ok\" - whether license allows use of JobQueue\n\"expires\" - license expiration date"
                        },
                        {
                            "text": "java",
                            "type": "function",
                            "description": "Create Java object",
                            "leftLabel": "object",
                            "rightLabel": "$class"
                        },
                        {
                            "text": "java_last_exception_get",
                            "type": "function",
                            "description": "Return Java exception object for last exception",
                            "leftLabel": "object"
                        },
                        {
                            "text": "java_last_exception_clear",
                            "type": "function",
                            "description": "Clear last Java exception object record.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "java_set_ignore_case",
                            "type": "function",
                            "description": "Set case sensitivity for Java calls.",
                            "leftLabel": "void",
                            "rightLabel": "$ignore"
                        },
                        {
                            "text": "java_set_encoding",
                            "type": "function",
                            "description": "Set encoding for strings received by Java from PHP. Default is UTF-8.",
                            "leftLabel": "array",
                            "rightLabel": "$encoding"
                        },
                        {
                            "text": "java_throw_exceptions",
                            "type": "function",
                            "description": "Control if exceptions are thrown on Java exception. Only for PHP5.",
                            "leftLabel": "void",
                            "rightLabel": "$throw"
                        },
                        {
                            "text": "java_reload",
                            "type": "function",
                            "description": "Reload Jar's that were dynamically loaded",
                            "leftLabel": "array",
                            "rightLabel": "$new_jarpath"
                        },
                        {
                            "text": "java_require",
                            "type": "function",
                            "description": "Add to Java's classpath in runtime",
                            "leftLabel": "array",
                            "rightLabel": "$new_classpath"
                        },
                        {
                            "text": "zend_loader_enabled",
                            "type": "function",
                            "description": "Shown if loader is enabled",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "zend_loader_file_encoded",
                            "type": "function",
                            "description": "Returns true if the current file is a Zend-encoded file.",
                            "leftLabel": "bool"
                        },
                        {
                            "text": "zend_loader_file_licensed",
                            "type": "function",
                            "description": "Returns license (array with fields) if the current file has a valid license and is encoded, otherwise it returns false.",
                            "leftLabel": "array"
                        },
                        {
                            "text": "zend_loader_current_file",
                            "type": "function",
                            "description": "Returns the name of the file currently being executed.",
                            "leftLabel": "string"
                        },
                        {
                            "text": "zend_loader_install_license",
                            "type": "function",
                            "description": "Dynamically loads a license for applications encoded with Zend SafeGuard. The Override controls if it will override old licenses for the same product.",
                            "leftLabel": "bool",
                            "rightLabel": "$license_file $override"
                        },
                        {
                            "text": "zend_obfuscate_function_name",
                            "type": "function",
                            "description": "Obfuscate and return the given function name with the internal obfuscation function.",
                            "leftLabel": "string",
                            "rightLabel": "$function_name"
                        },
                        {
                            "text": "zend_obfuscate_class_name",
                            "type": "function",
                            "description": "Obfuscate and return the given class name with the internal obfuscation function.",
                            "leftLabel": "string",
                            "rightLabel": "$class_name"
                        },
                        {
                            "text": "zend_current_obfuscation_level",
                            "type": "function",
                            "description": "Returns the current obfuscation level support (set by zend_optimizer.obfuscation_level_support)",
                            "leftLabel": "int"
                        },
                        {
                            "text": "zend_runtime_obfuscate",
                            "type": "function",
                            "description": "Start runtime-obfuscation support that allows limited mixing of obfuscated and un-obfuscated code.",
                            "leftLabel": "void"
                        },
                        {
                            "text": "zend_get_id",
                            "type": "function",
                            "description": "Returns array of the host ids. If all_ids is true, then all IDs are returned, otehrwise only IDs considered \"primary\" are returned.",
                            "leftLabel": "array",
                            "rightLabel": "$all_ids"
                        },
                        {
                            "text": "zend_optimizer_version",
                            "type": "function",
                            "description": "Returns Optimizer version. Alias: zend_loader_version()",
                            "leftLabel": "string"
                        },
                        {
                            "text": "zend_shm_cache_store",
                            "type": "function",
                            "description": "Start of Zend Cache v.",
                            "rightLabel": "$key $value $ttl"
                        },
                        {
                            "text": "zend_shm_cache_fetch",
                            "type": "function",
                            "description": "Retrieves data stored in the Shared Memory Cache.",
                            "leftLabel": "NULL | mixed",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "zend_shm_cache_delete",
                            "type": "function",
                            "description": "Delete a key from the Shared Memory cache",
                            "leftLabel": "NULL | mixed",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "zend_shm_cache_clear",
                            "type": "function",
                            "description": "Clear the entire Shared Memory cache or just the provided namespace.",
                            "leftLabel": "boolean",
                            "rightLabel": "$namespace"
                        },
                        {
                            "text": "zend_disk_cache_store",
                            "type": "function",
                            "description": "Stores a serializable variable into Disk Cache",
                            "leftLabel": "boolean",
                            "rightLabel": "$key $value $ttl"
                        },
                        {
                            "text": "zend_disk_cache_fetch",
                            "type": "function",
                            "description": "Retrieves data stored in the Shared Memory Cache",
                            "leftLabel": "NULL | mixed",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "zend_disk_cache_delete",
                            "type": "function",
                            "description": "Delete a key from the cache",
                            "leftLabel": "NULL | mixed",
                            "rightLabel": "$key"
                        },
                        {
                            "text": "zend_disk_cache_clear",
                            "type": "function",
                            "description": "Clear the entire Disk Memory cache or just the provided namespace.",
                            "leftLabel": "boolean",
                            "rightLabel": "$namespace"
                        },
                        {
                            "text": "debugger_print",
                            "type": "function",
                            "description": "Start of Zend Debugger v."
                        },
                        {
                            "text": "get_call_stack",
                            "type": "function"
                        },
                        {
                            "text": "debugger_start_debug",
                            "type": "function"
                        },
                        {
                            "text": "debugger_connector_pid",
                            "type": "function"
                        },
                        {
                            "text": "debugger_connect",
                            "type": "function"
                        },
                        {
                            "text": "debugger_get_server_start_time",
                            "type": "function"
                        },
                        {
                            "text": "zem_get_extension_info_by_id",
                            "type": "function",
                            "description": "Start of ZendUtils v."
                        },
                        {
                            "text": "zem_get_extension_info_by_name",
                            "type": "function"
                        },
                        {
                            "text": "zem_get_extensions_info",
                            "type": "function"
                        },
                        {
                            "text": "zem_get_license_info",
                            "type": "function"
                        },
                        {
                            "text": "zend_is_configuration_changed",
                            "type": "function"
                        },
                        {
                            "text": "zend_set_configuration_changed",
                            "type": "function"
                        },
                        {
                            "text": "zip_open",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nOpen a ZIP file archive",
                            "leftLabel": "resource",
                            "rightLabel": "$filename"
                        },
                        {
                            "text": "zip_close",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nClose a ZIP file archive",
                            "leftLabel": "void",
                            "rightLabel": "$zip"
                        },
                        {
                            "text": "zip_read",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nRead next entry in a ZIP file archive",
                            "leftLabel": "resource",
                            "rightLabel": "$zip"
                        },
                        {
                            "text": "zip_entry_open",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nOpen a directory entry for reading",
                            "leftLabel": "bool",
                            "rightLabel": "$zip $zip_entry $mode"
                        },
                        {
                            "text": "zip_entry_close",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nClose a directory entry",
                            "leftLabel": "bool",
                            "rightLabel": "$zip_entry"
                        },
                        {
                            "text": "zip_entry_read",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nRead from an open directory entry",
                            "leftLabel": "string",
                            "rightLabel": "$zip_entry $length"
                        },
                        {
                            "text": "zip_entry_filesize",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nRetrieve the actual file size of a directory entry",
                            "leftLabel": "int",
                            "rightLabel": "$zip_entry"
                        },
                        {
                            "text": "zip_entry_name",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nRetrieve the name of a directory entry",
                            "leftLabel": "string",
                            "rightLabel": "$zip_entry"
                        },
                        {
                            "text": "zip_entry_compressedsize",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nRetrieve the compressed size of a directory entry",
                            "leftLabel": "int",
                            "rightLabel": "$zip_entry"
                        },
                        {
                            "text": "zip_entry_compressionmethod",
                            "type": "function",
                            "description": "(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)\nRetrieve the compression method of a directory entry",
                            "leftLabel": "string",
                            "rightLabel": "$zip_entry"
                        },
                        {
                            "text": "readgzfile",
                            "type": "function",
                            "description": "Start of zlib v.2.0",
                            "rightLabel": "$filename $use_include_path"
                        },
                        {
                            "text": "gzrewind",
                            "type": "function",
                            "description": "Rewind the position of a gz-file pointer Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$zp"
                        },
                        {
                            "text": "gzclose",
                            "type": "function",
                            "description": "Close an open gz-file pointer Since PHP 4.0 5.0",
                            "leftLabel": "bool",
                            "rightLabel": "$zp"
                        },
                        {
                            "text": "gzeof",
                            "type": "function",
                            "description": "Test for EOF on a gz-file pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$zp"
                        },
                        {
                            "text": "gzgetc",
                            "type": "function",
                            "description": "Get character from gz-file pointer Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$zp"
                        },
                        {
                            "text": "gzgets",
                            "type": "function",
                            "description": "Get line from file pointer Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$zp $length"
                        },
                        {
                            "text": "gzgetss",
                            "type": "function",
                            "description": "Get line from gz-file pointer and strip HTML tags Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$zp $length $allowable_tags"
                        },
                        {
                            "text": "gzread",
                            "type": "function",
                            "description": "Binary-safe gz-file read Since PHP 4.0 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$zp $length"
                        },
                        {
                            "text": "gzopen",
                            "type": "function",
                            "description": "Open gz-file Since PHP 4.0 5.0",
                            "leftLabel": "resource",
                            "rightLabel": "$filename $mode $use_include_path"
                        },
                        {
                            "text": "gzpassthru",
                            "type": "function",
                            "description": "Output all remaining data on a gz-file pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$zp"
                        },
                        {
                            "text": "gzseek",
                            "type": "function",
                            "description": "Seek on a gz-file pointer Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$zp $offset $whence"
                        },
                        {
                            "text": "gztell",
                            "type": "function",
                            "description": "Tell gz-file pointer read\/write position Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$zp"
                        },
                        {
                            "text": "gzwrite",
                            "type": "function",
                            "description": "Binary-safe gz-file write Since PHP 4.0 5.0",
                            "leftLabel": "int",
                            "rightLabel": "$zp $string $length"
                        },
                        {
                            "text": "gzputs",
                            "type": "function",
                            "description": "Alias of gzwrite Since PHP 4.0 5.0",
                            "rightLabel": "$fp $str $length"
                        },
                        {
                            "text": "gzfile",
                            "type": "function",
                            "description": "Read entire gz-file into an array Since PHP 4.0 5.0",
                            "leftLabel": "array",
                            "rightLabel": "$filename $use_include_path"
                        },
                        {
                            "text": "gzcompress",
                            "type": "function",
                            "description": "Compress a string Since PHP 4.0.1 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $level $encoding"
                        },
                        {
                            "text": "gzuncompress",
                            "type": "function",
                            "description": "Uncompress a compressed string Since PHP 4.0.1 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $length"
                        },
                        {
                            "text": "gzdeflate",
                            "type": "function",
                            "description": "Deflate a string Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $level $encoding"
                        },
                        {
                            "text": "gzinflate",
                            "type": "function",
                            "description": "Inflate a deflated string Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $length"
                        },
                        {
                            "text": "gzencode",
                            "type": "function",
                            "description": "Create a gzip compressed string Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $level $encoding_mode"
                        },
                        {
                            "text": "gzdecode",
                            "type": "function",
                            "description": "Decodes a gzip compressed string Since PHP 5.4.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $length"
                        },
                        {
                            "text": "zlib_encode",
                            "type": "function",
                            "description": "Compress data with the specified encoding Since PHP 5.4.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $encoding $level"
                        },
                        {
                            "text": "zlib_decode",
                            "type": "function",
                            "description": "Uncompress any raw\/gzip\/zlib encoded data Since PHP 5.4.0",
                            "leftLabel": "string",
                            "rightLabel": "$data $max_decoded_len"
                        },
                        {
                            "text": "zlib_get_coding_type",
                            "type": "function",
                            "description": "Returns the coding type used for output compression Since PHP 4.3.2 5.0",
                            "leftLabel": "string"
                        },
                        {
                            "text": "ob_gzhandler",
                            "type": "function",
                            "description": "ob_start callback function to gzip output buffer Since PHP 4.0.4 5.0",
                            "leftLabel": "string",
                            "rightLabel": "$buffer $mode"
                        },
                        {
                            "text": "AMQP_NOPARAM",
                            "description": "Stubs for AMQP https:\/\/pecl.php.net\/package\/amqp https:\/\/github.com\/pdezwart\/php-amqp",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_DURABLE",
                            "description": "Durable exchanges and queues will survive a broker restart, complete with all of their data.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_PASSIVE",
                            "description": "Passive exchanges and queues will not be redeclared, but the broker will throw an error if the exchange or queue does not exist.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_EXCLUSIVE",
                            "description": "Valid for queues only, this flag indicates that only one client can be listening to and consuming from this queue.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_AUTODELETE",
                            "description": "For exchanges, the auto delete flag indicates that the exchange will be deleted as soon as no more queues are bound to it. If no queues were ever bound the exchange, the exchange will never be deleted. For queues, the auto delete flag indicates that the queue will be deleted as soon as there are no more listeners subscribed to it. If no subscription has ever been active, the queue will never be deleted. Note: Exclusive queues will always be automatically deleted with the client disconnects.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_INTERNAL",
                            "description": "Clients are not allowed to make specific queue bindings to exchanges defined with this flag.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_NOLOCAL",
                            "description": "When passed to the consume method for a clustered environment, do not consume from the local node.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_AUTOACK",
                            "description": "When passed to the {@link AMQPQueue::get()} and {@link AMQPQueue::consume()} methods as a flag, the messages will be immediately marked as acknowledged by the server upon delivery.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_IFEMPTY",
                            "description": "Passed on queue creation, this flag indicates that the queue should be deleted if it becomes empty.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_IFUNUSED",
                            "description": "Passed on queue or exchange creation, this flag indicates that the queue or exchange should be deleted when no clients are connected to the given queue or exchange.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_MANDATORY",
                            "description": "When publishing a message, the message must be routed to a valid queue. If it is not, an error will be returned.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_IMMEDIATE",
                            "description": "When publishing a message, mark this message for immediate processing by the broker. (High priority message.)",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_MULTIPLE",
                            "description": "If set during a call to {@link AMQPQueue::ack()}, the delivery tag is treated as \"up to and including\", so that multiple messages can be acknowledged with a single method. If set to zero, the delivery tag refers to a single message.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_NOWAIT",
                            "description": "If set during a call to {@link AMQPExchange::bind()}, the server will not respond to the method.The client should not wait for a reply method. If the server could not complete the method it will raise a channel or connection exception.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_REQUEUE",
                            "description": "If set during a call to {@link AMQPQueue::nack()}, the message will be placed back to the queue.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_EX_TYPE_DIRECT",
                            "leftLabel": "string",
                            "description": "A direct exchange type.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_EX_TYPE_FANOUT",
                            "leftLabel": "string",
                            "description": "A fanout exchange type.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_EX_TYPE_TOPIC",
                            "leftLabel": "string",
                            "description": "A topic exchange type.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_EX_TYPE_HEADERS",
                            "leftLabel": "string",
                            "description": "A header exchange type.",
                            "type": "constant"
                        },
                        {
                            "text": "AMQP_OS_SOCKET_TIMEOUT_ERRNO",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_AMQP_MAX_CHANNELS",
                            "type": "constant"
                        },
                        {
                            "text": "APC_LIST_ACTIVE",
                            "description": "Stubs for APCu 5.0.0",
                            "type": "constant"
                        },
                        {
                            "text": "APC_LIST_DELETED",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_TYPE",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_KEY",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_FILENAME",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_DEVICE",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_INODE",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_VALUE",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_MD5",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_NUM_HITS",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_MTIME",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_CTIME",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_DTIME",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_ATIME",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_REFCOUNT",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_MEM_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_TTL",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "APC_ITER_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "__FILE__",
                            "leftLabel": "string",
                            "description": "The full path and filename of the file. If used inside an include, the name of the included file is returned.",
                            "type": "constant"
                        },
                        {
                            "text": "__LINE__",
                            "description": "The current line number of the file.",
                            "type": "constant"
                        },
                        {
                            "text": "__CLASS__",
                            "leftLabel": "string",
                            "description": "The class name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the class name as it was declared (case-sensitive). In PHP 4 its value is always lowercased. The class name includes the namespace it was declared in (e.g. Foo\\Bar).",
                            "type": "constant"
                        },
                        {
                            "text": "__FUNCTION__",
                            "leftLabel": "string",
                            "description": "The function name. (Added in PHP 4.3.0) As of PHP 5 this constant returns the function name as it was declared (case-sensitive). In PHP 4 its value is always lowercased.",
                            "type": "constant"
                        },
                        {
                            "text": "__METHOD__",
                            "leftLabel": "string",
                            "description": "The class method name. (Added in PHP 5.0.0) The method name is returned as it was declared (case-sensitive).",
                            "type": "constant"
                        },
                        {
                            "text": "__TRAIT__",
                            "leftLabel": "string",
                            "description": "The trait name. (Added in PHP 5.4.0) As of PHP 5.4 this constant returns the trait as it was declared (case-sensitive). The trait name includes the namespace it was declared in (e.g. Foo\\Bar).",
                            "type": "constant"
                        },
                        {
                            "text": "__DIR__",
                            "leftLabel": "string",
                            "description": "The directory of the file. If used inside an include, the directory of the included file is returned. This is equivalent to dirname(__FILE__). This directory name does not have a trailing slash unless it is the root directory.",
                            "type": "constant"
                        },
                        {
                            "text": "__NAMESPACE__",
                            "leftLabel": "string",
                            "description": "The name of the current namespace (case-sensitive). This constant is defined in compile-time (Added in PHP 5.3.0).",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_GREGORIAN",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_JULIAN",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_JEWISH",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_FRENCH",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_NUM_CALS",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_DOW_DAYNO",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_DOW_SHORT",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_DOW_LONG",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_MONTH_GREGORIAN_SHORT",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_MONTH_GREGORIAN_LONG",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_MONTH_JULIAN_SHORT",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_MONTH_JULIAN_LONG",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_MONTH_JEWISH",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_MONTH_FRENCH",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_EASTER_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_EASTER_ROMAN",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_EASTER_ALWAYS_GREGORIAN",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_EASTER_ALWAYS_JULIAN",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_JEWISH_ADD_ALAFIM_GERESH",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_JEWISH_ADD_ALAFIM",
                            "type": "constant"
                        },
                        {
                            "text": "CAL_JEWISH_ADD_GERESHAYIM",
                            "type": "constant"
                        },
                        {
                            "text": "E_ERROR",
                            "description": "Start of Core v.5.3.6-13ubuntu3.2",
                            "type": "constant"
                        },
                        {
                            "text": "E_RECOVERABLE_ERROR",
                            "description": "Catchable fatal error. It indicates that a probably dangerous error occured, but did not leave the Engine in an unstable state. If the error is not caught by a user defined handle (see also <b>set_error_handler<\/b>), the application aborts as it was an <b>E_ERROR<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "E_WARNING",
                            "description": "Run-time warnings (non-fatal errors). Execution of the script is not halted.",
                            "type": "constant"
                        },
                        {
                            "text": "E_PARSE",
                            "description": "Compile-time parse errors. Parse errors should only be generated by the parser.",
                            "type": "constant"
                        },
                        {
                            "text": "E_NOTICE",
                            "description": "Run-time notices. Indicate that the script encountered something that could indicate an error, but could also happen in the normal course of running a script.",
                            "type": "constant"
                        },
                        {
                            "text": "E_STRICT",
                            "description": "Enable to have PHP suggest changes to your code which will ensure the best interoperability and forward compatibility of your code.",
                            "type": "constant"
                        },
                        {
                            "text": "E_DEPRECATED",
                            "description": "Run-time notices. Enable this to receive warnings about code that will not work in future versions.",
                            "type": "constant"
                        },
                        {
                            "text": "E_CORE_ERROR",
                            "description": "Fatal errors that occur during PHP's initial startup. This is like an <b>E_ERROR<\/b>, except it is generated by the core of PHP.",
                            "type": "constant"
                        },
                        {
                            "text": "E_CORE_WARNING",
                            "description": "Warnings (non-fatal errors) that occur during PHP's initial startup.",
                            "type": "constant"
                        },
                        {
                            "text": "E_COMPILE_ERROR",
                            "description": "Fatal compile-time errors. This is like an <b>E_ERROR<\/b>, except it is generated by the Zend Scripting Engine.",
                            "type": "constant"
                        },
                        {
                            "text": "E_COMPILE_WARNING",
                            "description": "Compile-time warnings (non-fatal errors). This is like an <b>E_WARNING<\/b>, except it is generated by the Zend Scripting Engine.",
                            "type": "constant"
                        },
                        {
                            "text": "E_USER_ERROR",
                            "description": "User-generated error message. This is like an <b>E_ERROR<\/b>, except it is generated in PHP code by using the PHP function <b>trigger_error<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "E_USER_WARNING",
                            "description": "User-generated warning message. This is like an <b>E_WARNING<\/b>, except it is generated in PHP code by using the PHP function <b>trigger_error<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "E_USER_NOTICE",
                            "description": "User-generated notice message. This is like an <b>E_NOTICE<\/b>, except it is generated in PHP code by using the PHP function <b>trigger_error<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "E_USER_DEPRECATED",
                            "description": "User-generated warning message. This is like an <b>E_DEPRECATED<\/b>, except it is generated in PHP code by using the PHP function <b>trigger_error<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "E_ALL",
                            "description": "All errors and warnings, as supported, except of level <b>E_STRICT<\/b> prior to PHP 5.4.0.",
                            "type": "constant"
                        },
                        {
                            "text": "DEBUG_BACKTRACE_PROVIDE_OBJECT",
                            "type": "constant"
                        },
                        {
                            "text": "DEBUG_BACKTRACE_IGNORE_ARGS",
                            "type": "constant"
                        },
                        {
                            "text": "S_MEMORY",
                            "type": "constant"
                        },
                        {
                            "text": "S_VARS",
                            "type": "constant"
                        },
                        {
                            "text": "S_FILES",
                            "type": "constant"
                        },
                        {
                            "text": "S_INCLUDE",
                            "type": "constant"
                        },
                        {
                            "text": "S_SQL",
                            "type": "constant"
                        },
                        {
                            "text": "S_EXECUTOR",
                            "type": "constant"
                        },
                        {
                            "text": "S_MAIL",
                            "type": "constant"
                        },
                        {
                            "text": "S_SESSION",
                            "type": "constant"
                        },
                        {
                            "text": "S_MISC",
                            "type": "constant"
                        },
                        {
                            "text": "S_INTERNAL",
                            "type": "constant"
                        },
                        {
                            "text": "S_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_EMERG",
                            "description": "system is unusable",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_ALERT",
                            "description": "action must be taken immediately",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_CRIT",
                            "description": "critical conditions",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_ERR",
                            "description": "error conditions",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_WARNING",
                            "description": "warning conditions",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_NOTICE",
                            "description": "normal, but significant, condition",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_INFO",
                            "description": "informational message",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_DEBUG",
                            "description": "debug-level message",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_KERN",
                            "description": "kernel messages",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_USER",
                            "description": "generic user-level messages",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_MAIL",
                            "description": "mail subsystem",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_DAEMON",
                            "description": "other system daemons",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_AUTH",
                            "description": "security\/authorization messages (use <b>LOG_AUTHPRIV<\/b> instead in systems where that constant is defined)",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_SYSLOG",
                            "description": "messages generated internally by syslogd",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LPR",
                            "description": "line printer subsystem",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_NEWS",
                            "description": "USENET news subsystem",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_UUCP",
                            "description": "UUCP subsystem",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_CRON",
                            "description": "clock daemon (cron and at)",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_AUTHPRIV",
                            "description": "security\/authorization messages (private)",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL0",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL1",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL2",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL3",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL4",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL5",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL6",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_LOCAL7",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_PID",
                            "description": "include PID with each message",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_CONS",
                            "description": "if there is an error while sending data to the system logger, write directly to the system console",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_ODELAY",
                            "description": "(default) delay opening the connection until the first message is logged",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_NDELAY",
                            "description": "open the connection to the logger immediately",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_NOWAIT",
                            "type": "constant"
                        },
                        {
                            "text": "LOG_PERROR",
                            "description": "print log message also to standard error",
                            "type": "constant"
                        },
                        {
                            "text": "true",
                            "leftLabel": "bool",
                            "type": "constant"
                        },
                        {
                            "text": "false",
                            "leftLabel": "bool",
                            "type": "constant"
                        },
                        {
                            "text": "null",
                            "type": "constant"
                        },
                        {
                            "text": "ZEND_THREAD_SAFE",
                            "leftLabel": "bool",
                            "type": "constant"
                        },
                        {
                            "text": "ZEND_DEBUG_BUILD",
                            "leftLabel": "bool",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_BUILD",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_MAJOR",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_MINOR",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_PLATFORM",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_PRODUCTTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_SP_MAJOR",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_SP_MINOR",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_WINDOWS_VERSION_SUITEMASK",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_VERSION",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_MAJOR_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_MINOR_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_RELEASE_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_EXTRA_VERSION",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_VERSION_ID",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_ZTS",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_DEBUG",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OS",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SAPI",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DEFAULT_INCLUDE_PATH",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PEAR_INSTALL_DIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PEAR_EXTENSION_DIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_EXTENSION_DIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_PREFIX",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_BINDIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_LIBDIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_DATADIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SYSCONFDIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_LOCALSTATEDIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_CONFIG_FILE_PATH",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_CONFIG_FILE_SCAN_DIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SHLIB_SUFFIX",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_EOL",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SUHOSIN_PATCH",
                            "type": "constant"
                        },
                        {
                            "text": "SUHOSIN_PATCH_VERSION",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_MAXPATHLEN",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_INT_MAX",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_INT_MIN",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_INT_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "ZEND_MULTIBYTE",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_START",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_CONT",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_END",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_OK",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_INI_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_FORM_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_PARTIAL",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_NO_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_NO_TMP_DIR",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_CANT_WRITE",
                            "type": "constant"
                        },
                        {
                            "text": "UPLOAD_ERR_EXTENSION",
                            "type": "constant"
                        },
                        {
                            "text": "STDIN",
                            "type": "constant"
                        },
                        {
                            "text": "STDOUT",
                            "type": "constant"
                        },
                        {
                            "text": "STDERR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_SUCCESS",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_AUTH_CONTINUE",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_AUTH_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_DELTA_BADVAL",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_E2BIG",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_EBUSY",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_EINTERNAL",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_EINVAL",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_ENOMEM",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_ERANGE",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_ETMPFAIL",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_KEY_EEXISTS",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_KEY_ENOENT",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_DLOPEN_FAILED",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_DLSYM_FAILED",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_NETWORK_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_NOT_MY_VBUCKET",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_NOT_STORED",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_NOT_SUPPORTED",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_UNKNOWN_COMMAND",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_UNKNOWN_HOST",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_PROTOCOL_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_ETIMEDOUT",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_CONNECT_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_BUCKET_ENOENT",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_CLIENT_ENOMEM",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_CLIENT_ETMPFAIL",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_EBADHANDLE",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_SERVER_BUG",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_PLUGIN_VERSION_MISMATCH",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_INVALID_HOST_FORMAT",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_INVALID_CHAR",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_DURABILITY_ETOOMANY",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_DUPLICATE_COMMANDS",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_NO_MATCHING_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_BAD_ENVIRONMENT",
                            "type": "constant"
                        },
                        {
                            "text": "COUCHBASE_VALUE_F_JSON",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_NUM",
                            "description": "Columns are returned into the array having a numerical index to the fields. This index starts with 0, the first field in the result.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_ASSOC",
                            "description": "Columns are returned into the array having the fieldname as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_BOTH",
                            "description": "Columns are returned into the array having both a numerical index and the fieldname as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_OBJECT",
                            "description": "Get query result as an object.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_INCLUDE_OID",
                            "description": "Determine whether to get OID during query execution.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_ASYNC",
                            "description": "Execute the query in asynchronous mode.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_EXEC_QUERY_ALL",
                            "description": "Execute the query in synchronous mode.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_CURSOR_SUCCESS",
                            "description": "Returned value of cubrid_move_cursor() function in case of success.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_NO_MORE_DATA",
                            "description": "Returned value of cubrid_move_cursor() function in case of failure.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_CURSOR_ERROR",
                            "description": "Returned value of cubrid_move_cursor() function in case of failure.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_AUTOCOMMIT_TRUE",
                            "description": "Enable the auto-commit mode.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_AUTOCOMMIT_FALSE",
                            "description": "Disable the auto-commit mode.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_CURSOR_FIRST",
                            "description": "Move current cursor to the first position in the result.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_CURSOR_CURRENT",
                            "description": "Move current cursor as a default value if the origin is not specified.",
                            "type": "constant"
                        },
                        {
                            "text": "CUBRID_CURSOR_LAST",
                            "description": "Move current cursor to the last position in the result.",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSH_AUTH_TYPES",
                            "description": "TODO: copy proper descriptions for all constants from http:\/\/us.php.net\/manual\/en\/function.curl-setopt.php",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CONNECT_ONLY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_REDIRECT_URL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_PRIMARY_IP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_PRIMARY_PORT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_LOCAL_IP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_LOCAL_PORT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SHARE",
                            "description": "A result of {@see curl_share_init()}. Makes the cURL handle to use the data from the shared handle.",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_IPRESOLVE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_IPRESOLVE_WHATEVER",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_IPRESOLVE_V4",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_IPRESOLVE_V6",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_DNS_USE_GLOBAL_CACHE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_DNS_CACHE_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PORT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_READDATA",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_INFILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_INFILESIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_URL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_VERBOSE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HEADER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTPHEADER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_NOPROGRESS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROGRESSFUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_NOBODY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FAILONERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_UPLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_POST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTPLISTONLY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTPAPPEND",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_NETRC",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CERTINFO",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTPASCII",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_MUTE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROTOCOLS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_REDIR_PROTOCOLS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_MAX_RECV_SPEED_LARGE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_MAX_SEND_SPEED_LARGE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PASSWDFUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FOLLOWLOCATION",
                            "description": "This constant is not available when open_basedir or safe_mode are enabled.",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PUT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_USERPWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXYUSERPWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_RANGE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_TIMEOUT_MS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_POSTFIELDS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_REFERER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSH_PUBLIC_KEYFILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSH_PRIVATE_KEYFILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_USERAGENT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTPPORT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTP_USE_EPSV",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_LOW_SPEED_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_LOW_SPEED_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_RESUME_FROM",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_COOKIE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_COOKIESESSION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_AUTOREFERER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLCERT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLCERTPASSWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_WRITEHEADER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_VERIFYHOST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_COOKIEFILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLVERSION",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_TLSv1",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_SSLv2",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_SSLv3",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_TLSv1_0",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_TLSv1_1",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_SSLVERSION_TLSv1_2",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_TIMECONDITION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_TIMEVALUE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CUSTOMREQUEST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_STDERR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_TRANSFERTEXT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_RETURNTRANSFER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_QUOTE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_POSTQUOTE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_INTERFACE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_KRB4LEVEL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTPPROXYTUNNEL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FILETIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_WRITEFUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_READFUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HEADERFUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_MAXREDIRS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_MAXCONNECTS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CLOSEPOLICY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FRESH_CONNECT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FORBID_REUSE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_RANDOM_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_EGDSOCKET",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CONNECTTIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CONNECTTIMEOUT_MS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_VERIFYPEER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CAINFO",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CAPATH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_COOKIEJAR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_CIPHER_LIST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_BINARYTRANSFER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_NOSIGNAL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXYTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_BUFFERSIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTPGET",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTP_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLKEY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLKEYTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLKEYPASSWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLENGINE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLENGINE_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSLCERTTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_CRLF",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXYPORT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_UNRESTRICTED_AUTH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTP_USE_EPRT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_TCP_NODELAY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTP200ALIASES",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_TIMECOND_IFMODSINCE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_TIMECOND_IFUNMODSINCE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_TIMECOND_LASTMOD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTPAUTH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_BASIC",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_DIGEST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_GSSNEGOTIATE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_NTLM",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_ANY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_ANYSAFE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXYAUTH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTP_CREATE_MISSING_DIRS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PRIVATE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_RESPONSE_CODE",
                            "description": "The last response code",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_HTTP_CONNECTCODE",
                            "description": "The CONNECT response code",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_HTTPAUTH_AVAIL",
                            "description": "Bitmask indicating the authentication method(s) available according to the previous response",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_PROXYAUTH_AVAIL",
                            "description": "Bitmask indicating the proxy authentication method(s) available according to the previous response",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_OS_ERRNO",
                            "description": "Errno from a connect failure. The number is OS and system specific.",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_NUM_CONNECTS",
                            "description": "Number of connections curl had to create to achieve the previous transfer",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_SSL_ENGINES",
                            "description": "OpenSSL crypto-engines supported",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_COOKIELIST",
                            "description": "All known cookies",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_FTP_ENTRY_PATH",
                            "description": "Entry path in FTP server",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_APPCONNECT_TIME",
                            "description": "Time in seconds it took from the start until the SSL\/SSH connect\/handshake to the remote host was completed",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_CERTINFO",
                            "description": "TLS certificate chain",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_CONDITION_UNMET",
                            "description": "Info on unmet time conditional",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_RTSP_CLIENT_CSEQ",
                            "description": "Next RTSP client CSeq",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_RTSP_CSEQ_RECV",
                            "description": "Recently received CSeq",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_RTSP_SERVER_CSEQ",
                            "description": "Next RTSP server CSeq",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_RTSP_SESSION_ID",
                            "description": "RTSP session ID",
                            "type": "constant"
                        },
                        {
                            "text": "CURLCLOSEPOLICY_LEAST_RECENTLY_USED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLCLOSEPOLICY_LEAST_TRAFFIC",
                            "type": "constant"
                        },
                        {
                            "text": "CURLCLOSEPOLICY_SLOWEST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLCLOSEPOLICY_CALLBACK",
                            "type": "constant"
                        },
                        {
                            "text": "CURLCLOSEPOLICY_OLDEST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_EFFECTIVE_URL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_HTTP_CODE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_HEADER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_REQUEST_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_TOTAL_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_NAMELOOKUP_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_CONNECT_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_PRETRANSFER_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_SIZE_UPLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_SIZE_DOWNLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_SPEED_DOWNLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_SPEED_UPLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_FILETIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_SSL_VERIFYRESULT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_CONTENT_LENGTH_DOWNLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_CONTENT_LENGTH_UPLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_STARTTRANSFER_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_CONTENT_TYPE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_REDIRECT_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_REDIRECT_COUNT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_HEADER_OUT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLINFO_PRIVATE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_VERSION_IPV6",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_VERSION_KERBEROS4",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_VERSION_SSL",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_VERSION_LIBZ",
                            "type": "constant"
                        },
                        {
                            "text": "CURLVERSION_NOW",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_OK",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_UNSUPPORTED_PROTOCOL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FAILED_INIT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_URL_MALFORMAT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_URL_MALFORMAT_USER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_COULDNT_RESOLVE_PROXY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_COULDNT_RESOLVE_HOST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_COULDNT_CONNECT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_WEIRD_SERVER_REPLY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_ACCESS_DENIED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_USER_PASSWORD_INCORRECT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_WEIRD_PASS_REPLY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_WEIRD_USER_REPLY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_WEIRD_PASV_REPLY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_WEIRD_227_FORMAT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_CANT_GET_HOST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_CANT_RECONNECT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_COULDNT_SET_BINARY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_PARTIAL_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_COULDNT_RETR_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_WRITE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_QUOTE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_HTTP_NOT_FOUND",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_WRITE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_MALFORMAT_USER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_COULDNT_STOR_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_READ_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_OUT_OF_MEMORY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_OPERATION_TIMEOUTED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_COULDNT_SET_ASCII",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_PORT_FAILED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_COULDNT_USE_REST",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_COULDNT_GET_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_HTTP_RANGE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_HTTP_POST_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_CONNECT_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_BAD_DOWNLOAD_RESUME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FILE_COULDNT_READ_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_LDAP_CANNOT_BIND",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_LDAP_SEARCH_FAILED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_LIBRARY_NOT_FOUND",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FUNCTION_NOT_FOUND",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_ABORTED_BY_CALLBACK",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_BAD_FUNCTION_ARGUMENT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_BAD_CALLING_ORDER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_HTTP_PORT_FAILED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_BAD_PASSWORD_ENTERED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_TOO_MANY_REDIRECTS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_UNKNOWN_TELNET_OPTION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_TELNET_OPTION_SYNTAX",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_OBSOLETE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_PEER_CERTIFICATE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_GOT_NOTHING",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_ENGINE_NOTFOUND",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_ENGINE_SETFAILED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SEND_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_RECV_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SHARE_IN_USE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_CERTPROBLEM",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_CIPHER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_SSL_CACERT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_BAD_CONTENT_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_LDAP_INVALID_URL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FILESIZE_EXCEEDED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLE_FTP_SSL_FAILED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROXY_HTTP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROXY_SOCKS4",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROXY_SOCKS5",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_NETRC_OPTIONAL",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_NETRC_IGNORED",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_NETRC_REQUIRED",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_HTTP_VERSION_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_HTTP_VERSION_1_0",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_HTTP_VERSION_1_1",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HTTP_VERSION_2_0",
                            "type": "constant"
                        },
                        {
                            "text": "CURLM_CALL_MULTI_PERFORM",
                            "type": "constant"
                        },
                        {
                            "text": "CURLM_OK",
                            "type": "constant"
                        },
                        {
                            "text": "CURLM_BAD_HANDLE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLM_BAD_EASY_HANDLE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLM_OUT_OF_MEMORY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLM_INTERNAL_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMSG_DONE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTPSSLAUTH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPAUTH_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPAUTH_SSL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPAUTH_TLS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTP_SSL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPSSL_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPSSL_TRY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPSSL_CONTROL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPSSL_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTP_FILEMETHOD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_FTP_SKIP_PASV_IP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SAFE_UPLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPMETHOD_MULTICWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPMETHOD_NOCWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTPMETHOD_SINGLECWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_HTTP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_HTTPS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_FTP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_FTPS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_SCP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_SFTP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_TELNET",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_LDAP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_LDAPS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_DICT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_TFTP",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_PIPELINING",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_MAXCONNECTS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLSHOPT_SHARE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLSHOPT_UNSHARE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_LOCK_DATA_COOKIE",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_LOCK_DATA_DNS",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_LOCK_DATA_SSL_SESSION",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_KEYPASSWD",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTP_CREATE_DIR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTP_CREATE_DIR_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_NTLM_WB",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_HTTP_VERSION_2",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SASL_IR",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_DNS_INTERFACE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_DNS_LOCAL_IP4",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_DNS_LOCAL_IP6",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_XOAUTH2_BEARER",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_LOGIN_OPTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_EXPECT_100_TIMEOUT_MS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_ENABLE_ALPN",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_ENABLE_NPN",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PINNEDPUBLICKEY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_UNIX_SOCKET_PATH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_VERIFYSTATUS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PATH_AS_IS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SSL_FALSESTART",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PIPEWAIT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXY_SERVICE_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_SERVICE_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "CURLSSH_AUTH_AGENT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPIPE_NOTHING",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPIPE_HTTP1",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPIPE_MULTIPLEX",
                            "type": "constant"
                        },
                        {
                            "text": "CURLHEADER_SEPARATE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLHEADER_UNIFIED",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_SMB",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROTO_SMBS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_HEADEROPT",
                            "type": "constant"
                        },
                        {
                            "text": "CURLOPT_PROXYHEADER",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_REDIR_POST_301",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_REDIR_POST_302",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_REDIR_POST_303",
                            "type": "constant"
                        },
                        {
                            "text": "CURLPROXY_HTTP_1_0",
                            "type": "constant"
                        },
                        {
                            "text": "CURL_REDIR_POST_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_MAX_HOST_CONNECTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_MAX_PIPELINE_LENGTH",
                            "type": "constant"
                        },
                        {
                            "text": "CURLMOPT_MAX_TOTAL_CONNECTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "CURLFTP_CREATE_DIR_RETRY",
                            "type": "constant"
                        },
                        {
                            "text": "CURLAUTH_NEGOTIATE",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_ATOM",
                            "leftLabel": "string",
                            "description": "Start of date v.5.3.2-0.dotdeb.1",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_COOKIE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_ISO8601",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RFC822",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RFC850",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RFC1036",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RFC1123",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RFC2822",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RFC3339",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_RSS",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "DATE_W3C",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SUNFUNCS_RET_TIMESTAMP",
                            "description": "Timestamp",
                            "type": "constant"
                        },
                        {
                            "text": "SUNFUNCS_RET_STRING",
                            "description": "Hours:minutes (example: 08:02)",
                            "type": "constant"
                        },
                        {
                            "text": "SUNFUNCS_RET_DOUBLE",
                            "description": "Hours as floating point number (example 8.75)",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ELEMENT_NODE",
                            "description": "Node is a <b>DOMElement<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_NODE",
                            "description": "Node is a <b>DOMAttr<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_TEXT_NODE",
                            "description": "Node is a <b>DOMText<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_CDATA_SECTION_NODE",
                            "description": "Node is a <b>DOMCharacterData<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ENTITY_REF_NODE",
                            "description": "Node is a <b>DOMEntityReference<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ENTITY_NODE",
                            "description": "Node is a <b>DOMEntity<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_PI_NODE",
                            "description": "Node is a <b>DOMProcessingInstruction<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_COMMENT_NODE",
                            "description": "Node is a <b>DOMComment<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_DOCUMENT_NODE",
                            "description": "Node is a <b>DOMDocument<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_DOCUMENT_TYPE_NODE",
                            "description": "Node is a <b>DOMDocumentType<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_DOCUMENT_FRAG_NODE",
                            "description": "Node is a <b>DOMDocumentFragment<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_NOTATION_NODE",
                            "description": "Node is a <b>DOMNotation<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "XML_HTML_DOCUMENT_NODE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_DTD_NODE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ELEMENT_DECL_NODE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_DECL_NODE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ENTITY_DECL_NODE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_NAMESPACE_DECL_NODE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_LOCAL_NAMESPACE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_CDATA",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_ID",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_IDREF",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_IDREFS",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_ENTITY",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_NMTOKEN",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_NMTOKENS",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_ENUMERATION",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ATTRIBUTE_NOTATION",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_PHP_ERR",
                            "description": "Error code not part of the DOM specification. Meant for PHP errors.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_INDEX_SIZE_ERR",
                            "description": "If index or size is negative, or greater than the allowed value.",
                            "type": "constant"
                        },
                        {
                            "text": "DOMSTRING_SIZE_ERR",
                            "description": "If the specified range of text does not fit into a <b>DOMString<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_HIERARCHY_REQUEST_ERR",
                            "description": "If any node is inserted somewhere it doesn't belong",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_WRONG_DOCUMENT_ERR",
                            "description": "If a node is used in a different document than the one that created it.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_INVALID_CHARACTER_ERR",
                            "description": "If an invalid or illegal character is specified, such as in a name.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_NO_DATA_ALLOWED_ERR",
                            "description": "If data is specified for a node which does not support data.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_NO_MODIFICATION_ALLOWED_ERR",
                            "description": "If an attempt is made to modify an object where modifications are not allowed.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_NOT_FOUND_ERR",
                            "description": "If an attempt is made to reference a node in a context where it does not exist.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_NOT_SUPPORTED_ERR",
                            "description": "If the implementation does not support the requested type of object or operation.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_INUSE_ATTRIBUTE_ERR",
                            "description": "If an attempt is made to add an attribute that is already in use elsewhere.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_INVALID_STATE_ERR",
                            "description": "If an attempt is made to use an object that is not, or is no longer, usable.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_SYNTAX_ERR",
                            "description": "If an invalid or illegal string is specified.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_INVALID_MODIFICATION_ERR",
                            "description": "If an attempt is made to modify the type of the underlying object.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_NAMESPACE_ERR",
                            "description": "If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_INVALID_ACCESS_ERR",
                            "description": "If a parameter or an operation is not supported by the underlying object.",
                            "type": "constant"
                        },
                        {
                            "text": "DOM_VALIDATION_ERR",
                            "description": "If a call to a method such as insertBefore or removeChild would make the Node invalid with respect to \"partial validity\", this exception would be raised and the operation would not be done.",
                            "type": "constant"
                        },
                        {
                            "text": "ENCHANT_MYSPELL",
                            "type": "constant"
                        },
                        {
                            "text": "ENCHANT_ISPELL",
                            "type": "constant"
                        },
                        {
                            "text": "EXIF_USE_MBSTRING",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_NONE",
                            "description": "No special handling.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_SYMLINK",
                            "description": "Follow symlinks.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_MIME",
                            "description": "Return the mime type and mime encoding as defined by RFC 2045.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_MIME_TYPE",
                            "description": "Return the mime type.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_MIME_ENCODING",
                            "description": "Return the mime encoding of the file.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_DEVICES",
                            "description": "Look at the contents of blocks or character special devices.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_CONTINUE",
                            "description": "Return all matches, not just the first.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_PRESERVE_ATIME",
                            "description": "If possible preserve the original access time.",
                            "type": "constant"
                        },
                        {
                            "text": "FILEINFO_RAW",
                            "description": "Don't translate unprintable characters to a \\ooo octal representation.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_POST",
                            "description": "POST variables.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_GET",
                            "description": "GET variables.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_COOKIE",
                            "description": "COOKIE variables.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_ENV",
                            "description": "ENV variables.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_SERVER",
                            "description": "SERVER variables.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_SESSION",
                            "description": "SESSION variables.",
                            "type": "constant"
                        },
                        {
                            "text": "INPUT_REQUEST",
                            "description": "REQUEST variables.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_NONE",
                            "description": "No flags.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_REQUIRE_SCALAR",
                            "description": "Flag used to require scalar as input",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_REQUIRE_ARRAY",
                            "description": "Require an array as input.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FORCE_ARRAY",
                            "description": "Always returns an array.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_NULL_ON_FAILURE",
                            "description": "Use NULL instead of FALSE on failure.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_INT",
                            "description": "ID of \"int\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_BOOLEAN",
                            "description": "ID of \"boolean\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_FLOAT",
                            "description": "ID of \"float\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_REGEXP",
                            "description": "ID of \"validate_regexp\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_URL",
                            "description": "ID of \"validate_url\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_EMAIL",
                            "description": "ID of \"validate_email\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_IP",
                            "description": "ID of \"validate_ip\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_VALIDATE_MAC",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_DEFAULT",
                            "description": "ID of default (\"string\") filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_UNSAFE_RAW",
                            "description": "ID of \"unsafe_raw\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_STRING",
                            "description": "ID of \"string\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_STRIPPED",
                            "description": "ID of \"stripped\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_ENCODED",
                            "description": "ID of \"encoded\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_SPECIAL_CHARS",
                            "description": "ID of \"special_chars\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_FULL_SPECIAL_CHARS",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_EMAIL",
                            "description": "ID of \"email\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_URL",
                            "description": "ID of \"url\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_NUMBER_INT",
                            "description": "ID of \"number_int\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_NUMBER_FLOAT",
                            "description": "ID of \"number_float\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_MAGIC_QUOTES",
                            "description": "ID of \"magic_quotes\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_CALLBACK",
                            "description": "ID of \"callback\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ALLOW_OCTAL",
                            "description": "Allow octal notation (0[0-7]+) in \"int\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ALLOW_HEX",
                            "description": "Allow hex notation (0x[0-9a-fA-F]+) in \"int\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_STRIP_LOW",
                            "description": "Strip characters with ASCII value less than 32.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_STRIP_HIGH",
                            "description": "Strip characters with ASCII value greater than 127.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_STRIP_BACKTICK",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ENCODE_LOW",
                            "description": "Encode characters with ASCII value less than 32.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ENCODE_HIGH",
                            "description": "Encode characters with ASCII value greater than 127.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ENCODE_AMP",
                            "description": "Encode &#38;#38;.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_NO_ENCODE_QUOTES",
                            "description": "Don't encode ' and \".",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_EMPTY_STRING_NULL",
                            "description": "(No use for now.)",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ALLOW_FRACTION",
                            "description": "Allow fractional part in \"number_float\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ALLOW_THOUSAND",
                            "description": "Allow thousand separator (,) in \"number_float\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_ALLOW_SCIENTIFIC",
                            "description": "Allow scientific notation (e, E) in \"number_float\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_SCHEME_REQUIRED",
                            "description": "Require scheme in \"validate_url\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_HOST_REQUIRED",
                            "description": "Require host in \"validate_url\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_PATH_REQUIRED",
                            "description": "Require path in \"validate_url\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_QUERY_REQUIRED",
                            "description": "Require query in \"validate_url\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_IPV4",
                            "description": "Allow only IPv4 address in \"validate_ip\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_IPV6",
                            "description": "Allow only IPv6 address in \"validate_ip\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_NO_RES_RANGE",
                            "description": "Deny reserved addresses in \"validate_ip\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_FLAG_NO_PRIV_RANGE",
                            "description": "Deny private addresses in \"validate_ip\" filter.",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_ASCII",
                            "description": "<p><\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_TEXT",
                            "description": "<p><\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_BINARY",
                            "description": "<p><\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_IMAGE",
                            "description": "<p><\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_AUTORESUME",
                            "description": "<p> Automatically determine resume position and start position for GET and PUT requests (only works if FTP_AUTOSEEK is enabled) <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_TIMEOUT_SEC",
                            "description": "<p> See <b>ftp_set_option<\/b> for information.",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_AUTOSEEK",
                            "description": "<p> See <b>ftp_set_option<\/b> for information.",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_FAILED",
                            "description": "<p> Asynchronous transfer has failed <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_FINISHED",
                            "description": "<p> Asynchronous transfer has finished <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "FTP_MOREDATA",
                            "description": "<p> Asynchronous transfer is still active <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_GIF",
                            "description": "Used as a return value by imagetypes",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_JPG",
                            "description": "Used as a return value by imagetypes",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_JPEG",
                            "description": "Used as a return value by imagetypes <p> This constant has the same value as IMG_JPG <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_PNG",
                            "description": "Used as a return value by imagetypes",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_WBMP",
                            "description": "Used as a return value by imagetypes",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_XPM",
                            "description": "Used as a return value by imagetypes",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_COLOR_TILED",
                            "description": "Special color option which can be used in stead of color allocated with imagecolorallocate or imagecolorallocatealpha",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_COLOR_STYLED",
                            "description": "Special color option which can be used in stead of color allocated with imagecolorallocate or imagecolorallocatealpha",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_COLOR_BRUSHED",
                            "description": "Special color option which can be used in stead of color allocated with imagecolorallocate or imagecolorallocatealpha",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_COLOR_STYLEDBRUSHED",
                            "description": "Special color option which can be used in stead of color allocated with imagecolorallocate or imagecolorallocatealpha",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_COLOR_TRANSPARENT",
                            "description": "Special color option which can be used in stead of color allocated with imagecolorallocate or imagecolorallocatealpha",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_ARC_ROUNDED",
                            "description": "A style constant used by the imagefilledarc function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_ARC_PIE",
                            "description": "A style constant used by the imagefilledarc function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_ARC_CHORD",
                            "description": "A style constant used by the imagefilledarc function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_ARC_NOFILL",
                            "description": "A style constant used by the imagefilledarc function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_ARC_EDGED",
                            "description": "A style constant used by the imagefilledarc function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_GD2_RAW",
                            "description": "A type constant used by the imagegd2 function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_GD2_COMPRESSED",
                            "description": "A type constant used by the imagegd2 function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_EFFECT_REPLACE",
                            "description": "Alpha blending effect used by the imagelayereffect function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_EFFECT_ALPHABLEND",
                            "description": "Alpha blending effect used by the imagelayereffect function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_EFFECT_NORMAL",
                            "description": "Alpha blending effect used by the imagelayereffect function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_EFFECT_OVERLAY",
                            "description": "Alpha blending effect used by the imagelayereffect function.",
                            "type": "constant"
                        },
                        {
                            "text": "GD_BUNDLED",
                            "description": "When the bundled version of GD is used this is 1 otherwise its set to 0.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_NEGATE",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_GRAYSCALE",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_BRIGHTNESS",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_CONTRAST",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_COLORIZE",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_EDGEDETECT",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_GAUSSIAN_BLUR",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_SELECTIVE_BLUR",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_EMBOSS",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_MEAN_REMOVAL",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_SMOOTH",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FILTER_PIXELATE",
                            "description": "Special GD filter used by the imagefilter function.",
                            "type": "constant"
                        },
                        {
                            "text": "GD_VERSION",
                            "leftLabel": "string",
                            "description": "The GD version PHP was compiled against.",
                            "type": "constant"
                        },
                        {
                            "text": "GD_MAJOR_VERSION",
                            "description": "The GD major version PHP was compiled against.",
                            "type": "constant"
                        },
                        {
                            "text": "GD_MINOR_VERSION",
                            "description": "The GD minor version PHP was compiled against.",
                            "type": "constant"
                        },
                        {
                            "text": "GD_RELEASE_VERSION",
                            "description": "The GD release version PHP was compiled against.",
                            "type": "constant"
                        },
                        {
                            "text": "GD_EXTRA_VERSION",
                            "leftLabel": "string",
                            "description": "The GD \"extra\" version (beta\/rc.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_NO_FILTER",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_FILTER_NONE",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_FILTER_SUB",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_FILTER_UP",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_FILTER_AVG",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_FILTER_PAETH",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "PNG_ALL_FILTERS",
                            "description": "A special PNG filter, used by the imagepng function.",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_AFFINE_TRANSLATE",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_AFFINE_SCALE",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_AFFINE_ROTATE",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_AFFINE_SHEAR_HORIZONTAL",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_AFFINE_SHEAR_VERTICAL",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_CROP_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_CROP_TRANSPARENT",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_CROP_BLACK",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_CROP_WHITE",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_CROP_SIDES",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FLIP_BOTH",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FLIP_HORIZONTAL",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_FLIP_VERTICAL",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BELL",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BESSEL",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BICUBIC",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BICUBIC_FIXED",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BILINEAR_FIXED",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BLACKMAN",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BOX",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_BSPLINE",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_CATMULLROM",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_GAUSSIAN",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_GENERALIZED_CUBIC",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_HERMITE",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_HAMMING",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_HANNING",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_MITCHELL",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_POWER",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_QUADRATIC",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_SINC",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_NEAREST_NEIGHBOUR",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_WEIGHTED4",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "IMG_TRIANGLE",
                            "description": "Used together with imagesetinterpolation().",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DEFAULT_TCP_HOST",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DEFAULT_TCP_PORT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DEFAULT_SOCKET_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DEFAULT_SOCKET_SEND_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DEFAULT_SOCKET_RECV_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MAX_ERROR_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_PACKET_HEADER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_HANDLE_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_OPTION_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_UNIQUE_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MAX_COMMAND_ARGS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_ARGS_BUFFER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SEND_BUFFER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_RECV_BUFFER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_WAIT_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SUCCESS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_IO_WAIT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SHUTDOWN",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SHUTDOWN_GRACEFUL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_ERRNO",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_EVENT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TOO_MANY_ARGS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NO_ACTIVE_FDS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_INVALID_MAGIC",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_INVALID_COMMAND",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_INVALID_PACKET",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_UNEXPECTED_PACKET",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_GETADDRINFO",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NO_SERVERS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_LOST_CONNECTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MEMORY_ALLOCATION_FAILURE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_EXISTS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_QUEUE_FULL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SERVER_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORK_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORK_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORK_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORK_STATUS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORK_EXCEPTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORK_FAIL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NOT_CONNECTED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COULD_NOT_CONNECT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SEND_IN_PROGRESS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_RECV_IN_PROGRESS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NOT_FLUSHING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DATA_TOO_LARGE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_INVALID_FUNCTION_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_INVALID_WORKER_FUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NO_REGISTERED_FUNCTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NO_JOBS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_ECHO_DATA_CORRUPTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NEED_WORKLOAD_FN",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_PAUSE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_UNKNOWN_STATE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_PTHREAD",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_PIPE_EOF",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_QUEUE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_FLUSH_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_SEND_BUFFER_TOO_SMALL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_IGNORE_PACKET",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_UNKNOWN_OPTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MAX_RETURN",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_NEVER",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_FATAL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_INFO",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_DEBUG",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_CRAZY",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_VERBOSE_MAX",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_NON_BLOCKING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_DONT_TRACK_PACKETS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_READY",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_PACKET_IN_USE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_EXTERNAL_FD",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_IGNORE_LOST_CONNECTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_CLOSE_AFTER_FLUSH",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_SEND_STATE_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CON_RECV_STATE_READ_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MAGIC_TEXT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MAGIC_REQUEST",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_MAGIC_RESPONSE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_TEXT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_CAN_DO",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_CANT_DO",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_RESET_ABILITIES",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_PRE_SLEEP",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_UNUSED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_NOOP",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_JOB_CREATED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_GRAB_JOB",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_NO_JOB",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_JOB_ASSIGN",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_WORK_STATUS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_WORK_COMPLETE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_WORK_FAIL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_GET_STATUS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_ECHO_REQ",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_ECHO_RES",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_BG",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_STATUS_RES",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_HIGH",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SET_CLIENT_ID",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_CAN_DO_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_ALL_YOURS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_WORK_EXCEPTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_OPTION_REQ",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_OPTION_RES",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_WORK_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_WORK_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_GRAB_JOB_UNIQ",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_JOB_ASSIGN_UNIQ",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_HIGH_BG",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_LOW",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_LOW_BG",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_SCHED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_SUBMIT_JOB_EPOCH",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_COMMAND_MAX",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_NEW",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_SUBMIT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_WORKLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_WORK",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_CREATED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_STATUS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_COMPLETE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_EXCEPTION",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_FAIL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_TASK_STATE_FINISHED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_PRIORITY_HIGH",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_PRIORITY_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_PRIORITY_LOW",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_JOB_PRIORITY_MAX",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_ALLOCATED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_NON_BLOCKING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_TASK_IN_USE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_UNBUFFERED_RESULT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_NO_NEW",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_FREE_TASKS",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_STATE_IDLE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_STATE_NEW",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_STATE_SUBMIT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_CLIENT_STATE_PACKET",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_ALLOCATED",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_NON_BLOCKING",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_PACKET_INIT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_GRAB_JOB_IN_USE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_PRE_SLEEP_IN_USE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_WORK_JOB_IN_USE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_CHANGE",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_GRAB_UNIQ",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_TIMEOUT_RETURN",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_STATE_START",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_STATE_FUNCTION_SEND",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_STATE_CONNECT",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_STATE_GRAB_JOB_SEND",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_STATE_GRAB_JOB_RECV",
                            "type": "constant"
                        },
                        {
                            "text": "GEARMAN_WORKER_STATE_PRE_SLEEP",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_COUNTRY_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_REGION_EDITION_REV0",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_CITY_EDITION_REV0",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_ORG_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_ISP_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_CITY_EDITION_REV1",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_REGION_EDITION_REV1",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_PROXY_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_ASNUM_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_NETSPEED_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_DOMAIN_EDITION",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_UNKNOWN_SPEED",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_DIALUP_SPEED",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_CABLEDSL_SPEED",
                            "type": "constant"
                        },
                        {
                            "text": "GEOIP_CORPORATE_SPEED",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_ROUND_ZERO",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_ROUND_PLUSINF",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_ROUND_MINUSINF",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_MSW_FIRST",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_LSW_FIRST",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_LITTLE_ENDIAN",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_BIG_ENDIAN",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_NATIVE_ENDIAN",
                            "type": "constant"
                        },
                        {
                            "text": "GMP_VERSION",
                            "leftLabel": "string",
                            "description": "The GMP library version",
                            "type": "constant"
                        },
                        {
                            "text": "HASH_HMAC",
                            "description": "Optional flag for <b>hash_init<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_CRC32",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_MD5",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_SHA1",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_HAVAL256",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_RIPEMD160",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_TIGER",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_GOST",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_CRC32B",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_HAVAL224",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_HAVAL192",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_HAVAL160",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_HAVAL128",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_TIGER128",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_TIGER160",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_MD4",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_SHA256",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_ADLER32",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_SHA224",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_SHA512",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_SHA384",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_WHIRLPOOL",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_RIPEMD128",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_RIPEMD256",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_RIPEMD320",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_SNEFRU256",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_MD2",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_FNV132",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_FNV1A32",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_FNV164",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_FNV1A64",
                            "type": "constant"
                        },
                        {
                            "text": "MHASH_JOAAT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_COOKIE_PARSE_RAW",
                            "description": "don't urldecode values",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_COOKIE_SECURE",
                            "description": "whether &quot;secure&quot; was found in the cookie's parameters list",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_COOKIE_HTTPONLY",
                            "description": "whether &quot;httpOnly&quot; was found in the cookie's parameter list",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_LEVEL_DEF",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_LEVEL_MIN",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_LEVEL_MAX",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_TYPE_ZLIB",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_TYPE_GZIP",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_TYPE_RAW",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_STRATEGY_DEF",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_STRATEGY_FILT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_STRATEGY_HUFF",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_STRATEGY_RLE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_DEFLATE_STRATEGY_FIXED",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_ENCODING_STREAM_FLUSH_NONE",
                            "description": "don't flush",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_ENCODING_STREAM_FLUSH_SYNC",
                            "description": "synchronized flush only",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_ENCODING_STREAM_FLUSH_FULL",
                            "description": "full data flush",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_AUTH_BASIC",
                            "description": "use &quot;basic&quot; authentication",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_AUTH_DIGEST",
                            "description": "use &quot;digest&quot; authentication",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_AUTH_NTLM",
                            "description": "use &quot;NTLM&quot; authentication",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_AUTH_GSSNEG",
                            "description": "use &quot;GSS-NEGOTIATE&quot; authentication",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_AUTH_ANY",
                            "description": "try any authentication scheme",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_VERSION_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_VERSION_1_0",
                            "description": "HTTP version 1.0",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_VERSION_1_1",
                            "description": "HTTP version 1.1",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_VERSION_ANY",
                            "description": "no specific HTTP protocol version",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SSL_VERSION_TLSv1",
                            "description": "use TLSv1 only",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SSL_VERSION_SSLv2",
                            "description": "use SSLv2 only",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SSL_VERSION_SSLv3",
                            "description": "use SSLv3 only",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SSL_VERSION_ANY",
                            "description": "no specific SSL protocol version",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_IPRESOLVE_V4",
                            "description": "use IPv4 only for name lookups",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_IPRESOLVE_V6",
                            "description": "use IPv6 only for name lookups",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_IPRESOLVE_ANY",
                            "description": "use any IP mechanism only for name lookups",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PROXY_SOCKS4",
                            "description": "the proxy is a SOCKS4 type proxy",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PROXY_SOCKS5",
                            "description": "the proxy is a SOCKS5 type proxy",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PROXY_HTTP",
                            "description": "standard HTTP proxy",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_GET",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_HEAD",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_POST",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_PUT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_DELETE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_OPTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_TRACE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_CONNECT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_PROPFIND",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_PROPPATCH",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_MKCOL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_COPY",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_MOVE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_LOCK",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_UNLOCK",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_VERSION_CONTROL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_REPORT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_CHECKOUT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_CHECKIN",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_UNCHECKOUT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_MKWORKSPACE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_UPDATE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_LABEL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_MERGE",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_BASELINE_CONTROL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_MKACTIVITY",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_METH_ACL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_REDIRECT",
                            "description": "guess applicable redirect method",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_REDIRECT_PERM",
                            "description": "permanent redirect (301 Moved permanently)",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_REDIRECT_FOUND",
                            "description": "standard redirect (302 Found) RFC 1945 and RFC 2068 specify that the client is not allowed to change the method on the redirected request. However, most existing user agent implementations treat 302 as if it were a 303 response, performing a GET on the Location field-value regardless of the original request method. The status codes 303 and 307 have been added for servers that wish to make unambiguously clear which kind of reaction is expected of the client.",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_REDIRECT_POST",
                            "description": "redirect applicable to POST requests (303 See other)",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_REDIRECT_PROXY",
                            "description": "proxy redirect (305 Use proxy)",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_REDIRECT_TEMP",
                            "description": "temporary redirect (307 Temporary Redirect)",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SUPPORT",
                            "description": "querying for this constant will always return true",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SUPPORT_REQUESTS",
                            "description": "whether support to issue HTTP requests is given, ie. libcurl support was compiled in",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SUPPORT_MAGICMIME",
                            "description": "whether support to guess the Content-Type of HTTP messages is given, ie. libmagic support was compiled in",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SUPPORT_ENCODINGS",
                            "description": "whether support for zlib encodings is given, ie. libz support was compiled in",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SUPPORT_SSLREQUESTS",
                            "description": "whether support to issue HTTP requests over SSL is given, ie. linked libcurl was built with SSL support",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_SUPPORT_EVENTS",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PARAMS_ALLOW_COMMA",
                            "description": "allow commands additionally to semicolons as separator",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PARAMS_ALLOW_FAILURE",
                            "description": "continue parsing after an error occurred",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PARAMS_RAISE_ERROR",
                            "description": "raise PHP warnings on parse errors",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_PARAMS_DEFAULT",
                            "description": "all three values above, bitwise or'ed",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_REPLACE",
                            "description": "replace every part of the first URL when there's one of the second URL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_JOIN_PATH",
                            "description": "join relative paths",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_JOIN_QUERY",
                            "description": "join query strings",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_USER",
                            "description": "strip any user authentication information",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_PASS",
                            "description": "strip any password authentication information",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_AUTH",
                            "description": "strip any authentication information",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_PORT",
                            "description": "strip explicit port numbers",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_PATH",
                            "description": "strip complete path",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_QUERY",
                            "description": "strip query string",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_FRAGMENT",
                            "description": "strip any fragments (#identifier)",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_STRIP_ALL",
                            "description": "strip anything but scheme and host",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_URL_FROM_ENV",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_RUNTIME",
                            "description": "runtime error",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_INVALID_PARAM",
                            "description": "an invalid parameter was passed",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_HEADER",
                            "description": "header() or similar operation failed",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_MALFORMED_HEADERS",
                            "description": "HTTP header parse error",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_REQUEST_METHOD",
                            "description": "unknown\/invalid request method",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_MESSAGE_TYPE",
                            "description": "with operation incompatible message type",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_ENCODING",
                            "description": "encoding\/decoding error",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_REQUEST",
                            "description": "request failure",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_REQUEST_POOL",
                            "description": "request pool failure",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_SOCKET",
                            "description": "socket exception",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_RESPONSE",
                            "description": "response failure",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_URL",
                            "description": "invalid URL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_E_QUERYSTRING",
                            "description": "querystring operation failure",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_MSG_NONE",
                            "description": "the message is of no specific type",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_MSG_REQUEST",
                            "description": "request style message",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_MSG_RESPONSE",
                            "description": "response style message",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_QUERYSTRING_TYPE_BOOL",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_QUERYSTRING_TYPE_INT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_QUERYSTRING_TYPE_FLOAT",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_QUERYSTRING_TYPE_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_QUERYSTRING_TYPE_ARRAY",
                            "type": "constant"
                        },
                        {
                            "text": "HTTP_QUERYSTRING_TYPE_OBJECT",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_BINARY",
                            "description": "Specifies that binary data shall be returned as is. This is the default mode.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_CONVERT",
                            "description": "Specifies that binary data shall be converted to a hexadecimal encoding and returned as an ASCII string.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_PASSTHRU",
                            "description": "Specifies that binary data shall be converted to a &null; value.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_SCROLLABLE",
                            "description": "Specifies a scrollable cursor for a statement resource. This mode enables random access to rows in a result set, but currently is supported only by IBM DB2 Universal Database.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_FORWARD_ONLY",
                            "description": "Specifies a forward-only cursor for a statement resource. This is the default cursor type and is supported on all database servers.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_PARAM_IN",
                            "description": "Specifies the PHP variable should be bound as an IN parameter for a stored procedure.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_PARAM_OUT",
                            "description": "Specifies the PHP variable should be bound as an OUT parameter for a stored procedure.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_PARAM_INOUT",
                            "description": "Specifies the PHP variable should be bound as an INOUT parameter for a stored procedure.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_PARAM_FILE",
                            "description": "Specifies that the column should be bound directly to a file for input.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_AUTOCOMMIT_ON",
                            "description": "Specifies that autocommit should be turned on.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_AUTOCOMMIT_OFF",
                            "description": "Specifies that autocommit should be turned off.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_DEFERRED_PREPARE_ON",
                            "description": "Specifies that deferred prepare should be turned on for the specified statement resource.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_DEFERRED_PREPARE_OFF",
                            "description": "Specifies that deferred prepare should be turned off for the specified statement resource.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_DOUBLE",
                            "description": "Specifies that the variable should be bound as a DOUBLE, FLOAT, or REAL data type.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_LONG",
                            "description": "Specifies that the variable should be bound as a SMALLINT, INTEGER, or BIGINT data type.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_CHAR",
                            "description": "Specifies that the variable should be bound as a CHAR or VARCHAR data type.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_XML",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_CASE_NATURAL",
                            "description": "Specifies that column names will be returned in their natural case.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_CASE_LOWER",
                            "description": "Specifies that column names will be returned in lower case.",
                            "type": "constant"
                        },
                        {
                            "text": "DB2_CASE_UPPER",
                            "description": "Specifies that column names will be returned in upper case.",
                            "type": "constant"
                        },
                        {
                            "text": "ICONV_IMPL",
                            "leftLabel": "string",
                            "description": "string",
                            "type": "constant"
                        },
                        {
                            "text": "ICONV_VERSION",
                            "description": "string",
                            "type": "constant"
                        },
                        {
                            "text": "ICONV_MIME_DECODE_STRICT",
                            "description": "integer",
                            "type": "constant"
                        },
                        {
                            "text": "ICONV_MIME_DECODE_CONTINUE_ON_ERROR",
                            "description": "integer",
                            "type": "constant"
                        },
                        {
                            "text": "NIL",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_OPENTIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_READTIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_WRITETIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_CLOSETIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "OP_DEBUG",
                            "type": "constant"
                        },
                        {
                            "text": "OP_READONLY",
                            "description": "Open mailbox read-only",
                            "type": "constant"
                        },
                        {
                            "text": "OP_ANONYMOUS",
                            "description": "Don't use or update a .newsrc for news (NNTP only)",
                            "type": "constant"
                        },
                        {
                            "text": "OP_SHORTCACHE",
                            "type": "constant"
                        },
                        {
                            "text": "OP_SILENT",
                            "type": "constant"
                        },
                        {
                            "text": "OP_PROTOTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "OP_HALFOPEN",
                            "description": "For IMAP and NNTP names, open a connection but don't open a mailbox.",
                            "type": "constant"
                        },
                        {
                            "text": "OP_EXPUNGE",
                            "type": "constant"
                        },
                        {
                            "text": "OP_SECURE",
                            "type": "constant"
                        },
                        {
                            "text": "CL_EXPUNGE",
                            "description": "silently expunge the mailbox before closing when calling <b>imap_close<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "FT_UID",
                            "description": "The parameter is a UID",
                            "type": "constant"
                        },
                        {
                            "text": "FT_PEEK",
                            "description": "Do not set the \\Seen flag if not already set",
                            "type": "constant"
                        },
                        {
                            "text": "FT_NOT",
                            "type": "constant"
                        },
                        {
                            "text": "FT_INTERNAL",
                            "description": "The return string is in internal format, will not canonicalize to CRLF.",
                            "type": "constant"
                        },
                        {
                            "text": "FT_PREFETCHTEXT",
                            "type": "constant"
                        },
                        {
                            "text": "ST_UID",
                            "description": "The sequence argument contains UIDs instead of sequence numbers",
                            "type": "constant"
                        },
                        {
                            "text": "ST_SILENT",
                            "type": "constant"
                        },
                        {
                            "text": "ST_SET",
                            "type": "constant"
                        },
                        {
                            "text": "CP_UID",
                            "description": "the sequence numbers contain UIDS",
                            "type": "constant"
                        },
                        {
                            "text": "CP_MOVE",
                            "description": "Delete the messages from the current mailbox after copying with <b>imap_mail_copy<\/b>",
                            "type": "constant"
                        },
                        {
                            "text": "SE_UID",
                            "description": "Return UIDs instead of sequence numbers",
                            "type": "constant"
                        },
                        {
                            "text": "SE_FREE",
                            "type": "constant"
                        },
                        {
                            "text": "SE_NOPREFETCH",
                            "description": "Don't prefetch searched messages",
                            "type": "constant"
                        },
                        {
                            "text": "SO_FREE",
                            "type": "constant"
                        },
                        {
                            "text": "SO_NOSERVER",
                            "type": "constant"
                        },
                        {
                            "text": "SA_MESSAGES",
                            "type": "constant"
                        },
                        {
                            "text": "SA_RECENT",
                            "type": "constant"
                        },
                        {
                            "text": "SA_UNSEEN",
                            "type": "constant"
                        },
                        {
                            "text": "SA_UIDNEXT",
                            "type": "constant"
                        },
                        {
                            "text": "SA_UIDVALIDITY",
                            "type": "constant"
                        },
                        {
                            "text": "SA_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_NOINFERIORS",
                            "description": "This mailbox has no \"children\" (there are no mailboxes below this one).",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_NOSELECT",
                            "description": "This is only a container, not a mailbox - you cannot open it.",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_MARKED",
                            "description": "This mailbox is marked. Only used by UW-IMAPD.",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_UNMARKED",
                            "description": "This mailbox is not marked. Only used by UW-IMAPD.",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_REFERRAL",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_HASCHILDREN",
                            "type": "constant"
                        },
                        {
                            "text": "LATT_HASNOCHILDREN",
                            "type": "constant"
                        },
                        {
                            "text": "SORTDATE",
                            "description": "Sort criteria for <b>imap_sort<\/b>: message Date",
                            "type": "constant"
                        },
                        {
                            "text": "SORTARRIVAL",
                            "description": "Sort criteria for <b>imap_sort<\/b>: arrival date",
                            "type": "constant"
                        },
                        {
                            "text": "SORTFROM",
                            "description": "Sort criteria for <b>imap_sort<\/b>: mailbox in first From address",
                            "type": "constant"
                        },
                        {
                            "text": "SORTSUBJECT",
                            "description": "Sort criteria for <b>imap_sort<\/b>: message subject",
                            "type": "constant"
                        },
                        {
                            "text": "SORTTO",
                            "description": "Sort criteria for <b>imap_sort<\/b>: mailbox in first To address",
                            "type": "constant"
                        },
                        {
                            "text": "SORTCC",
                            "description": "Sort criteria for <b>imap_sort<\/b>: mailbox in first cc address",
                            "type": "constant"
                        },
                        {
                            "text": "SORTSIZE",
                            "description": "Sort criteria for <b>imap_sort<\/b>: size of message in octets",
                            "type": "constant"
                        },
                        {
                            "text": "TYPETEXT",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEMULTIPART",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEMESSAGE",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEAPPLICATION",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEAUDIO",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEIMAGE",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEVIDEO",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEMODEL",
                            "type": "constant"
                        },
                        {
                            "text": "TYPEOTHER",
                            "type": "constant"
                        },
                        {
                            "text": "ENC7BIT",
                            "type": "constant"
                        },
                        {
                            "text": "ENC8BIT",
                            "type": "constant"
                        },
                        {
                            "text": "ENCBINARY",
                            "type": "constant"
                        },
                        {
                            "text": "ENCBASE64",
                            "type": "constant"
                        },
                        {
                            "text": "ENCQUOTEDPRINTABLE",
                            "type": "constant"
                        },
                        {
                            "text": "ENCOTHER",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_GC_ELT",
                            "description": "Garbage collector, clear message cache elements.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_GC_ENV",
                            "description": "Garbage collector, clear envelopes and bodies.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAP_GC_TEXTS",
                            "description": "Garbage collector, clear texts.",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_CREATE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_TEXT",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_FETCH_BLOBS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_FETCH_ARRAYS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_UNIXTIME",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_WRITE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_READ",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_COMMITTED",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_CONSISTENCY",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_CONCURRENCY",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_REC_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_REC_NO_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_NOWAIT",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_WAIT",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_IGNORE_CHECKSUMS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_IGNORE_LIMBO",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_METADATA_ONLY",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_NO_GARBAGE_COLLECT",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_OLD_DESCRIPTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_NON_TRANSPORTABLE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_BKP_CONVERT",
                            "description": "Options to ibase_backup",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_DEACTIVATE_IDX",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_NO_SHADOW",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_NO_VALIDITY",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_ONE_AT_A_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_REPLACE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_CREATE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RES_USE_ALL_SPACE",
                            "description": "Options to ibase_restore",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_PAGE_BUFFERS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_SWEEP_INTERVAL",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_SHUTDOWN_DB",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_DENY_NEW_TRANSACTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_DENY_NEW_ATTACHMENTS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_RESERVE_SPACE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_RES_USE_FULL",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_RES",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_WRITE_MODE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_WM_ASYNC",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_WM_SYNC",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_ACCESS_MODE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_AM_READONLY",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_AM_READWRITE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_SET_SQL_DIALECT",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_ACTIVATE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_PRP_DB_ONLINE",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_CHECK_DB",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_IGNORE_CHECKSUM",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_KILL_SHADOWS",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_MEND_DB",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_VALIDATE_DB",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_FULL",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_RPR_SWEEP_DB",
                            "description": "Options to ibase_maintain_db",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_STS_DATA_PAGES",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_STS_DB_LOG",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_STS_HDR_PAGES",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_STS_IDX_PAGES",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_STS_SYS_RELATIONS",
                            "description": "Options to ibase_db_info",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_SERVER_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_IMPLEMENTATION",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_GET_ENV",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_GET_ENV_LOCK",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_GET_ENV_MSG",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_USER_DBPATH",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_SVR_DB_INFO",
                            "type": "constant"
                        },
                        {
                            "text": "IBASE_SVC_GET_USERS",
                            "description": "Options to ibase_server_info",
                            "type": "constant"
                        },
                        {
                            "text": "INTL_MAX_LOCALE_LEN",
                            "description": "Limit on locale length, set to 80 in PHP code. Locale names longer than this limit will not be accepted.",
                            "type": "constant"
                        },
                        {
                            "text": "INTL_ICU_VERSION",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "INTL_ICU_DATA_VERSION",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "ULOC_ACTUAL_LOCALE",
                            "type": "constant"
                        },
                        {
                            "text": "ULOC_VALID_LOCALE",
                            "type": "constant"
                        },
                        {
                            "text": "GRAPHEME_EXTR_COUNT",
                            "type": "constant"
                        },
                        {
                            "text": "GRAPHEME_EXTR_MAXBYTES",
                            "type": "constant"
                        },
                        {
                            "text": "GRAPHEME_EXTR_MAXCHARS",
                            "type": "constant"
                        },
                        {
                            "text": "U_USING_FALLBACK_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_ERROR_WARNING_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_USING_DEFAULT_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_SAFECLONE_ALLOCATED_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_STATE_OLD_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_STRING_NOT_TERMINATED_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_SORT_KEY_TOO_SHORT_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_AMBIGUOUS_ALIAS_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "U_DIFFERENT_UCA_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "U_ERROR_WARNING_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_ZERO_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_ILLEGAL_ARGUMENT_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISSING_RESOURCE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_FORMAT_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_FILE_ACCESS_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INTERNAL_PROGRAM_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_MESSAGE_PARSE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_MEMORY_ALLOCATION_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INDEX_OUTOFBOUNDS_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_PARSE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_CHAR_FOUND",
                            "type": "constant"
                        },
                        {
                            "text": "U_TRUNCATED_CHAR_FOUND",
                            "type": "constant"
                        },
                        {
                            "text": "U_ILLEGAL_CHAR_FOUND",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_TABLE_FORMAT",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_TABLE_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "U_BUFFER_OVERFLOW_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNSUPPORTED_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_RESOURCE_TYPE_MISMATCH",
                            "type": "constant"
                        },
                        {
                            "text": "U_ILLEGAL_ESCAPE_SEQUENCE",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNSUPPORTED_ESCAPE_SEQUENCE",
                            "type": "constant"
                        },
                        {
                            "text": "U_NO_SPACE_AVAILABLE",
                            "type": "constant"
                        },
                        {
                            "text": "U_CE_NOT_FOUND_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_PRIMARY_TOO_LONG_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_STATE_TOO_OLD_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_TOO_MANY_ALIASES_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_ENUM_OUT_OF_SYNC_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVARIANT_CONVERSION_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_STATE_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_COLLATOR_VERSION_MISMATCH",
                            "type": "constant"
                        },
                        {
                            "text": "U_USELESS_COLLATOR_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_NO_WRITE_PERMISSION",
                            "type": "constant"
                        },
                        {
                            "text": "U_STANDARD_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_BAD_VARIABLE_DEFINITION",
                            "type": "constant"
                        },
                        {
                            "text": "U_PARSE_ERROR_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_RULE",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_SET",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_SYMBOL_REFERENCE",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_UNICODE_ESCAPE",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_VARIABLE_DEFINITION",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_VARIABLE_REFERENCE",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISMATCHED_SEGMENT_DELIMITERS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISPLACED_ANCHOR_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISPLACED_CURSOR_OFFSET",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISPLACED_QUANTIFIER",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISSING_OPERATOR",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISSING_SEGMENT_CLOSE",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_ANTE_CONTEXTS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_CURSORS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_POST_CONTEXTS",
                            "type": "constant"
                        },
                        {
                            "text": "U_TRAILING_BACKSLASH",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNDEFINED_SEGMENT_REFERENCE",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNDEFINED_VARIABLE",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNQUOTED_SPECIAL",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNTERMINATED_QUOTE",
                            "type": "constant"
                        },
                        {
                            "text": "U_RULE_MASK_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_MISPLACED_COMPOUND_FILTER",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_COMPOUND_FILTERS",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_RBT_SYNTAX",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_PROPERTY_PATTERN",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_PRAGMA",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNCLOSED_SEGMENT",
                            "type": "constant"
                        },
                        {
                            "text": "U_ILLEGAL_CHAR_IN_SEGMENT",
                            "type": "constant"
                        },
                        {
                            "text": "U_VARIABLE_RANGE_EXHAUSTED",
                            "type": "constant"
                        },
                        {
                            "text": "U_VARIABLE_RANGE_OVERLAP",
                            "type": "constant"
                        },
                        {
                            "text": "U_ILLEGAL_CHARACTER",
                            "type": "constant"
                        },
                        {
                            "text": "U_INTERNAL_TRANSLITERATOR_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_ID",
                            "type": "constant"
                        },
                        {
                            "text": "U_INVALID_FUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "U_PARSE_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNEXPECTED_TOKEN",
                            "type": "constant"
                        },
                        {
                            "text": "U_FMT_PARSE_ERROR_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_DECIMAL_SEPARATORS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_DECIMAL_SEPERATORS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_EXPONENTIAL_SYMBOLS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MALFORMED_EXPONENTIAL_PATTERN",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_PERCENT_SYMBOLS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_PERMILL_SYMBOLS",
                            "type": "constant"
                        },
                        {
                            "text": "U_MULTIPLE_PAD_SPECIFIERS",
                            "type": "constant"
                        },
                        {
                            "text": "U_PATTERN_SYNTAX_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_ILLEGAL_PAD_POSITION",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNMATCHED_BRACES",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNSUPPORTED_PROPERTY",
                            "type": "constant"
                        },
                        {
                            "text": "U_UNSUPPORTED_ATTRIBUTE",
                            "type": "constant"
                        },
                        {
                            "text": "U_FMT_PARSE_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_INTERNAL_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_ERROR_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_HEX_DIGITS_EXPECTED",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_SEMICOLON_EXPECTED",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_RULE_SYNTAX",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_UNCLOSED_SET",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_ASSIGN_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_VARIABLE_REDFINITION",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_MISMATCHED_PAREN",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_NEW_LINE_IN_QUOTED_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_UNDEFINED_VARIABLE",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_INIT_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_RULE_EMPTY_SET",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_UNRECOGNIZED_OPTION",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_MALFORMED_RULE_TAG",
                            "type": "constant"
                        },
                        {
                            "text": "U_BRK_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_INTERNAL_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_ERROR_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_RULE_SYNTAX",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_INVALID_STATE",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_BAD_ESCAPE_SEQUENCE",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_PROPERTY_SYNTAX",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_UNIMPLEMENTED",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_MISMATCHED_PAREN",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_NUMBER_TOO_BIG",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_BAD_INTERVAL",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_MAX_LT_MIN",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_INVALID_BACK_REF",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_INVALID_FLAG",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_LOOK_BEHIND_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_SET_CONTAINS_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "U_REGEX_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_PROHIBITED_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_ERROR_START",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_UNASSIGNED_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_CHECK_BIDI_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_STD3_ASCII_RULES_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_ACE_PREFIX_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_VERIFICATION_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_LABEL_TOO_LONG_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_ZERO_LENGTH_LABEL_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_IDNA_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "U_STRINGPREP_PROHIBITED_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_STRINGPREP_UNASSIGNED_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_STRINGPREP_CHECK_BIDI_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "U_ERROR_LIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_DEFAULT",
                            "description": "Prohibit processing of unassigned codepoints in the input for IDN functions and do not check if the input conforms to domain name ASCII rules.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ALLOW_UNASSIGNED",
                            "description": "Allow processing of unassigned codepoints in the input for IDN functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_USE_STD3_RULES",
                            "description": "Check if the input for IDN functions conforms to domain name ASCII rules.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_CHECK_BIDI",
                            "description": "Check whether the input conforms to the BiDi rules.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_CHECK_CONTEXTJ",
                            "description": "Check whether the input conforms to the CONTEXTJ rules.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_NONTRANSITIONAL_TO_ASCII",
                            "description": "Option for nontransitional processing in <b>idn_to_ascii<\/b>. Transitional processing is activated by default. This option is ignored by the IDNA2003 implementation.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_NONTRANSITIONAL_TO_UNICODE",
                            "description": "Option for nontransitional processing in <b>idn_to_utf8<\/b>. Transitional processing is activated by default. This option is ignored by the IDNA2003 implementation.",
                            "type": "constant"
                        },
                        {
                            "text": "INTL_IDNA_VARIANT_2003",
                            "description": "Use IDNA 2003 algorithm in <b>idn_to_utf8<\/b> and <b>idn_to_ascii<\/b>. This is the default.",
                            "type": "constant"
                        },
                        {
                            "text": "INTL_IDNA_VARIANT_UTS46",
                            "description": "Use UTS #46 algorithm in <b>idn_to_utf8<\/b> and <b>idn_to_ascii<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_EMPTY_LABEL",
                            "description": "Errors reported in a bitset returned by the UTS #46 algorithm in <b>idn_to_utf8<\/b> and <b>idn_to_ascii<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_LABEL_TOO_LONG",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_DOMAIN_NAME_TOO_LONG",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_LEADING_HYPHEN",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_TRAILING_HYPHEN",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_HYPHEN_3_4",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_LEADING_COMBINING_MARK",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_DISALLOWED",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_PUNYCODE",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_LABEL_HAS_DOT",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_INVALID_ACE_LABEL",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_BIDI",
                            "type": "constant"
                        },
                        {
                            "text": "IDNA_ERROR_CONTEXTJ",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_HEX_TAG",
                            "description": "All &lt; and &gt; are converted to \\u003C and \\u003E.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_HEX_AMP",
                            "description": "All &#38;#38;s are converted to \\u0026.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_HEX_APOS",
                            "description": "All ' are converted to \\u0027.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_HEX_QUOT",
                            "description": "All \" are converted to \\u0022.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_FORCE_OBJECT",
                            "description": "Outputs an object rather than an array when a non-associative array is used. Especially useful when the recipient of the output is expecting an object and the array is empty.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_NUMERIC_CHECK",
                            "description": "Encodes numeric strings as numbers.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_UNESCAPED_SLASHES",
                            "description": "Don't escape \/.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_PRETTY_PRINT",
                            "description": "Use whitespace in returned data to format it.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_UNESCAPED_UNICODE",
                            "description": "Encode multibyte Unicode characters literally (default is to escape as \\uXXXX).",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_PARTIAL_OUTPUT_ON_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_STATE_MISMATCH",
                            "description": "Occurs with underflow or with the modes mismatch.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_CTRL_CHAR",
                            "description": "Control character error, possibly incorrectly encoded.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_UTF8",
                            "description": "Malformed UTF-8 characters, possibly incorrectly encoded. This constant is available as of PHP 5.3.3.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_RECURSION",
                            "description": "<p> The object or array passed to <b>json_encode<\/b> include recursive references and cannot be encoded.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_INF_OR_NAN",
                            "description": "<p> The value passed to <b>json_encode<\/b> includes either <b>NAN<\/b> or <b>INF<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_UNSUPPORTED_TYPE",
                            "description": "<p> A value of an unsupported type was given to <b>json_encode<\/b>, such as a resource.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_NONE",
                            "description": "No error has occurred.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_DEPTH",
                            "description": "The maximum stack depth has been exceeded.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_ERROR_SYNTAX",
                            "description": "Syntax error.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_OBJECT_AS_ARRAY",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_PARSER_NOTSTRICT",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_BIGINT_AS_STRING",
                            "description": "Encodes large integers as their original string value.",
                            "type": "constant"
                        },
                        {
                            "text": "JSON_PRESERVE_ZERO_FRACTION",
                            "description": "Ensures that float values are always encoded as a float value.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_ESCAPE_FILTER",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_ESCAPE_DN",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_DEREF_NEVER",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_DEREF_SEARCHING",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_DEREF_FINDING",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_DEREF_ALWAYS",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_MODIFY_BATCH_REMOVE",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_MODIFY_BATCH_ADD",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_MODIFY_BATCH_REMOVE_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_MODIFY_BATCH_REPLACE",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_DEREF",
                            "description": "Specifies alternative rules for following aliases at the server.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_SIZELIMIT",
                            "description": "<p> Specifies the maximum number of entries that can be returned on a search operation.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_TIMELIMIT",
                            "description": "Specifies the number of seconds to wait for search results.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_NETWORK_TIMEOUT",
                            "description": "Option for <b>ldap_set_option<\/b> to allow setting network timeout.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_PROTOCOL_VERSION",
                            "description": "Specifies the LDAP protocol to be used (V2 or V3).",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_ERROR_NUMBER",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_REFERRALS",
                            "description": "Specifies whether to automatically follow referrals returned by the LDAP server.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_RESTART",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_HOST_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_ERROR_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_MATCHED_DN",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_SERVER_CONTROLS",
                            "description": "Specifies a default list of server controls to be sent with each request.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_CLIENT_CONTROLS",
                            "description": "Specifies a default list of client controls to be processed with each request.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_DEBUG_LEVEL",
                            "description": "Specifies a bitwise level for debug traces.",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_X_SASL_MECH",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_X_SASL_REALM",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_X_SASL_AUTHCID",
                            "type": "constant"
                        },
                        {
                            "text": "LDAP_OPT_X_SASL_AUTHZID",
                            "type": "constant"
                        },
                        {
                            "text": "EV_TIMEOUT",
                            "description": "Start of PECL libevent v.0.0.4",
                            "type": "constant"
                        },
                        {
                            "text": "EV_READ",
                            "description": "This flag indicates an event that becomes active when the provided file descriptor is ready for reading.",
                            "type": "constant"
                        },
                        {
                            "text": "EV_WRITE",
                            "description": "This flag indicates an event that becomes active when the provided file descriptor is ready for writing.",
                            "type": "constant"
                        },
                        {
                            "text": "EV_SIGNAL",
                            "description": "Used to implement signal detection.",
                            "type": "constant"
                        },
                        {
                            "text": "EV_PERSIST",
                            "description": "Indicates that the event is persistent.",
                            "type": "constant"
                        },
                        {
                            "text": "EVLOOP_ONCE",
                            "description": "Event loop modes",
                            "type": "constant"
                        },
                        {
                            "text": "EVLOOP_NONBLOCK",
                            "description": "Event base loop mode.",
                            "type": "constant"
                        },
                        {
                            "text": "EVBUFFER_READ",
                            "description": "Buffered event error codes (second argument in buffer's error-callback)",
                            "type": "constant"
                        },
                        {
                            "text": "EVBUFFER_WRITE",
                            "description": "An event occured during a write operation on the bufferevent.",
                            "type": "constant"
                        },
                        {
                            "text": "EVBUFFER_EOF",
                            "description": "We finished a requested connection on the bufferevent.",
                            "type": "constant"
                        },
                        {
                            "text": "EVBUFFER_ERROR",
                            "description": "An error occurred during a bufferevent operation. For more information on what the error was, call {@link socket_strerror}().",
                            "type": "constant"
                        },
                        {
                            "text": "EVBUFFER_TIMEOUT",
                            "description": "A timeout expired on the bufferevent.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_VERSION",
                            "description": "libxml version like 20605 or 20617",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_DOTTED_VERSION",
                            "leftLabel": "string",
                            "description": "libxml version like 2.6.5 or 2.6.17",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_LOADED_VERSION",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOENT",
                            "description": "Substitute entities",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_DTDLOAD",
                            "description": "Load the external subset",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_DTDATTR",
                            "description": "Default DTD attributes",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_DTDVALID",
                            "description": "Validate with the DTD",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOERROR",
                            "description": "Suppress error reports",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOWARNING",
                            "description": "Suppress warning reports",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOBLANKS",
                            "description": "Remove blank nodes",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_XINCLUDE",
                            "description": "Implement XInclude substitution",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NSCLEAN",
                            "description": "Remove redundant namespaces declarations",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOCDATA",
                            "description": "Merge CDATA as text nodes",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NONET",
                            "description": "Disable network access when loading documents",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_PEDANTIC",
                            "description": "Sets XML_PARSE_PEDANTIC flag, which enables pedentic error reporting.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_COMPACT",
                            "description": "Activate small nodes allocation optimization. This may speed up your application without needing to change the code.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_BIGLINES",
                            "description": "Allows line numbers greater than 65535 to be reported correctly.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOXMLDECL",
                            "description": "Drop the XML declaration when saving a document <p> Only available in Libxml &gt;= 2.6.21 <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_PARSEHUGE",
                            "description": "Sets XML_PARSE_HUGE flag, which relaxes any hardcoded limit from the parser. This affects limits like maximum depth of a document or the entity recursion, as well as limits of the size of text nodes.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_NOEMPTYTAG",
                            "description": "Expand empty tags (e.g. &lt;br\/&gt; to &lt;br&gt;&lt;\/br&gt;) <p> This option is currently just available in the and functions.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_SCHEMA_CREATE",
                            "description": "Create default\/fixed value nodes during XSD schema validation <p> Only available in Libxml &gt;= 2.6.14 (as of PHP &gt;= 5.5.2) <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_HTML_NOIMPLIED",
                            "description": "Sets HTML_PARSE_NOIMPLIED flag, which turns off the automatic adding of implied html\/body.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_HTML_NODEFDTD",
                            "description": "Sets HTML_PARSE_NODEFDTD flag, which prevents a default doctype being added when one is not found.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_ERR_NONE",
                            "description": "No errors",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_ERR_WARNING",
                            "description": "A simple warning",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_ERR_ERROR",
                            "description": "A recoverable error",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_ERR_FATAL",
                            "description": "A fatal error",
                            "type": "constant"
                        },
                        {
                            "text": "MB_OVERLOAD_MAIL",
                            "type": "constant"
                        },
                        {
                            "text": "MB_OVERLOAD_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "MB_OVERLOAD_REGEX",
                            "type": "constant"
                        },
                        {
                            "text": "MB_CASE_UPPER",
                            "type": "constant"
                        },
                        {
                            "text": "MB_CASE_LOWER",
                            "type": "constant"
                        },
                        {
                            "text": "MB_CASE_TITLE",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_ENCRYPT",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_DECRYPT",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_DEV_RANDOM",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_DEV_URANDOM",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_RAND",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_3DES",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_ARCFOUR_IV",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_ARCFOUR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_BLOWFISH",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_BLOWFISH_COMPAT",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_CAST_128",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_CAST_256",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_CRYPT",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_DES",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_ENIGNA",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_GOST",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_LOKI97",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_PANAMA",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_RC2",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_RIJNDAEL_128",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_RIJNDAEL_192",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_RIJNDAEL_256",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_SAFER64",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_SAFER128",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_SAFERPLUS",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_SERPENT",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_THREEWAY",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_TRIPLEDES",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_TWOFISH",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_WAKE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_XTEA",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_IDEA",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MARS",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_RC6",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_SKIPJACK",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MODE_CBC",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MODE_CFB",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MODE_ECB",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MODE_NOFB",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MODE_OFB",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MCRYPT_MODE_STREAM",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "MEMCACHE_COMPRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "MEMCACHE_USER1",
                            "type": "constant"
                        },
                        {
                            "text": "MEMCACHE_USER2",
                            "type": "constant"
                        },
                        {
                            "text": "MEMCACHE_USER3",
                            "type": "constant"
                        },
                        {
                            "text": "MEMCACHE_USER4",
                            "type": "constant"
                        },
                        {
                            "text": "MEMCACHE_HAVE_SESSION",
                            "type": "constant"
                        },
                        {
                            "text": "MING_NEW",
                            "type": "constant"
                        },
                        {
                            "text": "MING_ZLIB",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_HIT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_DOWN",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_OVER",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_UP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_MOUSEUPOUTSIDE",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_DRAGOVER",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_DRAGOUT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_MOUSEUP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_MOUSEDOWN",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_MOUSEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFBUTTON_MOUSEOVER",
                            "type": "constant"
                        },
                        {
                            "text": "SWFFILL_RADIAL_GRADIENT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFFILL_LINEAR_GRADIENT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFFILL_TILED_BITMAP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFFILL_CLIPPED_BITMAP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_HASLENGTH",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_NOEDIT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_PASSWORD",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_MULTILINE",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_WORDWRAP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_DRAWBOX",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_NOSELECT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_HTML",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_USEFONT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_AUTOSIZE",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_ALIGN_LEFT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_ALIGN_RIGHT",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_ALIGN_CENTER",
                            "type": "constant"
                        },
                        {
                            "text": "SWFTEXTFIELD_ALIGN_JUSTIFY",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_ONLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_ENTERFRAME",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_UNLOAD",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_MOUSEMOVE",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_MOUSEDOWN",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_MOUSEUP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_KEYDOWN",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_KEYUP",
                            "type": "constant"
                        },
                        {
                            "text": "SWFACTION_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_NOT_COMPRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_ADPCM_COMPRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_MP3_COMPRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_NOT_COMPRESSED_LE",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_NELLY_COMPRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_5KHZ",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_11KHZ",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_22KHZ",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_44KHZ",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_8BITS",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_16BITS",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_MONO",
                            "type": "constant"
                        },
                        {
                            "text": "SWF_SOUND_STEREO",
                            "type": "constant"
                        },
                        {
                            "text": "MSSQL_ASSOC",
                            "description": "Return an associative array. Used on mssql_fetch_array's result_type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "MSSQL_NUM",
                            "description": "Return an array with numeric keys. Used on mssql_fetch_array's result_type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "MSSQL_BOTH",
                            "description": "Return an array with both numeric keys and keys with their field name. This is the default value for mssql_fetch_array's result_type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLTEXT",
                            "description": "Indicates the 'TEXT' type in MSSQL, used by mssql_bind's type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLVARCHAR",
                            "description": "Indicates the 'VARCHAR' type in MSSQL, used by mssql_bind's type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLCHAR",
                            "description": "Indicates the 'CHAR' type in MSSQL, used by mssql_bind's type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLINT1",
                            "description": "Represents one byte, with a range of -128 to 127.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLINT2",
                            "description": "Represents two bytes, with a range of -32768 to 32767.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLINT4",
                            "description": "Represents four bytes, with a range of -2147483648 to 2147483647.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLBIT",
                            "description": "Indicates the 'BIT' type in MSSQL, used by mssql_bind's type parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLFLT4",
                            "description": "Represents an four byte float.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLFLT8",
                            "description": "Represents an eight byte float.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLFLTN",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_ASSOC",
                            "description": "Columns are returned into the array having the fieldname as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_NUM",
                            "description": "Columns are returned into the array having a numerical index to the fields. This index starts with 0, the first field in the result.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_BOTH",
                            "description": "Columns are returned into the array having both a numerical index and the fieldname as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_CLIENT_COMPRESS",
                            "description": "Use compression protocol",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_CLIENT_SSL",
                            "description": "Use SSL encryption. This flag is only available with version 4.x of the MySQL client library or newer. Version 3.23.x is bundled both with PHP 4 and Windows binaries of PHP 5.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_CLIENT_INTERACTIVE",
                            "description": "Allow interactive_timeout seconds (instead of wait_timeout) of inactivity before closing the connection.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQL_CLIENT_IGNORE_SPACE",
                            "description": "Allow space after function names",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_READ_DEFAULT_GROUP",
                            "description": "<p> Read options from the named group from my.cnf or the file specified with <b>MYSQLI_READ_DEFAULT_FILE<\/b> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_READ_DEFAULT_FILE",
                            "description": "<p> Read options from the named option file instead of from my.cnf <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_OPT_CONNECT_TIMEOUT",
                            "description": "<p> Connect timeout in seconds <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_OPT_LOCAL_INFILE",
                            "description": "<p> Enables command LOAD LOCAL INFILE <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SERVER_PUBLIC_KEY",
                            "description": "<p> RSA public key file used with the SHA-256 based authentication.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_INIT_COMMAND",
                            "description": "<p> Command to execute when connecting to MySQL server. Will automatically be re-executed when reconnecting.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_OPT_NET_CMD_BUFFER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_OPT_NET_READ_BUFFER_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_OPT_INT_AND_FLOAT_NATIVE",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CLIENT_SSL",
                            "description": "<p> Use SSL (encrypted protocol). This option should not be set by application programs; it is set internally in the MySQL client library <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CLIENT_COMPRESS",
                            "description": "<p> Use compression protocol <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CLIENT_INTERACTIVE",
                            "description": "<p> Allow interactive_timeout seconds (instead of wait_timeout seconds) of inactivity before closing the connection. The client's session wait_timeout variable will be set to the value of the session interactive_timeout variable.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CLIENT_IGNORE_SPACE",
                            "description": "<p> Allow spaces after function names. Makes all functions names reserved words.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CLIENT_NO_SCHEMA",
                            "description": "<p> Don't allow the db_name.tbl_name.col_name syntax.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CLIENT_FOUND_ROWS",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_STORE_RESULT",
                            "description": "<p> For using buffered resultsets <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_USE_RESULT",
                            "description": "<p> For using unbuffered resultsets <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_ASYNC",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_ASSOC",
                            "description": "<p> Columns are returned into the array having the fieldname as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_NUM",
                            "description": "<p> Columns are returned into the array having an enumerated index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_BOTH",
                            "description": "<p> Columns are returned into the array having both a numerical index and the fieldname as the associative index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_STMT_ATTR_CURSOR_TYPE",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CURSOR_TYPE_NO_CURSOR",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CURSOR_TYPE_READ_ONLY",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CURSOR_TYPE_FOR_UPDATE",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_CURSOR_TYPE_SCROLLABLE",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_STMT_ATTR_PREFETCH_ROWS",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_NOT_NULL_FLAG",
                            "description": "<p> Indicates that a field is defined as NOT NULL <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_PRI_KEY_FLAG",
                            "description": "<p> Field is part of a primary index <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_UNIQUE_KEY_FLAG",
                            "description": "<p> Field is part of a unique index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_MULTIPLE_KEY_FLAG",
                            "description": "<p> Field is part of an index.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_BLOB_FLAG",
                            "description": "<p> Field is defined as BLOB <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_UNSIGNED_FLAG",
                            "description": "<p> Field is defined as UNSIGNED <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_ZEROFILL_FLAG",
                            "description": "<p> Field is defined as ZEROFILL <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_AUTO_INCREMENT_FLAG",
                            "description": "<p> Field is defined as AUTO_INCREMENT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TIMESTAMP_FLAG",
                            "description": "<p> Field is defined as TIMESTAMP <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SET_FLAG",
                            "description": "<p> Field is defined as SET <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_NUM_FLAG",
                            "description": "<p> Field is defined as NUMERIC <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_PART_KEY_FLAG",
                            "description": "<p> Field is part of an multi-index <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_GROUP_FLAG",
                            "description": "<p> Field is part of GROUP BY <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_ENUM_FLAG",
                            "description": "<p> Field is defined as ENUM. Available since PHP 5.3.0.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_BINARY_FLAG",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_NO_DEFAULT_VALUE_FLAG",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_ON_UPDATE_NOW_FLAG",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_DECIMAL",
                            "description": "<p> Field is defined as DECIMAL <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_TINY",
                            "description": "<p> Field is defined as TINYINT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_SHORT",
                            "description": "<p> Field is defined as SMALLINT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_LONG",
                            "description": "<p> Field is defined as INT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_FLOAT",
                            "description": "<p> Field is defined as FLOAT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_DOUBLE",
                            "description": "<p> Field is defined as DOUBLE <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_NULL",
                            "description": "<p> Field is defined as DEFAULT NULL <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_TIMESTAMP",
                            "description": "<p> Field is defined as TIMESTAMP <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_LONGLONG",
                            "description": "<p> Field is defined as BIGINT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_INT24",
                            "description": "<p> Field is defined as MEDIUMINT <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_DATE",
                            "description": "<p> Field is defined as DATE <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_TIME",
                            "description": "<p> Field is defined as TIME <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_DATETIME",
                            "description": "<p> Field is defined as DATETIME <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_YEAR",
                            "description": "<p> Field is defined as YEAR <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_NEWDATE",
                            "description": "<p> Field is defined as DATE <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_ENUM",
                            "description": "<p> Field is defined as ENUM <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_SET",
                            "description": "<p> Field is defined as SET <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_TINY_BLOB",
                            "description": "<p> Field is defined as TINYBLOB <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_MEDIUM_BLOB",
                            "description": "<p> Field is defined as MEDIUMBLOB <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_LONG_BLOB",
                            "description": "<p> Field is defined as LONGBLOB <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_BLOB",
                            "description": "<p> Field is defined as BLOB <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_VAR_STRING",
                            "description": "<p> Field is defined as VARCHAR <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_STRING",
                            "description": "<p> Field is defined as STRING <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_CHAR",
                            "description": "<p> Field is defined as CHAR <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_INTERVAL",
                            "description": "<p> Field is defined as INTERVAL <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_GEOMETRY",
                            "description": "<p> Field is defined as GEOMETRY <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_NEWDECIMAL",
                            "description": "<p> Precision math DECIMAL or NUMERIC field (MySQL 5.0.3 and up) <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_TYPE_BIT",
                            "description": "<p> Field is defined as BIT (MySQL 5.0.3 and up) <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SET_CHARSET_NAME",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_NO_DATA",
                            "description": "<p> No more data available for bind variable <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_DATA_TRUNCATED",
                            "description": "<p> Data truncation occurred. Available since PHP 5.1.0 and MySQL 5.0.5.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REPORT_INDEX",
                            "description": "<p> Report if no index or bad index was used in a query.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REPORT_ERROR",
                            "description": "<p> Report errors from mysqli function calls.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REPORT_STRICT",
                            "description": "<p> Throw a mysqli_sql_exception for errors instead of warnings.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REPORT_ALL",
                            "description": "<p> Set all options on (report all).",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REPORT_OFF",
                            "description": "<p> Turns reporting off.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_DEBUG_TRACE_ENABLED",
                            "description": "<p> Is set to 1 if <b>mysqli_debug<\/b> functionality is enabled.",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SERVER_QUERY_NO_GOOD_INDEX_USED",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SERVER_QUERY_NO_INDEX_USED",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_GRANT",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_LOG",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_TABLES",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_HOSTS",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_STATUS",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_THREADS",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_SLAVE",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_MASTER",
                            "description": "<p> <\/p>",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SERVER_QUERY_WAS_SLOW",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_REFRESH_BACKUP_LOG",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_OPT_SSL_VERIFY_SERVER_CERT",
                            "description": "End of mysqli v.0.1",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SET_CHARSET_DIR",
                            "type": "constant"
                        },
                        {
                            "text": "MYSQLI_SERVER_PS_OUT_PARAMS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_BLACK",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_RED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_GREEN",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_YELLOW",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_BLUE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_MAGENTA",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_CYAN",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_COLOR_WHITE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_DOWN",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_UP",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_LEFT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_RIGHT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_HOME",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_END",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_BACKSPACE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_MOUSE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F0",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F1",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F2",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F3",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F4",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F5",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F6",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F7",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F8",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F9",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F10",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F11",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_F12",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_DL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_IL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_DC",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_IC",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_EIC",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_CLEAR",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_EOS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_EOL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SF",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SR",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_NPAGE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_PPAGE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_STAB",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_CTAB",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_CATAB",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_ENTER",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SRESET",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_RESET",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_PRINT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_LL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_A1",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_A3",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_B2",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_C1",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_C3",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_BTAB",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_BEG",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_CANCEL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_CLOSE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_COMMAND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_COPY",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_CREATE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_EXIT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_FIND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_HELP",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_MARK",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_MESSAGE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_MOVE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_NEXT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_OPEN",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_OPTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_PREVIOUS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_REDO",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_REFERENCE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_REFRESH",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_REPLACE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_RESTART",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_RESUME",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SAVE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SBEG",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SCANCEL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SCOMMAND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SCOPY",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SCREATE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SDC",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SDL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SELECT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SEND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SEOL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SEXIT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SFIND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SHELP",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SHOME",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SIC",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SLEFT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SMESSAGE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SMOVE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SNEXT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SOPTIONS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SPREVIOUS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SPRINT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SREDO",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SREPLACE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SRIGHT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SRSUME",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SSAVE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SSUSPEND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SUNDO",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_SUSPEND",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_UNDO",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_KEY_RESIZE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_STANDOUT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_UNDERLINE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_REVERSE",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_BLINK",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_DIM",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_BOLD",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_PROTECT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_INVIS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_ALTCHARSET",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_A_CHARTEXT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON1_PRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON1_RELEASED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON1_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON1_DOUBLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON1_TRIPLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON2_PRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON2_RELEASED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON2_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON2_DOUBLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON2_TRIPLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON3_PRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON3_RELEASED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON3_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON3_DOUBLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON3_TRIPLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON4_PRESSED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON4_RELEASED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON4_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON4_DOUBLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON4_TRIPLE_CLICKED",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON_SHIFT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON_CTRL",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_BUTTON_ALT",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_ALL_MOUSE_EVENTS",
                            "type": "constant"
                        },
                        {
                            "text": "NCURSES_REPORT_MOUSE_POSITION",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_SIG_METHOD_RSASHA1",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_SIG_METHOD_HMACSHA1",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_SIG_METHOD_HMACSHA256",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_AUTH_TYPE_AUTHORIZATION",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_AUTH_TYPE_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_AUTH_TYPE_URI",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_AUTH_TYPE_FORM",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_HTTP_METHOD_GET",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_HTTP_METHOD_POST",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_HTTP_METHOD_PUT",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_HTTP_METHOD_HEAD",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_HTTP_METHOD_DELETE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_REQENGINE_STREAMS",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_REQENGINE_CURL",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_OK",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_BAD_NONCE",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_BAD_TIMESTAMP",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_CONSUMER_KEY_UNKNOWN",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_CONSUMER_KEY_REFUSED",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_INVALID_SIGNATURE",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_TOKEN_USED",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_TOKEN_EXPIRED",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_TOKEN_REJECTED",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_VERIFIER_INVALID",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_PARAMETER_ABSENT",
                            "type": "constant"
                        },
                        {
                            "text": "OAUTH_SIGNATURE_METHOD_REJECTED",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_DEFAULT",
                            "description": "See <b>OCI_NO_AUTO_COMMIT<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_SYSOPER",
                            "description": "Used with {@see oci_connect} to connect with the SYSOPER privilege. The <i>php.ini<\/i> setting oci8.privileged_connect should be enabled to use this.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_SYSDBA",
                            "description": "Used with {@see oci_connect} to connect with the SYSDBA privilege. The <i>php.ini<\/i> setting oci8.privileged_connect should be enabled to use this.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_CRED_EXT",
                            "description": "Used with {@see oci_connect} for using Oracles' External or OS authentication. Introduced in PHP 5.3 and PECL OCI8 1.3.4.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_DESCRIBE_ONLY",
                            "description": "Statement execution mode for {@see oci_execute}. Use this mode if you want meta data such as the column names but don't want to fetch rows from the query.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_COMMIT_ON_SUCCESS",
                            "description": "Statement execution mode for {@see oci_execute} call. Automatically commit changes when the statement has succeeded.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_NO_AUTO_COMMIT",
                            "description": "Statement execution mode for {@see oci_execute}. The transaction is not automatically committed when using this mode. For readability in new code, use this value instead of the older, equivalent <b>OCI_DEFAULT<\/b> constant.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_EXACT_FETCH",
                            "description": "Obsolete. Statement fetch mode. Used when the application knows in advance exactly how many rows it will be fetching.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_SEEK_SET",
                            "description": "Used with to set the seek position.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_SEEK_CUR",
                            "description": "Used with to set the seek position.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_SEEK_END",
                            "description": "Used with to set the seek position.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_LOB_BUFFER_FREE",
                            "description": "Used with to free buffers used.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_BFILEE",
                            "description": "The same as <b>OCI_B_BFILE<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_CFILEE",
                            "description": "The same as <b>OCI_B_CFILEE<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_CLOB",
                            "description": "The same as <b>OCI_B_CLOB<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_BLOB",
                            "description": "The same as <b>OCI_B_BLOB<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_RDD",
                            "description": "The same as <b>OCI_B_ROWID<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_INT",
                            "description": "The same as <b>OCI_B_INT<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_NUM",
                            "description": "The same as <b>OCI_B_NUM<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_RSET",
                            "description": "The same as <b>OCI_B_CURSOR<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_AFC",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of CHAR.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_CHR",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of VARCHAR2.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_VCS",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of VARCHAR.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_AVC",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of VARCHAR2.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_STR",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of STRING.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_LVC",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of LONG VARCHAR.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_FLT",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of FLOAT.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_UIN",
                            "description": "Not supported.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_LNG",
                            "description": "Used with {@see oci_bind_by_name} to bind LONG values.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_LBI",
                            "description": "Used with {@see oci_bind_by_name} to bind LONG RAW values.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_BIN",
                            "description": "The same as <b>OCI_B_BIN<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_ODT",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of LONG.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_BDOUBLE",
                            "description": "Not supported.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_BFLOAT",
                            "description": "Not supported.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_NTY",
                            "description": "Used with {@see oci_bind_by_name} when binding named data types. Note: in PHP &lt; 5.0 it was called <b>OCI_B_SQLT_NTY<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_NTY",
                            "description": "The same as <b>OCI_B_NTY<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_SYSDATE",
                            "leftLabel": "string",
                            "description": "Obsolete.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_BFILE",
                            "description": "Used with {@see oci_bind_by_name} when binding BFILEs.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_CFILEE",
                            "description": "Used with {@see oci_bind_by_name} when binding CFILEs.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_CLOB",
                            "description": "Used with {@see oci_bind_by_name} when binding CLOBs.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_BLOB",
                            "description": "Used with {@see oci_bind_by_name} when binding BLOBs.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_ROWID",
                            "description": "Used with {@see oci_bind_by_name} when binding ROWIDs.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_CURSOR",
                            "description": "Used with {@see oci_bind_by_name} when binding cursors, previously allocated with {@see oci_new_descriptor}.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_BIN",
                            "description": "Used with {@see oci_bind_by_name} to bind RAW values.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_INT",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of INTEGER.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_NUM",
                            "description": "Used with {@see oci_bind_array_by_name} to bind arrays of NUMBER.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_FETCHSTATEMENT_BY_COLUMN",
                            "description": "Default mode of {@see oci_fetch_all}.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_FETCHSTATEMENT_BY_ROW",
                            "description": "Alternative mode of {@see oci_fetch_all}.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_ASSOC",
                            "description": "Used with {@see oci_fetch_all} and {@see oci_fetch_array} to get results as an associative array.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_NUM",
                            "description": "Used with {@see oci_fetch_all} and {@see oci_fetch_array} to get results as an enumerated array.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_BOTH",
                            "description": "Used with {@see oci_fetch_all} and {@see oci_fetch_array} to get results as an array with both associative and number indices.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_RETURN_NULLS",
                            "description": "Used with {@see oci_fetch_array} to get empty array elements if the row items value is <b>NULL<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_RETURN_LOBS",
                            "description": "Used with {@see oci_fetch_array} to get the data value of the LOB instead of the descriptor.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_DTYPE_FILE",
                            "description": "This flag tells {@see oci_new_descriptor} to initialize a new FILE descriptor.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_DTYPE_LOB",
                            "description": "This flag tells {@see oci_new_descriptor} to initialize a new LOB descriptor.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_DTYPE_ROWID",
                            "description": "This flag tells {@see oci_new_descriptor} to initialize a new ROWID descriptor.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_D_FILE",
                            "description": "The same as <b>OCI_DTYPE_FILE<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_D_LOB",
                            "description": "The same as <b>OCI_DTYPE_LOB<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_D_ROWID",
                            "description": "The same as <b>OCI_DTYPE_ROWID<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_TEMP_CLOB",
                            "description": "Used with to indicate that a temporary CLOB should be created.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_TEMP_BLOB",
                            "description": "Used with to indicate that a temporary BLOB should be created.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLT_BOL",
                            "description": "(PECL OCI8 &gt;= 2.0.7)<br\/> The same as <b>OCI_B_BOL<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OCI_B_BOL",
                            "description": "(PECL OCI8 &gt;= 2.0.7)<br\/> Used with {@see oci_bind_by_name} when binding PL\/SQL BOOLEAN.",
                            "type": "constant"
                        },
                        {
                            "text": "ODBC_TYPE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "ODBC_BINMODE_PASSTHRU",
                            "type": "constant"
                        },
                        {
                            "text": "ODBC_BINMODE_RETURN",
                            "type": "constant"
                        },
                        {
                            "text": "ODBC_BINMODE_CONVERT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_ODBC_CURSORS",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CUR_USE_DRIVER",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CUR_USE_IF_NEEDED",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CUR_USE_ODBC",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CONCURRENCY",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CONCUR_READ_ONLY",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CONCUR_LOCK",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CONCUR_ROWVER",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CONCUR_VALUES",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CURSOR_TYPE",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CURSOR_FORWARD_ONLY",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CURSOR_KEYSET_DRIVEN",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CURSOR_DYNAMIC",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CURSOR_STATIC",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_KEYSET_SIZE",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_FETCH_FIRST",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_FETCH_NEXT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_CHAR",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_VARCHAR",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_LONGVARCHAR",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_DECIMAL",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_NUMERIC",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_BIT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_TINYINT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_SMALLINT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_INTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_BIGINT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_REAL",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_FLOAT",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_DOUBLE",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_BINARY",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_VARBINARY",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_LONGVARBINARY",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_DATE",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "SQL_TIMESTAMP",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_VERSION_TEXT",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_VERSION_NUMBER",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_SSL_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_SSL_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_NS_SSL_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_SMIME_SIGN",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_SMIME_ENCRYPT",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_CRL_SIGN",
                            "type": "constant"
                        },
                        {
                            "text": "X509_PURPOSE_ANY",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_SHA1",
                            "description": "Used as default algorithm by <b>openssl_sign<\/b> and <b>openssl_verify<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_MD5",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_MD4",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_MD2",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_DSS1",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_SHA224",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_SHA256",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_SHA384",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_SHA512",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ALGO_RMD160",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_DETACHED",
                            "description": "When signing a message, use cleartext signing with the MIME type \"multipart\/signed\". This is the default if you do not specify any <i>flags<\/i> to <b>openssl_pkcs7_sign<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_TEXT",
                            "description": "Adds text\/plain content type headers to encrypted\/signed message. If decrypting or verifying, it strips those headers from the output - if the decrypted or verified message is not of MIME type text\/plain then an error will occur.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_NOINTERN",
                            "description": "When verifying a message, certificates (if any) included in the message are normally searched for the signing certificate. With this option only the certificates specified in the <i>extracerts<\/i> parameter of <b>openssl_pkcs7_verify<\/b> are used. The supplied certificates can still be used as untrusted CAs however.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_NOVERIFY",
                            "description": "Do not verify the signers certificate of a signed message.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_NOCHAIN",
                            "description": "Do not chain verification of signers certificates: that is don't use the certificates in the signed message as untrusted CAs.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_NOCERTS",
                            "description": "When signing a message the signer's certificate is normally included - with this option it is excluded. This will reduce the size of the signed message but the verifier must have a copy of the signers certificate available locally (passed using the <i>extracerts<\/i> to <b>openssl_pkcs7_verify<\/b> for example).",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_NOATTR",
                            "description": "Normally when a message is signed, a set of attributes are included which include the signing time and the supported symmetric algorithms. With this option they are not included.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_BINARY",
                            "description": "Normally the input message is converted to \"canonical\" format which is effectively using CR and LF as end of line: as required by the S\/MIME specification. When this option is present, no translation occurs. This is useful when handling binary data which may not be in MIME format.",
                            "type": "constant"
                        },
                        {
                            "text": "PKCS7_NOSIGS",
                            "description": "Don't try and verify the signatures on a message",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_PKCS1_PADDING",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_SSLV23_PADDING",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_NO_PADDING",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_PKCS1_OAEP_PADDING",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_RC2_40",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_RC2_128",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_RC2_64",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_DES",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_3DES",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_KEYTYPE_RSA",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_KEYTYPE_DSA",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_KEYTYPE_DH",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_KEYTYPE_EC",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_TLSEXT_SERVER_NAME",
                            "description": "Whether SNI support is available or not.",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_AES_128_CBC",
                            "description": "End of openssl v.",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_AES_192_CBC",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_CIPHER_AES_256_CBC",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_RAW_DATA",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_ZERO_PADDING",
                            "type": "constant"
                        },
                        {
                            "text": "OPENSSL_DEFAULT_STREAM_CIPHERS",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_SSLv2_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_SSLv3_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_SSLv23_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLS_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_SSLv2_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_SSLv3_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_SSLv23_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLS_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_ANY_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_ANY_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLSv1_0_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLSv1_1_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CRYPTO_METHOD_TLSv1_2_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "PASSWORD_DEFAULT",
                            "description": "Start of password v.",
                            "type": "constant"
                        },
                        {
                            "text": "PASSWORD_BCRYPT",
                            "description": "<p> The default algorithm to use for hashing if no algorithm is provided.",
                            "type": "constant"
                        },
                        {
                            "text": "WNOHANG",
                            "type": "constant"
                        },
                        {
                            "text": "WUNTRACED",
                            "type": "constant"
                        },
                        {
                            "text": "SIG_IGN",
                            "type": "constant"
                        },
                        {
                            "text": "SIG_DFL",
                            "type": "constant"
                        },
                        {
                            "text": "SIG_ERR",
                            "type": "constant"
                        },
                        {
                            "text": "SIGHUP",
                            "type": "constant"
                        },
                        {
                            "text": "SIGINT",
                            "type": "constant"
                        },
                        {
                            "text": "SIGQUIT",
                            "type": "constant"
                        },
                        {
                            "text": "SIGILL",
                            "type": "constant"
                        },
                        {
                            "text": "SIGTRAP",
                            "type": "constant"
                        },
                        {
                            "text": "SIGABRT",
                            "type": "constant"
                        },
                        {
                            "text": "SIGIOT",
                            "type": "constant"
                        },
                        {
                            "text": "SIGBUS",
                            "type": "constant"
                        },
                        {
                            "text": "SIGFPE",
                            "type": "constant"
                        },
                        {
                            "text": "SIGKILL",
                            "type": "constant"
                        },
                        {
                            "text": "SIGUSR1",
                            "type": "constant"
                        },
                        {
                            "text": "SIGSEGV",
                            "type": "constant"
                        },
                        {
                            "text": "SIGUSR2",
                            "type": "constant"
                        },
                        {
                            "text": "SIGPIPE",
                            "type": "constant"
                        },
                        {
                            "text": "SIGALRM",
                            "type": "constant"
                        },
                        {
                            "text": "SIGTERM",
                            "type": "constant"
                        },
                        {
                            "text": "SIGSTKFLT",
                            "type": "constant"
                        },
                        {
                            "text": "SIGCLD",
                            "type": "constant"
                        },
                        {
                            "text": "SIGCHLD",
                            "type": "constant"
                        },
                        {
                            "text": "SIGCONT",
                            "type": "constant"
                        },
                        {
                            "text": "SIGSTOP",
                            "type": "constant"
                        },
                        {
                            "text": "SIGTSTP",
                            "type": "constant"
                        },
                        {
                            "text": "SIGTTIN",
                            "type": "constant"
                        },
                        {
                            "text": "SIGTTOU",
                            "type": "constant"
                        },
                        {
                            "text": "SIGURG",
                            "type": "constant"
                        },
                        {
                            "text": "SIGXCPU",
                            "type": "constant"
                        },
                        {
                            "text": "SIGXFSZ",
                            "type": "constant"
                        },
                        {
                            "text": "SIGVTALRM",
                            "type": "constant"
                        },
                        {
                            "text": "SIGPROF",
                            "type": "constant"
                        },
                        {
                            "text": "SIGWINCH",
                            "type": "constant"
                        },
                        {
                            "text": "SIGPOLL",
                            "type": "constant"
                        },
                        {
                            "text": "SIGIO",
                            "type": "constant"
                        },
                        {
                            "text": "SIGPWR",
                            "type": "constant"
                        },
                        {
                            "text": "SIGSYS",
                            "type": "constant"
                        },
                        {
                            "text": "SIGBABY",
                            "type": "constant"
                        },
                        {
                            "text": "PRIO_PGRP",
                            "type": "constant"
                        },
                        {
                            "text": "PRIO_USER",
                            "type": "constant"
                        },
                        {
                            "text": "PRIO_PROCESS",
                            "type": "constant"
                        },
                        {
                            "text": "SIG_BLOCK",
                            "type": "constant"
                        },
                        {
                            "text": "SIG_UNBLOCK",
                            "type": "constant"
                        },
                        {
                            "text": "SIG_SETMASK",
                            "type": "constant"
                        },
                        {
                            "text": "SI_USER",
                            "type": "constant"
                        },
                        {
                            "text": "SI_KERNEL",
                            "type": "constant"
                        },
                        {
                            "text": "SI_QUEUE",
                            "type": "constant"
                        },
                        {
                            "text": "SI_TIMER",
                            "type": "constant"
                        },
                        {
                            "text": "SI_MESGQ",
                            "type": "constant"
                        },
                        {
                            "text": "SI_ASYNCIO",
                            "type": "constant"
                        },
                        {
                            "text": "SI_SIGIO",
                            "type": "constant"
                        },
                        {
                            "text": "SI_TKILL",
                            "type": "constant"
                        },
                        {
                            "text": "CLD_EXITED",
                            "type": "constant"
                        },
                        {
                            "text": "CLD_KILLED",
                            "type": "constant"
                        },
                        {
                            "text": "CLD_DUMPED",
                            "type": "constant"
                        },
                        {
                            "text": "CLD_TRAPPED",
                            "type": "constant"
                        },
                        {
                            "text": "CLD_STOPPED",
                            "type": "constant"
                        },
                        {
                            "text": "CLD_CONTINUED",
                            "type": "constant"
                        },
                        {
                            "text": "TRAP_BRKPT",
                            "type": "constant"
                        },
                        {
                            "text": "TRAP_TRACE",
                            "type": "constant"
                        },
                        {
                            "text": "POLL_IN",
                            "type": "constant"
                        },
                        {
                            "text": "POLL_OUT",
                            "type": "constant"
                        },
                        {
                            "text": "POLL_MSG",
                            "type": "constant"
                        },
                        {
                            "text": "POLL_ERR",
                            "type": "constant"
                        },
                        {
                            "text": "POLL_PRI",
                            "type": "constant"
                        },
                        {
                            "text": "POLL_HUP",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_ILLOPC",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_ILLOPN",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_ILLADR",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_ILLTRP",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_PRVOPC",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_PRVREG",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_COPROC",
                            "type": "constant"
                        },
                        {
                            "text": "ILL_BADSTK",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_INTDIV",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_INTOVF",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_FLTDIV",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_FLTOVF",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_FLTUND",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_FLTRES",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_FLTINV",
                            "type": "constant"
                        },
                        {
                            "text": "FPE_FLTSUB",
                            "type": "constant"
                        },
                        {
                            "text": "SEGV_MAPERR",
                            "type": "constant"
                        },
                        {
                            "text": "SEGV_ACCERR",
                            "type": "constant"
                        },
                        {
                            "text": "BUS_ADRALN",
                            "type": "constant"
                        },
                        {
                            "text": "BUS_ADRERR",
                            "type": "constant"
                        },
                        {
                            "text": "BUS_OBJERR",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EINTR",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ECHILD",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EINVAL",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EAGAIN",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ESRCH",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EACCES",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EPERM",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ENOMEM",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_E2BIG",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EIO",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EISDIR",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ELIBBAD",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ELOOP",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_EMFILE",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ENAMETOOLONG",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ENFILE",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ENOENT",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ENOEXEC",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ENOTDIR",
                            "type": "constant"
                        },
                        {
                            "text": "PCNTL_ETXTBSY",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_PATTERN_ORDER",
                            "description": "Orders results so that $matches[0] is an array of full pattern matches, $matches[1] is an array of strings matched by the first parenthesized subpattern, and so on. This flag is only used with <b>preg_match_all<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_JIT_STACKLIMIT_ERROR",
                            "description": "Returned by {@see preg_last_error()} if the last PCRE function failed due to limited JIT stack space.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_SET_ORDER",
                            "description": "Orders results so that $matches[0] is an array of first set of matches, $matches[1] is an array of second set of matches, and so on. This flag is only used with <b>preg_match_all<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_OFFSET_CAPTURE",
                            "description": "See the description of <b>PREG_SPLIT_OFFSET_CAPTURE<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_SPLIT_NO_EMPTY",
                            "description": "This flag tells <b>preg_split<\/b> to return only non-empty pieces.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_SPLIT_DELIM_CAPTURE",
                            "description": "This flag tells <b>preg_split<\/b> to capture parenthesized expression in the delimiter pattern as well.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_SPLIT_OFFSET_CAPTURE",
                            "description": "If this flag is set, for every occurring match the appendant string offset will also be returned. Note that this changes the return values in an array where every element is an array consisting of the matched string at offset 0 and its string offset within subject at offset 1. This flag is only used for <b>preg_split<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_GREP_INVERT",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_NO_ERROR",
                            "description": "Returned by <b>preg_last_error<\/b> if there were no errors.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_INTERNAL_ERROR",
                            "description": "Returned by <b>preg_last_error<\/b> if there was an internal PCRE error.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_BACKTRACK_LIMIT_ERROR",
                            "description": "Returned by <b>preg_last_error<\/b> if backtrack limit was exhausted.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_RECURSION_LIMIT_ERROR",
                            "description": "Returned by <b>preg_last_error<\/b> if recursion limit was exhausted.",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_BAD_UTF8_ERROR",
                            "description": "Returned by <b>preg_last_error<\/b> if the last error was caused by malformed UTF-8 data (only when running a regex in UTF-8 mode).",
                            "type": "constant"
                        },
                        {
                            "text": "PREG_BAD_UTF8_OFFSET_ERROR",
                            "description": "Returned by <b>preg_last_error<\/b> if the offset didn't correspond to the begin of a valid UTF-8 code point (only when running a regex in UTF-8 mode).",
                            "type": "constant"
                        },
                        {
                            "text": "PCRE_VERSION",
                            "leftLabel": "string",
                            "description": "PCRE version and release date (e.g. \"7.0 18-Dec-2006\").",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_LIBPQ_VERSION",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_LIBPQ_VERSION_STR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_CONNECT_FORCE_NEW",
                            "description": "Passed to <b>pg_connect<\/b> to force the creation of a new connection, rather than re-using an existing identical connection.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_ASSOC",
                            "description": "Passed to <b>pg_fetch_array<\/b>. Return an associative array of field names and values.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_NUM",
                            "description": "Passed to <b>pg_fetch_array<\/b>. Return a numerically indexed array of field numbers and values.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_BOTH",
                            "description": "Passed to <b>pg_fetch_array<\/b>. Return an array of field values that is both numerically indexed (by field number) and associated (by field name).",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_CONNECTION_BAD",
                            "description": "Returned by <b>pg_connection_status<\/b> indicating that the database connection is in an invalid state.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_CONNECTION_OK",
                            "description": "Returned by <b>pg_connection_status<\/b> indicating that the database connection is in a valid state.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_TRANSACTION_IDLE",
                            "description": "Returned by <b>pg_transaction_status<\/b>. Connection is currently idle, not in a transaction.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_TRANSACTION_ACTIVE",
                            "description": "Returned by <b>pg_transaction_status<\/b>. A command is in progress on the connection. A query has been sent via the connection and not yet completed.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_TRANSACTION_INTRANS",
                            "description": "Returned by <b>pg_transaction_status<\/b>. The connection is idle, in a transaction block.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_TRANSACTION_INERROR",
                            "description": "Returned by <b>pg_transaction_status<\/b>. The connection is idle, in a failed transaction block.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_TRANSACTION_UNKNOWN",
                            "description": "Returned by <b>pg_transaction_status<\/b>. The connection is bad.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_ERRORS_TERSE",
                            "description": "Passed to <b>pg_set_error_verbosity<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_ERRORS_DEFAULT",
                            "description": "Passed to <b>pg_set_error_verbosity<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_ERRORS_VERBOSE",
                            "description": "Passed to <b>pg_set_error_verbosity<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_SEEK_SET",
                            "description": "Passed to <b>pg_lo_seek<\/b>. Seek operation is to begin from the start of the object.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_SEEK_CUR",
                            "description": "Passed to <b>pg_lo_seek<\/b>. Seek operation is to begin from the current position.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_SEEK_END",
                            "description": "Passed to <b>pg_lo_seek<\/b>. Seek operation is to begin from the end of the object.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_STATUS_LONG",
                            "description": "Passed to <b>pg_result_status<\/b>. Indicates that numerical result code is desired.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_STATUS_STRING",
                            "description": "Passed to <b>pg_result_status<\/b>. Indicates that textual result command tag is desired.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_EMPTY_QUERY",
                            "description": "Returned by <b>pg_result_status<\/b>. The string sent to the server was empty.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_COMMAND_OK",
                            "description": "Returned by <b>pg_result_status<\/b>. Successful completion of a command returning no data.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_TUPLES_OK",
                            "description": "Returned by <b>pg_result_status<\/b>. Successful completion of a command returning data (such as a SELECT or SHOW).",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_COPY_OUT",
                            "description": "Returned by <b>pg_result_status<\/b>. Copy Out (from server) data transfer started.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_COPY_IN",
                            "description": "Returned by <b>pg_result_status<\/b>. Copy In (to server) data transfer started.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_BAD_RESPONSE",
                            "description": "Returned by <b>pg_result_status<\/b>. The server's response was not understood.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_NONFATAL_ERROR",
                            "description": "Returned by <b>pg_result_status<\/b>. A nonfatal error (a notice or warning) occurred.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_FATAL_ERROR",
                            "description": "Returned by <b>pg_result_status<\/b>. A fatal error occurred.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_SEVERITY",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_SQLSTATE",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_MESSAGE_PRIMARY",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_MESSAGE_DETAIL",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_MESSAGE_HINT",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_STATEMENT_POSITION",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_INTERNAL_POSITION",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_INTERNAL_QUERY",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_CONTEXT",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_SOURCE_FILE",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_SOURCE_LINE",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DIAG_SOURCE_FUNCTION",
                            "description": "Passed to <b>pg_result_error_field<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_CONV_IGNORE_DEFAULT",
                            "description": "Passed to <b>pg_convert<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_CONV_FORCE_NULL",
                            "description": "Passed to <b>pg_convert<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_CONV_IGNORE_NOT_NULL",
                            "description": "Passed to <b>pg_convert<\/b>.",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DML_NO_CONV",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DML_EXEC",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DML_ASYNC",
                            "type": "constant"
                        },
                        {
                            "text": "PGSQL_DML_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_F_OK",
                            "description": "Check whether the file exists.",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_X_OK",
                            "description": "Check whether the file exists and has execute permissions.",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_W_OK",
                            "description": "Check whether the file exists and has write permissions.",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_R_OK",
                            "description": "Check whether the file exists and has read permissions.",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_S_IFREG",
                            "description": "Normal file",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_S_IFCHR",
                            "description": "Character special file",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_S_IFBLK",
                            "description": "Block special file",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_S_IFIFO",
                            "description": "FIFO (named pipe) special file",
                            "type": "constant"
                        },
                        {
                            "text": "POSIX_S_IFSOCK",
                            "description": "Socket",
                            "type": "constant"
                        },
                        {
                            "text": "PSPELL_FAST",
                            "type": "constant"
                        },
                        {
                            "text": "PSPELL_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "PSPELL_BAD_SPELLERS",
                            "type": "constant"
                        },
                        {
                            "text": "PSPELL_RUN_TOGETHER",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_ALL",
                            "description": "Start of PECL pthreads 2.0.4",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_NONE",
                            "description": "Do not inherit anything when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_INI",
                            "description": "Inherit INI entries when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_CONSTANTS",
                            "description": "Inherit user declared constants when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_CLASSES",
                            "description": "Inherit user declared classes when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_FUNCTIONS",
                            "description": "Inherit user declared functions when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_INCLUDES",
                            "description": "Inherit included file information when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_INHERIT_COMMENTS",
                            "description": "Inherit all comments when new Threads are started",
                            "type": "constant"
                        },
                        {
                            "text": "PTHREADS_ALLOW_HEADERS",
                            "description": "Allow new Threads to send headers to standard output (normally prohibited)",
                            "type": "constant"
                        },
                        {
                            "text": "READLINE_LIB",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OID_OUTPUT_SUFFIX",
                            "description": "As of 5.4.0",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OID_OUTPUT_MODULE",
                            "description": "As of 5.4.0",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OID_OUTPUT_FULL",
                            "description": "As of 5.2.0",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OID_OUTPUT_NUMERIC",
                            "description": "As of 5.2.0",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OID_OUTPUT_UCD",
                            "description": "As of 5.4.0",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OID_OUTPUT_NONE",
                            "description": "As of 5.4.0",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_VALUE_LIBRARY",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_VALUE_PLAIN",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_VALUE_OBJECT",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_BIT_STR",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OCTET_STR",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OPAQUE",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_NULL",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_OBJECT_ID",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_IPADDRESS",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_COUNTER",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_UNSIGNED",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_TIMETICKS",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_UINTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_INTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "SNMP_COUNTER64",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_1_1",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_1_2",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_PERSISTENCE_SESSION",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_PERSISTENCE_REQUEST",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_FUNCTIONS_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_ENCODED",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_LITERAL",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_RPC",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_DOCUMENT",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_ACTOR_NEXT",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_ACTOR_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_ACTOR_UNLIMATERECEIVER",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_COMPRESSION_ACCEPT",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_COMPRESSION_GZIP",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_COMPRESSION_DEFLATE",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_AUTHENTICATION_BASIC",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_AUTHENTICATION_DIGEST",
                            "type": "constant"
                        },
                        {
                            "text": "UNKNOWN_TYPE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_BOOLEAN",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_DECIMAL",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_FLOAT",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_DOUBLE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_DURATION",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_DATETIME",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_DATE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_GYEARMONTH",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_GYEAR",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_GMONTHDAY",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_GDAY",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_GMONTH",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_HEXBINARY",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_BASE64BINARY",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_ANYURI",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_QNAME",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NOTATION",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NORMALIZEDSTRING",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_TOKEN",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_LANGUAGE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NMTOKEN",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NCNAME",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_ID",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_IDREF",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_IDREFS",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_ENTITY",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_ENTITIES",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_INTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NONPOSITIVEINTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NEGATIVEINTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_LONG",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_INT",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_SHORT",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_BYTE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NONNEGATIVEINTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_UNSIGNEDLONG",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_UNSIGNEDINT",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_UNSIGNEDSHORT",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_UNSIGNEDBYTE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_POSITIVEINTEGER",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NMTOKENS",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_ANYTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_ANYXML",
                            "type": "constant"
                        },
                        {
                            "text": "APACHE_MAP",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_ENC_OBJECT",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_ENC_ARRAY",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_1999_TIMEINSTANT",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_NAMESPACE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "XSD_1999_NAMESPACE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_SINGLE_ELEMENT_ARRAYS",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_WAIT_ONE_WAY_CALLS",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_USE_XSI_ARRAY_TYPE",
                            "type": "constant"
                        },
                        {
                            "text": "WSDL_CACHE_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "WSDL_CACHE_DISK",
                            "type": "constant"
                        },
                        {
                            "text": "WSDL_CACHE_MEMORY",
                            "type": "constant"
                        },
                        {
                            "text": "WSDL_CACHE_BOTH",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_SSL_METHOD_TLS",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_SSL_METHOD_SSLv2",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_SSL_METHOD_SSLv3",
                            "type": "constant"
                        },
                        {
                            "text": "SOAP_SSL_METHOD_SSLv23",
                            "type": "constant"
                        },
                        {
                            "text": "AF_UNIX",
                            "type": "constant"
                        },
                        {
                            "text": "AF_INET",
                            "type": "constant"
                        },
                        {
                            "text": "AF_INET6",
                            "description": "Only available if compiled with IPv6 support.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCK_STREAM",
                            "type": "constant"
                        },
                        {
                            "text": "SOCK_DGRAM",
                            "type": "constant"
                        },
                        {
                            "text": "SOCK_RAW",
                            "type": "constant"
                        },
                        {
                            "text": "SOCK_SEQPACKET",
                            "type": "constant"
                        },
                        {
                            "text": "SOCK_RDM",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_OOB",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_WAITALL",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_CTRUNC",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_TRUNC",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_PEEK",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_DONTROUTE",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_EOR",
                            "description": "Not available on Windows platforms.",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_EOF",
                            "description": "Not available on Windows platforms.",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_CONFIRM",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_ERRQUEUE",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_NOSIGNAL",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_DONTWAIT",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_MORE",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_WAITFORONE",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_CMSG_CLOEXEC",
                            "type": "constant"
                        },
                        {
                            "text": "SO_DEBUG",
                            "type": "constant"
                        },
                        {
                            "text": "SO_REUSEADDR",
                            "type": "constant"
                        },
                        {
                            "text": "SO_REUSEPORT",
                            "description": "This constant is only available in PHP 5.4.10 or later on platforms that support the <b>SO_REUSEPORT<\/b> socket option: this includes Mac OS X and FreeBSD, but does not include Linux or Windows.",
                            "type": "constant"
                        },
                        {
                            "text": "SO_KEEPALIVE",
                            "type": "constant"
                        },
                        {
                            "text": "SO_DONTROUTE",
                            "type": "constant"
                        },
                        {
                            "text": "SO_LINGER",
                            "type": "constant"
                        },
                        {
                            "text": "SO_BROADCAST",
                            "type": "constant"
                        },
                        {
                            "text": "SO_OOBINLINE",
                            "type": "constant"
                        },
                        {
                            "text": "SO_SNDBUF",
                            "type": "constant"
                        },
                        {
                            "text": "SO_RCVBUF",
                            "type": "constant"
                        },
                        {
                            "text": "SO_SNDLOWAT",
                            "type": "constant"
                        },
                        {
                            "text": "SO_RCVLOWAT",
                            "type": "constant"
                        },
                        {
                            "text": "SO_SNDTIMEO",
                            "type": "constant"
                        },
                        {
                            "text": "SO_RCVTIMEO",
                            "type": "constant"
                        },
                        {
                            "text": "SO_TYPE",
                            "type": "constant"
                        },
                        {
                            "text": "SO_ERROR",
                            "type": "constant"
                        },
                        {
                            "text": "SO_BINDTODEVICE",
                            "type": "constant"
                        },
                        {
                            "text": "SOL_SOCKET",
                            "type": "constant"
                        },
                        {
                            "text": "SOMAXCONN",
                            "type": "constant"
                        },
                        {
                            "text": "TCP_NODELAY",
                            "description": "Used to disable Nagle TCP algorithm.",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_NORMAL_READ",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_BINARY_READ",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_JOIN_GROUP",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_LEAVE_GROUP",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_BLOCK_SOURCE",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_UNBLOCK_SOURCE",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_JOIN_SOURCE_GROUP",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_LEAVE_SOURCE_GROUP",
                            "type": "constant"
                        },
                        {
                            "text": "IP_MULTICAST_IF",
                            "type": "constant"
                        },
                        {
                            "text": "IP_MULTICAST_TTL",
                            "type": "constant"
                        },
                        {
                            "text": "IP_MULTICAST_LOOP",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_MULTICAST_IF",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_MULTICAST_HOPS",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_MULTICAST_LOOP",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EPERM",
                            "description": "Operation not permitted.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOENT",
                            "description": "No such file or directory.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EINTR",
                            "description": "Interrupted system call.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EIO",
                            "description": "I\/O error.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENXIO",
                            "description": "No such device or address.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_E2BIG",
                            "description": "Arg list too long.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADF",
                            "description": "Bad file number.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EAGAIN",
                            "description": "Try again.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOMEM",
                            "description": "Out of memory.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EACCES",
                            "description": "Permission denied.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EFAULT",
                            "description": "Bad address.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTBLK",
                            "description": "Block device required.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBUSY",
                            "description": "Device or resource busy.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EEXIST",
                            "description": "File exists.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EXDEV",
                            "description": "Cross-device link.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENODEV",
                            "description": "No such device.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTDIR",
                            "description": "Not a directory.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EISDIR",
                            "description": "Is a directory.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EINVAL",
                            "description": "Invalid argument.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENFILE",
                            "description": "File table overflow.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EMFILE",
                            "description": "Too many open files.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTTY",
                            "description": "Not a typewriter.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOSPC",
                            "description": "No space left on device.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ESPIPE",
                            "description": "Illegal seek.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EROFS",
                            "description": "Read-only file system.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EMLINK",
                            "description": "Too many links.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EPIPE",
                            "description": "Broken pipe.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENAMETOOLONG",
                            "description": "File name too long.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOLCK",
                            "description": "No record locks available.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOSYS",
                            "description": "Function not implemented.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTEMPTY",
                            "description": "Directory not empty.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ELOOP",
                            "description": "Too many symbolic links encountered.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EWOULDBLOCK",
                            "description": "Operation would block.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOMSG",
                            "description": "No message of desired type.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EIDRM",
                            "description": "Identifier removed.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ECHRNG",
                            "description": "Channel number out of range.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EL2NSYNC",
                            "description": "Level 2 not synchronized.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EL3HLT",
                            "description": "Level 3 halted.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EL3RST",
                            "description": "Level 3 reset.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ELNRNG",
                            "description": "Link number out of range.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EUNATCH",
                            "description": "Protocol driver not attached.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOCSI",
                            "description": "No CSI structure available.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EL2HLT",
                            "description": "Level 2 halted.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADE",
                            "description": "Invalid exchange.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADR",
                            "description": "Invalid request descriptor.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EXFULL",
                            "description": "Exchange full.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOANO",
                            "description": "No anode.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADRQC",
                            "description": "Invalid request code.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADSLT",
                            "description": "Invalid slot.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOSTR",
                            "description": "Device not a stream.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENODATA",
                            "description": "No data available.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ETIME",
                            "description": "Timer expired.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOSR",
                            "description": "Out of streams resources.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENONET",
                            "description": "Machine is not on the network.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EREMOTE",
                            "description": "Object is remote.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOLINK",
                            "description": "Link has been severed.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EADV",
                            "description": "Advertise error.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ESRMNT",
                            "description": "Srmount error.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ECOMM",
                            "description": "Communication error on send.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EPROTO",
                            "description": "Protocol error.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EMULTIHOP",
                            "description": "Multihop attempted.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADMSG",
                            "description": "Not a data message.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTUNIQ",
                            "description": "Name not unique on network.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EBADFD",
                            "description": "File descriptor in bad state.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EREMCHG",
                            "description": "Remote address changed.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ERESTART",
                            "description": "Interrupted system call should be restarted.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ESTRPIPE",
                            "description": "Streams pipe error.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EUSERS",
                            "description": "Too many users.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTSOCK",
                            "description": "Socket operation on non-socket.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EDESTADDRREQ",
                            "description": "Destination address required.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EMSGSIZE",
                            "description": "Message too long.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EPROTOTYPE",
                            "description": "Protocol wrong type for socket.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOPROTOOPT",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EPROTONOSUPPORT",
                            "description": "Protocol not supported.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ESOCKTNOSUPPORT",
                            "description": "Socket type not supported.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EOPNOTSUPP",
                            "description": "Operation not supported on transport endpoint.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EPFNOSUPPORT",
                            "description": "Protocol family not supported.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EAFNOSUPPORT",
                            "description": "Address family not supported by protocol.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EADDRINUSE",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EADDRNOTAVAIL",
                            "description": "Cannot assign requested address.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENETDOWN",
                            "description": "Network is down.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENETUNREACH",
                            "description": "Network is unreachable.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENETRESET",
                            "description": "Network dropped connection because of reset.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ECONNABORTED",
                            "description": "Software caused connection abort.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ECONNRESET",
                            "description": "Connection reset by peer.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOBUFS",
                            "description": "No buffer space available.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EISCONN",
                            "description": "Transport endpoint is already connected.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOTCONN",
                            "description": "Transport endpoint is not connected.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ESHUTDOWN",
                            "description": "Cannot send after transport endpoint shutdown.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ETOOMANYREFS",
                            "description": "Too many references: cannot splice.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ETIMEDOUT",
                            "description": "Connection timed out.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ECONNREFUSED",
                            "description": "Connection refused.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EHOSTDOWN",
                            "description": "Host is down.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EHOSTUNREACH",
                            "description": "No route to host.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EALREADY",
                            "description": "Operation already in progress.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EINPROGRESS",
                            "description": "Operation now in progress.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EISNAM",
                            "description": "Is a named type file.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EREMOTEIO",
                            "description": "Remote I\/O error.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EDQUOT",
                            "description": "Quota exceeded.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_ENOMEDIUM",
                            "description": "No medium found.",
                            "type": "constant"
                        },
                        {
                            "text": "SOCKET_EMEDIUMTYPE",
                            "description": "Wrong medium type.",
                            "type": "constant"
                        },
                        {
                            "text": "IPPROTO_IP",
                            "type": "constant"
                        },
                        {
                            "text": "IPPROTO_IPV6",
                            "type": "constant"
                        },
                        {
                            "text": "SOL_TCP",
                            "type": "constant"
                        },
                        {
                            "text": "SOL_UDP",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_UNICAST_HOPS",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_RECVPKTINFO",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_PKTINFO",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_RECVHOPLIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_HOPLIMIT",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_RECVTCLASS",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_TCLASS",
                            "type": "constant"
                        },
                        {
                            "text": "SCM_RIGHTS",
                            "type": "constant"
                        },
                        {
                            "text": "SCM_CREDENTIALS",
                            "type": "constant"
                        },
                        {
                            "text": "SO_PASSCRED",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_BOTH",
                            "description": "Columns are returned into the array having both a numerical index and the field name as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_NUM",
                            "description": "Columns are returned into the array having a numerical index to the fields. This index starts with 0, the first field in the result.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_ASSOC",
                            "description": "Columns are returned into the array having the field name as the array index.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_OK",
                            "description": "Successful result.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_ERROR",
                            "description": "SQL error or missing database.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_INTERNAL",
                            "description": "An internal logic error in SQLite.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_PERM",
                            "description": "Access permission denied.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_ABORT",
                            "description": "Callback routine requested an abort.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_BUSY",
                            "description": "The database file is locked.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_LOCKED",
                            "description": "A table in the database is locked.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_NOMEM",
                            "description": "Memory allocation failed.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_READONLY",
                            "description": "Attempt to write a readonly database.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_INTERRUPT",
                            "description": "Operation terminated internally.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_IOERR",
                            "description": "Disk I\/O error occurred.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_CORRUPT",
                            "description": "The database disk image is malformed.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_NOTFOUND",
                            "description": "(Internal) Table or record not found.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_FULL",
                            "description": "Insertion failed because database is full.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_CANTOPEN",
                            "description": "Unable to open the database file.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_PROTOCOL",
                            "description": "Database lock protocol error.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_EMPTY",
                            "description": "(Internal) Database table is empty.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_SCHEMA",
                            "description": "The database schema changed.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_TOOBIG",
                            "description": "Too much data for one row of a table.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_CONSTRAINT",
                            "description": "Abort due to constraint violation.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_MISMATCH",
                            "description": "Data type mismatch.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_MISUSE",
                            "description": "Library used incorrectly.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_NOLFS",
                            "description": "Uses of OS features not supported on host.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_AUTH",
                            "description": "Authorized failed.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_NOTADB",
                            "description": "File opened that is not a database file.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_FORMAT",
                            "description": "Auxiliary database format error.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_ROW",
                            "description": "Internal process has another row ready.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE_DONE",
                            "description": "Internal process has finished executing.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_ASSOC",
                            "description": "Specifies that the <b>Sqlite3Result::fetchArray<\/b> method shall return an array indexed by column name as returned in the corresponding result set.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_NUM",
                            "description": "Specifies that the <b>Sqlite3Result::fetchArray<\/b> method shall return an array indexed by column number as returned in the corresponding result set, starting at column 0.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_BOTH",
                            "description": "Specifies that the <b>Sqlite3Result::fetchArray<\/b> method shall return an array indexed by both column name and number as returned in the corresponding result set, starting at column 0.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_INTEGER",
                            "description": "Represents the SQLite3 INTEGER storage class.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_FLOAT",
                            "description": "Represents the SQLite3 REAL (FLOAT) storage class.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_TEXT",
                            "description": "Represents the SQLite3 TEXT storage class.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_BLOB",
                            "description": "Represents the SQLite3 BLOB storage class.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_NULL",
                            "description": "Represents the SQLite3 NULL storage class.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_OPEN_READONLY",
                            "description": "Specifies that the SQLite3 database be opened for reading only.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_OPEN_READWRITE",
                            "description": "Specifies that the SQLite3 database be opened for reading and writing.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLITE3_OPEN_CREATE",
                            "description": "Specifies that the SQLite3 database be created if it does not already exist.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_ERR_ERRORS",
                            "description": "SQLSRV Extension Stub File.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_ERR_WARNINGS",
                            "description": "Warnings generated on the last sqlsrv function call are returned.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_ERR_ALL",
                            "description": "Errors and warnings generated on the last sqlsrv function call are returned.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SYSTEM_ALL",
                            "description": "Turns on logging of all subsystems.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SYSTEM_OFF",
                            "description": "Turns logging off.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SYSTEM_INIT",
                            "description": "Turns on logging of initialization activity.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SYSTEM_CONN",
                            "description": "Turns on logging of connection activity.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SYSTEM_STMT",
                            "description": "Turns on logging of statement activity.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SYSTEM_UTIL",
                            "description": "Turns on logging of error functions activity (such as handle_error and handle_warning).",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SEVERITY_ALL",
                            "description": "Specifies that errors, warnings, and notices will be logged.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SEVERITY_ERROR",
                            "description": "Specifies that errors will be logged.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SEVERITY_NOTICE",
                            "description": "Specifies that notices will be logged.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_LOG_SEVERITY_WARNING",
                            "description": "Specifies that warnings will be logged.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_FETCH_NUMERIC",
                            "description": "Returns numerically indexed array.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_FETCH_ASSOC",
                            "description": "Returns an associative array.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_FETCH_BOTH",
                            "description": "Returns both a numeric and associative array.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PHPTYPE_NULL",
                            "description": "Null",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PHPTYPE_INT",
                            "description": "Integer",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PHPTYPE_FLOAT",
                            "description": "Float",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PHPTYPE_DATETIME",
                            "description": "Datetime",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_ENC_BINARY",
                            "leftLabel": "string",
                            "description": "Binary Encoding",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_ENC_CHAR",
                            "leftLabel": "string",
                            "description": "Character Encoding",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_NULLABLE_NO",
                            "description": "The column is not nullable.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_NULLABLE_YES",
                            "description": "The column is nullable.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_NULLABLE_UNKNOWN",
                            "description": "It is not known if the column is nullable.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_BIGINT",
                            "description": "bigint.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_BIT",
                            "description": "bit.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_DATETIME",
                            "description": "datetime.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_FLOAT",
                            "description": "float.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_IMAGE",
                            "description": "image.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_INT",
                            "description": "int.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_MONEY",
                            "description": "money.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_NTEXT",
                            "description": "ntext.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_TEXT",
                            "description": "text.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_REAL",
                            "description": "real.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_SMALLDATETIME",
                            "description": "smalldatetime.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_SMALLINT",
                            "description": "smallint.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_SMALLMONEY",
                            "description": "smallmoney.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_TIMESTAMP",
                            "description": "timestamp.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_TINYINT",
                            "description": "tinyint.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_UDT",
                            "description": "udt.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_UNIQUEIDENTIFIER",
                            "description": "uniqueidentifier.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_XML",
                            "description": "xml.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_DATE",
                            "description": "date.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_TIME",
                            "description": "time.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_DATETIMEOFFSET",
                            "description": "datetimeoffset.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SQLTYPE_DATETIME2",
                            "description": "datetime2.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PARAM_IN",
                            "description": "Indicates an input parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PARAM_INOUT",
                            "description": "Indicates a bidirectional parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_PARAM_OUT",
                            "description": "Indicates an output parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_TXN_READ_UNCOMMITTED",
                            "description": "Read Uncommitted.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_TXN_READ_COMMITTED",
                            "description": "Read Committed.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_TXN_REPEATABLE_READ",
                            "description": "Repeatable Read.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_TXN_SERIALIZABLE",
                            "description": "Serializable.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_TXN_SNAPSHOT",
                            "description": "Snapshot.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SCROLL_NEXT",
                            "description": "Specifies the next row.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SCROLL_PRIOR",
                            "description": "Specifies the row before the current row.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SCROLL_FIRST",
                            "description": "Specifies the first row in the result set.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SCROLL_LAST",
                            "description": "Specifies the last row in the result set.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SCROLL_ABSOLUTE",
                            "description": "Specifies the row specified with the offset parameter.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_SCROLL_RELATIVE",
                            "description": "Specifies the row specified with the offset parameter from the current row.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_CURSOR_FORWARD",
                            "leftLabel": "string",
                            "description": "Lets you move one row at a time starting at the first row of the result set until you reach the end of the result set.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_CURSOR_STATIC",
                            "leftLabel": "string",
                            "description": "Lets you access rows in any order but will not reflect changes in the database.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_CURSOR_DYNAMIC",
                            "leftLabel": "string",
                            "description": "Lets you access rows in any order and will reflect changes in the database.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_CURSOR_KEYSET",
                            "leftLabel": "string",
                            "description": "Lets you access rows in any order.",
                            "type": "constant"
                        },
                        {
                            "text": "SQLSRV_CURSOR_CLIENT_BUFFERED",
                            "leftLabel": "string",
                            "description": "Lets you access rows in any order.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_FINGERPRINT_MD5",
                            "description": "Flag to ssh2_fingerprint requesting hostkey fingerprint as an MD5 hash.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_FINGERPRINT_SHA1",
                            "description": "Flag to ssh2_fingerprint requesting hostkey fingerprint as an SHA1 hash.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_FINGERPRINT_HEX",
                            "description": "Flag to ssh2_fingerprint requesting hostkey fingerprint as a string of hexits.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_FINGERPRINT_RAW",
                            "description": "Flag to ssh2_fingerprint requesting hostkey fingerprint as a raw string of 8-bit characters.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_TERM_UNIT_CHARS",
                            "description": "Flag to ssh2_shell specifying that width and height are provided as character sizes.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_TERM_UNIT_PIXELS",
                            "description": "Flag to ssh2_shell specifying that width and height are provided in pixel units.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_DEFAULT_TERMINAL",
                            "leftLabel": "string",
                            "description": "Default terminal type (e.g. vt102, ansi, xterm, vanilla) requested by ssh2_shell.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_DEFAULT_TERM_WIDTH",
                            "description": "Default terminal width requested by ssh2_shell.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_DEFAULT_TERM_HEIGHT",
                            "description": "Default terminal height requested by ssh2_shell.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_DEFAULT_TERM_UNIT",
                            "description": "Default terminal units requested by ssh2_shell.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_STREAM_STDIO",
                            "description": "Flag to ssh2_fetch_stream requesting STDIO subchannel.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_STREAM_STDERR",
                            "description": "Flag to ssh2_fetch_stream requesting STDERR subchannel.",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLLIN",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLLEXT",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLLOUT",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLLERR",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLLHUP",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLLNVAL",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLL_SESSION_CLOSED",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLL_CHANNEL_CLOSED",
                            "type": "constant"
                        },
                        {
                            "text": "SSH2_POLL_LISTENER_CLOSED",
                            "type": "constant"
                        },
                        {
                            "text": "ARRAY_FILTER_USE_BOTH",
                            "type": "constant"
                        },
                        {
                            "text": "ARRAY_FILTER_USE_KEY",
                            "type": "constant"
                        },
                        {
                            "text": "CONNECTION_ABORTED",
                            "description": "Start of standard v.5.3.1-0.dotdeb.1",
                            "type": "constant"
                        },
                        {
                            "text": "CONNECTION_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "CONNECTION_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "INI_USER",
                            "type": "constant"
                        },
                        {
                            "text": "INI_PERDIR",
                            "type": "constant"
                        },
                        {
                            "text": "INI_SYSTEM",
                            "type": "constant"
                        },
                        {
                            "text": "INI_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "INI_SCANNER_NORMAL",
                            "description": "Normal INI scanner mode",
                            "type": "constant"
                        },
                        {
                            "text": "INI_SCANNER_TYPED",
                            "description": "Typed INI scanner mode",
                            "type": "constant"
                        },
                        {
                            "text": "INI_SCANNER_RAW",
                            "description": "Raw INI scanner mode",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_SCHEME",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_HOST",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_PORT",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_USER",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_PASS",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_PATH",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_QUERY",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_URL_FRAGMENT",
                            "type": "constant"
                        },
                        {
                            "text": "M_E",
                            "description": "<i>e<\/i> constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_LOG2E",
                            "description": "{@link log}<sub>2<\/sub><i>e<\/i> constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_LOG10E",
                            "description": "{@link log}<sub>10<\/sub><i>e<\/i> constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_LN2",
                            "description": "{@link log}<sub><i>e<\/i><\/sub>2 constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_LN10",
                            "description": "{@link log}<sub><i>e<\/i><\/sub>10 constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_PI",
                            "description": "&pi; constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_PI_2",
                            "description": "&pi;\/2 constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_PI_4",
                            "description": "&pi;\/4 constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_1_PI",
                            "description": "1\/&pi; constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_2_PI",
                            "description": "2\/&pi; constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_SQRTPI",
                            "description": "{@link sqrt}(&pi;) constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_2_SQRTPI",
                            "description": "2\/{@link sqrt}(&pi;) constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_LNPI",
                            "description": "{@link log}<sub><i>e<\/i><\/sub>&pi; constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_EULER",
                            "description": "Euler constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_SQRT2",
                            "description": "{@link sqrt}(2) constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_SQRT1_2",
                            "description": "1\/{@link sqrt}(2) constant",
                            "type": "constant"
                        },
                        {
                            "text": "M_SQRT3",
                            "description": "{@link sqrt}(3) constant",
                            "type": "constant"
                        },
                        {
                            "text": "INF",
                            "description": "The infinite",
                            "type": "constant"
                        },
                        {
                            "text": "NAN",
                            "description": "Not A Number",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_ROUND_HALF_UP",
                            "description": "Round halves up [5.3.0]",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_ROUND_HALF_DOWN",
                            "description": "Round halves down [5.3.0]",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_ROUND_HALF_EVEN",
                            "description": "Round halves to even numbers [5.3.0]",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_ROUND_HALF_ODD",
                            "description": "Round halves to odd numbers [5.3.0]",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_GENERAL",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_CREDITS",
                            "description": "PHP Credits. See also phpcredits.",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_CONFIGURATION",
                            "description": "Current Local and Master values for PHP directives. See also ini_get.",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_MODULES",
                            "description": "Loaded modules and their respective settings.",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_ENVIRONMENT",
                            "description": "Environment Variable information that's also available in $_ENV.",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_VARIABLES",
                            "description": "Shows all predefined variables from EGPCS (Environment, GET, POST, Cookie, Server).",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_LICENSE",
                            "description": "PHP License information. See also the license faq.",
                            "type": "constant"
                        },
                        {
                            "text": "INFO_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_GROUP",
                            "description": "A list of the core developers",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_GENERAL",
                            "description": "General credits: Language design and concept, PHP authors and SAPI module.",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_SAPI",
                            "description": "A list of the server API modules for PHP, and their authors.",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_MODULES",
                            "description": "A list of the extension modules for PHP, and their authors.",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_DOCS",
                            "description": "The credits for the documentation team.",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_FULLPAGE",
                            "description": "Usually used in combination with the other flags. Indicates that a complete stand-alone HTML page needs to be printed including the information indicated by the other flags.",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_QA",
                            "description": "The credits for the quality assurance team.",
                            "type": "constant"
                        },
                        {
                            "text": "CREDITS_ALL",
                            "description": "The configuration line, &php.ini; location, build date, Web Server, System and more.",
                            "type": "constant"
                        },
                        {
                            "text": "HTML_SPECIALCHARS",
                            "type": "constant"
                        },
                        {
                            "text": "HTML_ENTITIES",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_COMPAT",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_QUOTES",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_NOQUOTES",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_IGNORE",
                            "type": "constant"
                        },
                        {
                            "text": "STR_PAD_LEFT",
                            "type": "constant"
                        },
                        {
                            "text": "STR_PAD_RIGHT",
                            "type": "constant"
                        },
                        {
                            "text": "STR_PAD_BOTH",
                            "type": "constant"
                        },
                        {
                            "text": "PATHINFO_DIRNAME",
                            "type": "constant"
                        },
                        {
                            "text": "PATHINFO_BASENAME",
                            "type": "constant"
                        },
                        {
                            "text": "PATHINFO_EXTENSION",
                            "type": "constant"
                        },
                        {
                            "text": "PATHINFO_FILENAME",
                            "type": "constant"
                        },
                        {
                            "text": "CHAR_MAX",
                            "type": "constant"
                        },
                        {
                            "text": "LC_CTYPE",
                            "type": "constant"
                        },
                        {
                            "text": "LC_NUMERIC",
                            "type": "constant"
                        },
                        {
                            "text": "LC_TIME",
                            "type": "constant"
                        },
                        {
                            "text": "LC_COLLATE",
                            "type": "constant"
                        },
                        {
                            "text": "LC_MONETARY",
                            "type": "constant"
                        },
                        {
                            "text": "LC_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "LC_MESSAGES",
                            "type": "constant"
                        },
                        {
                            "text": "SEEK_SET",
                            "type": "constant"
                        },
                        {
                            "text": "SEEK_CUR",
                            "type": "constant"
                        },
                        {
                            "text": "SEEK_END",
                            "type": "constant"
                        },
                        {
                            "text": "LOCK_SH",
                            "type": "constant"
                        },
                        {
                            "text": "LOCK_EX",
                            "type": "constant"
                        },
                        {
                            "text": "LOCK_UN",
                            "type": "constant"
                        },
                        {
                            "text": "LOCK_NB",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_CONNECT",
                            "description": "A connection with an external resource has been established.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_AUTH_REQUIRED",
                            "description": "Additional authorization is required to access the specified resource.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_AUTH_RESULT",
                            "description": "Authorization has been completed (with or without success).",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_MIME_TYPE_IS",
                            "description": "The mime-type of resource has been identified, refer to message for a description of the discovered type.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_FILE_SIZE_IS",
                            "description": "The size of the resource has been discovered.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_REDIRECTED",
                            "description": "The external resource has redirected the stream to an alternate location. Refer to message.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_PROGRESS",
                            "description": "Indicates current progress of the stream transfer in bytes_transferred and possibly bytes_max as well.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_FAILURE",
                            "description": "A generic error occurred on the stream, consult message and message_code for details.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_COMPLETED",
                            "description": "There is no more data available on the stream.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_RESOLVE",
                            "description": "A remote address required for this stream has been resolved, or the resolution failed. See severity for an indication of which happened.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_SEVERITY_INFO",
                            "description": "Normal, non-error related, notification.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_SEVERITY_WARN",
                            "description": "Non critical error condition. Processing may continue.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_NOTIFY_SEVERITY_ERR",
                            "description": "A critical error occurred. Processing cannot continue.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_FILTER_READ",
                            "description": "Used with stream_filter_append and stream_filter_prepend to indicate that the specified filter should only be applied when reading",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_FILTER_WRITE",
                            "description": "Used with stream_filter_append and stream_filter_prepend to indicate that the specified filter should only be applied when writing",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_FILTER_ALL",
                            "description": "This constant is equivalent to STREAM_FILTER_READ | STREAM_FILTER_WRITE",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CLIENT_PERSISTENT",
                            "description": "Client socket opened with stream_socket_client should remain persistent between page loads.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CLIENT_ASYNC_CONNECT",
                            "description": "Open client socket asynchronously. This option must be used together with the STREAM_CLIENT_CONNECT flag.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CLIENT_CONNECT",
                            "description": "Open client socket connection. Client sockets should always include this flag. Used with stream_socket_client.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SHUT_RD",
                            "description": "Used with stream_socket_shutdown to disable further receptions. Added in PHP 5.2.1.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SHUT_WR",
                            "description": "Used with stream_socket_shutdown to disable further transmissions. Added in PHP 5.2.1.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SHUT_RDWR",
                            "description": "Used with stream_socket_shutdown to disable further receptions and transmissions. Added in PHP 5.2.1.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_PF_INET",
                            "description": "Internet Protocol Version 4 (IPv4).",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_PF_INET6",
                            "description": "Internet Protocol Version 6 (IPv6).",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_PF_UNIX",
                            "description": "Unix system internal protocols.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IPPROTO_IP",
                            "description": "Provides a IP socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IPPROTO_TCP",
                            "description": "Provides a TCP socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IPPROTO_UDP",
                            "description": "Provides a UDP socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IPPROTO_ICMP",
                            "description": "Provides a ICMP socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IPPROTO_RAW",
                            "description": "Provides a RAW socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SOCK_STREAM",
                            "description": "Provides sequenced, two-way byte streams with a transmission mechanism for out-of-band data (TCP, for example).",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SOCK_DGRAM",
                            "description": "Provides datagrams, which are connectionless messages (UDP, for example).",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SOCK_RAW",
                            "description": "Provides a raw socket, which provides access to internal network protocols and interfaces. Usually this type of socket is just available to the root user.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SOCK_SEQPACKET",
                            "description": "Provides a sequenced packet stream socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SOCK_RDM",
                            "description": "Provides a RDM (Reliably-delivered messages) socket.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_PEEK",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_OOB",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SERVER_BIND",
                            "description": "Tells a stream created with stream_socket_server to bind to the specified target. Server sockets should always include this flag.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_SERVER_LISTEN",
                            "description": "Tells a stream created with stream_socket_server and bound using the STREAM_SERVER_BIND flag to start listening on the socket. Connection-orientated transports (such as TCP) must use this flag, otherwise the server socket will not be enabled.",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_USE_INCLUDE_PATH",
                            "description": "Search for filename in include_path",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_IGNORE_NEW_LINES",
                            "description": "Strip EOL characters",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_SKIP_EMPTY_LINES",
                            "description": "Skip empty lines",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_APPEND",
                            "description": "Append content to existing file.",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_NO_DEFAULT_CONTEXT",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_TEXT",
                            "description": "<p> This constant has no effect prior to PHP 6. It is only available for forward compatibility.",
                            "type": "constant"
                        },
                        {
                            "text": "FILE_BINARY",
                            "description": "<p> This constant has no effect prior to PHP 6. It is only available for forward compatibility.",
                            "type": "constant"
                        },
                        {
                            "text": "FNM_NOESCAPE",
                            "description": "Disable backslash escaping.",
                            "type": "constant"
                        },
                        {
                            "text": "FNM_PATHNAME",
                            "description": "Slash in string only matches slash in the given pattern.",
                            "type": "constant"
                        },
                        {
                            "text": "FNM_PERIOD",
                            "description": "Leading period in string must be exactly matched by period in the given pattern.",
                            "type": "constant"
                        },
                        {
                            "text": "FNM_CASEFOLD",
                            "description": "Caseless match. Part of the GNU extension.",
                            "type": "constant"
                        },
                        {
                            "text": "PSFS_PASS_ON",
                            "description": "Return Code indicating that the userspace filter returned buckets in $out.",
                            "type": "constant"
                        },
                        {
                            "text": "PSFS_FEED_ME",
                            "description": "Return Code indicating that the userspace filter did not return buckets in $out (i.e. No data available).",
                            "type": "constant"
                        },
                        {
                            "text": "PSFS_ERR_FATAL",
                            "description": "Return Code indicating that the userspace filter encountered an unrecoverable error (i.e. Invalid data received).",
                            "type": "constant"
                        },
                        {
                            "text": "PSFS_FLAG_NORMAL",
                            "description": "Regular read\/write.",
                            "type": "constant"
                        },
                        {
                            "text": "PSFS_FLAG_FLUSH_INC",
                            "description": "An incremental flush.",
                            "type": "constant"
                        },
                        {
                            "text": "PSFS_FLAG_FLUSH_CLOSE",
                            "description": "Final flush prior to closing.",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_1",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_2",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_3",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_4",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_5",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_6",
                            "type": "constant"
                        },
                        {
                            "text": "ABDAY_7",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_1",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_2",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_3",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_4",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_5",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_6",
                            "type": "constant"
                        },
                        {
                            "text": "DAY_7",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_1",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_2",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_3",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_4",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_5",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_6",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_7",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_8",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_9",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_10",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_11",
                            "type": "constant"
                        },
                        {
                            "text": "ABMON_12",
                            "type": "constant"
                        },
                        {
                            "text": "MON_1",
                            "type": "constant"
                        },
                        {
                            "text": "MON_2",
                            "type": "constant"
                        },
                        {
                            "text": "MON_3",
                            "type": "constant"
                        },
                        {
                            "text": "MON_4",
                            "type": "constant"
                        },
                        {
                            "text": "MON_5",
                            "type": "constant"
                        },
                        {
                            "text": "MON_6",
                            "type": "constant"
                        },
                        {
                            "text": "MON_7",
                            "type": "constant"
                        },
                        {
                            "text": "MON_8",
                            "type": "constant"
                        },
                        {
                            "text": "MON_9",
                            "type": "constant"
                        },
                        {
                            "text": "MON_10",
                            "type": "constant"
                        },
                        {
                            "text": "MON_11",
                            "type": "constant"
                        },
                        {
                            "text": "MON_12",
                            "type": "constant"
                        },
                        {
                            "text": "AM_STR",
                            "type": "constant"
                        },
                        {
                            "text": "PM_STR",
                            "type": "constant"
                        },
                        {
                            "text": "D_T_FMT",
                            "type": "constant"
                        },
                        {
                            "text": "D_FMT",
                            "type": "constant"
                        },
                        {
                            "text": "T_FMT",
                            "type": "constant"
                        },
                        {
                            "text": "T_FMT_AMPM",
                            "type": "constant"
                        },
                        {
                            "text": "ERA",
                            "type": "constant"
                        },
                        {
                            "text": "ERA_D_T_FMT",
                            "type": "constant"
                        },
                        {
                            "text": "ERA_D_FMT",
                            "type": "constant"
                        },
                        {
                            "text": "ERA_T_FMT",
                            "type": "constant"
                        },
                        {
                            "text": "ALT_DIGITS",
                            "type": "constant"
                        },
                        {
                            "text": "CRNCYSTR",
                            "type": "constant"
                        },
                        {
                            "text": "RADIXCHAR",
                            "type": "constant"
                        },
                        {
                            "text": "THOUSEP",
                            "type": "constant"
                        },
                        {
                            "text": "YESEXPR",
                            "type": "constant"
                        },
                        {
                            "text": "NOEXPR",
                            "type": "constant"
                        },
                        {
                            "text": "CODESET",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_SALT_LENGTH",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_STD_DES",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_EXT_DES",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_MD5",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_BLOWFISH",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_SHA256",
                            "type": "constant"
                        },
                        {
                            "text": "CRYPT_SHA512",
                            "type": "constant"
                        },
                        {
                            "text": "DIRECTORY_SEPARATOR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PATH_SEPARATOR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_BRACE",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_MARK",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_NOSORT",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_NOCHECK",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_NOESCAPE",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_ERR",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_ONLYDIR",
                            "type": "constant"
                        },
                        {
                            "text": "GLOB_AVAILABLE_FLAGS",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_OVERWRITE",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_SKIP",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_PREFIX_SAME",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_PREFIX_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_PREFIX_INVALID",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_PREFIX_IF_EXISTS",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_IF_EXISTS",
                            "type": "constant"
                        },
                        {
                            "text": "EXTR_REFS",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_ASC",
                            "description": "SORT_ASC is used with array_multisort to sort in ascending order.",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_DESC",
                            "description": "SORT_DESC is used with array_multisort to sort in descending order.",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_REGULAR",
                            "description": "SORT_REGULAR is used to compare items normally.",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_NUMERIC",
                            "description": "SORT_NUMERIC is used to compare items numerically.",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_STRING",
                            "description": "SORT_STRING is used to compare items as strings.",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_LOCALE_STRING",
                            "description": "SORT_LOCALE_STRING is used to compare items as strings, based on the current locale. Added in PHP 4.4.0 and 5.0.2.",
                            "type": "constant"
                        },
                        {
                            "text": "CASE_LOWER",
                            "description": "CASE_LOWER is used with array_change_key_case and is used to convert array keys to lower case. This is also the default case for array_change_key_case.",
                            "type": "constant"
                        },
                        {
                            "text": "CASE_UPPER",
                            "description": "CASE_UPPER is used with array_change_key_case and is used to convert array keys to upper case.",
                            "type": "constant"
                        },
                        {
                            "text": "COUNT_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "COUNT_RECURSIVE",
                            "type": "constant"
                        },
                        {
                            "text": "ASSERT_ACTIVE",
                            "type": "constant"
                        },
                        {
                            "text": "ASSERT_CALLBACK",
                            "type": "constant"
                        },
                        {
                            "text": "ASSERT_BAIL",
                            "type": "constant"
                        },
                        {
                            "text": "ASSERT_WARNING",
                            "type": "constant"
                        },
                        {
                            "text": "ASSERT_QUIET_EVAL",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_USE_PATH",
                            "description": "Flag indicating if the stream used the include path.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IGNORE_URL",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_ENFORCE_SAFE_MODE",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_REPORT_ERRORS",
                            "description": "Flag indicating if the wrapper is responsible for raising errors using trigger_error during opening of the stream. If this flag is not set, you should not raise any errors.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_MUST_SEEK",
                            "description": "This flag is useful when your extension really must be able to randomly seek around in a stream. Some streams may not be seekable in their native form, so this flag asks the streams API to check to see if the stream does support seeking. If it does not, it will copy the stream into temporary storage (which may be a temporary file or a memory stream) which does support seeking.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_URL_STAT_LINK",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_URL_STAT_QUIET",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_MKDIR_RECURSIVE",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_IS_URL",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_OPTION_BLOCKING",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_OPTION_READ_TIMEOUT",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_OPTION_READ_BUFFER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_OPTION_WRITE_BUFFER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_BUFFER_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_BUFFER_LINE",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_BUFFER_FULL",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CAST_AS_STREAM",
                            "description": "Stream casting, when stream_cast is called otherwise (see above).",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_CAST_FOR_SELECT",
                            "description": "Stream casting, for when stream_select is calling stream_cast.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_GIF",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_JPEG",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_PNG",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_SWF",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_PSD",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_BMP",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_TIFF_II",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_TIFF_MM",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_JPC",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_JP2",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_JPX",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_JB2",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_SWC",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_IFF",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_WBMP",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_JPEG2000",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_XBM",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_ICO",
                            "description": "Image type constant used by the image_type_to_mime_type and image_type_to_extension functions.",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_UNKNOWN",
                            "type": "constant"
                        },
                        {
                            "text": "IMAGETYPE_COUNT",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_A",
                            "description": "IPv4 Address Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_NS",
                            "description": "Authoritative Name Server Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_CNAME",
                            "description": "Alias (Canonical Name) Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_SOA",
                            "description": "Start of Authority Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_PTR",
                            "description": "Pointer Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_HINFO",
                            "description": "Host Info Resource (See IANA's Operating System Names for the meaning of these values)",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_MX",
                            "description": "Mail Exchanger Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_TXT",
                            "description": "Text Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_SRV",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_NAPTR",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_AAAA",
                            "description": "IPv6 Address Resource",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_A6",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_ANY",
                            "description": "Any Resource Record. On most systems this returns all resource records, however it should not be counted upon for critical uses. Try DNS_ALL instead.",
                            "type": "constant"
                        },
                        {
                            "text": "DNS_ALL",
                            "description": "Iteratively query the name server for each available record type.",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_QUERY_RFC1738",
                            "description": "End of standard v.5.3.1-0.dotdeb.1",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_QUERY_RFC3986",
                            "description": "Encoding is performed according to RFC 3986, and spaces will be percent encoded (%20).",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_MANDIR",
                            "leftLabel": "string",
                            "description": "WI-11254 Stubs for missing constants from PHP 5.4",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_BINARY",
                            "leftLabel": "string",
                            "description": "Specifies where the binaries were installed into.",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_WRITE",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_FLUSH",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_CLEAN",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_FINAL",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_CLEANABLE",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_FLUSHABLE",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_REMOVABLE",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_STDFLAGS",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_STARTED",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_OUTPUT_HANDLER_DISABLED",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXML_PEDANTIC",
                            "type": "constant"
                        },
                        {
                            "text": "ZLIB_ENCODING_RAW",
                            "type": "constant"
                        },
                        {
                            "text": "ZLIB_ENCODING_GZIP",
                            "type": "constant"
                        },
                        {
                            "text": "ZLIB_ENCODING_DEFLATE",
                            "type": "constant"
                        },
                        {
                            "text": "FILTER_SANITIZE_FULL_SPECIAL_CHARS",
                            "description": "Equivalent to calling htmlspecialchars() with ENT_QUOTES set.",
                            "type": "constant"
                        },
                        {
                            "text": "SID",
                            "leftLabel": "string",
                            "description": "(PHP4, PHP5) <p>Constant containing either the session name and session ID in the form of \"name=ID\" or empty string if session ID was set in an appropriate session cookie.",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SESSION_DISABLED",
                            "description": "Return value of session_status() if sessions are disabled.",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SESSION_NONE",
                            "description": "Return value of session_status() if sessions are enabled, but no session exists.",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SESSION_ACTIVE",
                            "description": "Return value of session_status() if sessions are enabled, and a session exists.",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_JOIN_GROUP",
                            "description": "Joins a multicast group. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_LEAVE_GROUP",
                            "description": "Leaves a multicast group. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_BLOCK_SOURCE",
                            "description": "Blocks packets arriving from a specific source to a specific multicast group, which must have been previously joined. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_UNBLOCK_SOURCE",
                            "description": "Unblocks (start receiving again) packets arriving from a specific source address to a specific multicast group, which must have been previously joined. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_JOIN_SOURCE_GROUP",
                            "description": "Receive packets destined to a specific multicast group whose source address matches a specific value. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "MCAST_LEAVE_SOURCE_GROUP",
                            "description": "Stop receiving packets destined to a specific multicast group whose soure address matches a specific value. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "IP_MULTICAST_IF",
                            "description": "The outgoing interface for IPv4 multicast packets. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "IP_MULTICAST_TTL",
                            "description": "The outgoing interface for IPv6 multicast packets. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "IP_MULTICAST_LOOP",
                            "description": "The multicast loopback policy for IPv4 packets, which determines whether multicast packets sent by this socket also reach receivers in the same host that have joined the same multicast group on the outgoing interface used by this socket. This is the case by default. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_MULTICAST_IF",
                            "description": "Analogous to IP_MULTICAST_LOOP, but for IPv6. (added in PHP 5.4)",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_MULTICAST_HOPS",
                            "description": "The time-to-live of outgoing IPv4 multicast packets.",
                            "type": "constant"
                        },
                        {
                            "text": "IPV6_MULTICAST_LOOP",
                            "description": "Analogous to IP_MULTICAST_TTL, but for IPv6 packets.",
                            "type": "constant"
                        },
                        {
                            "text": "IPPROTO_IP",
                            "type": "constant"
                        },
                        {
                            "text": "IPPROTO_IPV6",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_SUBSTITUTE",
                            "description": "Replace invalid code unit sequences with a Unicode Replacement Character U+FFFD (UTF-8) or &#FFFD; (otherwise) instead of returning an empty string.",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_DISALLOWED",
                            "description": "Replace invalid code points for the given document type with a Unicode Replacement Character U+FFFD (UTF-8) or &#FFFD; (otherwise) instead of leaving them as is. This may be useful, for instance, to ensure the well-formedness of XML documents with embedded external content.",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_HTML401",
                            "description": "Handle code as HTML 4.01.",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_XML1",
                            "description": "Handle code as XML 1.",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_XHTML",
                            "description": "Handle code as XHTML.",
                            "type": "constant"
                        },
                        {
                            "text": "ENT_HTML5",
                            "description": "Handle code as HTML 5.",
                            "type": "constant"
                        },
                        {
                            "text": "SCANDIR_SORT_ASCENDING",
                            "type": "constant"
                        },
                        {
                            "text": "SCANDIR_SORT_DESCENDING",
                            "type": "constant"
                        },
                        {
                            "text": "SCANDIR_SORT_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_NATURAL",
                            "description": "SORT_NATURAL is used to compare items as strings using \"natural ordering\" like natsort(). Added in PHP 5.4.0.",
                            "type": "constant"
                        },
                        {
                            "text": "SORT_FLAG_CASE",
                            "description": "SORT_FLAG_CASE can be combined (bitwise OR) with SORT_STRING or SORT_NATURAL to sort strings case-insensitively. Added in PHP 5.4.0.",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_META_TOUCH",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_META_OWNER",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_META_OWNER_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_META_GROUP",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_META_GROUP_NAME",
                            "type": "constant"
                        },
                        {
                            "text": "STREAM_META_ACCESS",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_DEFAULT_USERNAME",
                            "leftLabel": "string",
                            "description": "Property for default username to use when performing basic authentication",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_DEFAULT_PASSWORD",
                            "leftLabel": "string",
                            "description": "Property for default password to use when performing basic authentication",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_NON_INTERACTIVE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_DONT_STORE_PASSWORDS",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_NO_AUTH_CACHE",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_SSL_SERVER_FAILURES",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_SSL_SERVER_CERT_INFO",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_CONFIG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_SERVER_GROUP",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_AUTH_PARAM_CONFIG_DIR",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "PHP_SVN_AUTH_PARAM_IGNORE_SSL_VERIFY_ERRORS",
                            "leftLabel": "string",
                            "description": "Custom property for ignoring SSL cert verification errors",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_FS_CONFIG_FS_TYPE",
                            "leftLabel": "string",
                            "description": "Configuration key that determines filesystem type",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_FS_TYPE_BDB",
                            "leftLabel": "string",
                            "description": "Filesystem is Berkeley-DB implementation",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_FS_TYPE_FSFS",
                            "leftLabel": "string",
                            "description": "Filesystem is native-filesystem implementation",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_PROP_REVISION_DATE",
                            "leftLabel": "string",
                            "description": "svn:date",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_PROP_REVISION_ORIG_DATE",
                            "leftLabel": "string",
                            "description": "svn:original-date",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_PROP_REVISION_AUTHOR",
                            "leftLabel": "string",
                            "description": "svn:author",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_PROP_REVISION_LOG",
                            "leftLabel": "string",
                            "description": "svn:log",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_REVISION_INITIAL",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_REVISION_HEAD",
                            "description": "Magic number (-1) specifying the HEAD revision",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_REVISION_BASE",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_REVISION_COMMITTED",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_REVISION_PREV",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_REVISION_UNSPECIFIED",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_NON_RECURSIVE",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_DISCOVER_CHANGED_PATHS",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_OMIT_MESSAGES",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_STOP_ON_COPY",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_ALL",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_SHOW_UPDATES",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_NO_IGNORE",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_NONE",
                            "description": "Status does not exist",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_UNVERSIONED",
                            "description": "Item is not versioned in working copy",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_NORMAL",
                            "description": "Item exists, nothing else is happening",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_ADDED",
                            "description": "Item is scheduled for addition",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_MISSING",
                            "description": "Item is versioned but missing from the working copy",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_DELETED",
                            "description": "Item is scheduled for deletion",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_REPLACED",
                            "description": "Item was deleted and then re-added",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_MODIFIED",
                            "description": "Item (text or properties) was modified",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_MERGED",
                            "description": "Item's local modifications were merged with repository modifications",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_CONFLICTED",
                            "description": "Item's local modifications conflicted with repository modifications",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_IGNORED",
                            "description": "Item is unversioned but configured to be ignored",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_OBSTRUCTED",
                            "description": "Unversioned item is in the way of a versioned resource",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_EXTERNAL",
                            "description": "Unversioned path that is populated using svn:externals",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_STATUS_INCOMPLETE",
                            "description": "Directory does not contain complete entries list",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_NODE_NONE",
                            "description": "Absent",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_NODE_FILE",
                            "description": "File",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_NODE_DIR",
                            "description": "Directory",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_NODE_UNKNOWN",
                            "description": "Something Subversion cannot identify",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_SCHEDULE_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_SCHEDULE_ADD",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_SCHEDULE_DELETE",
                            "type": "constant"
                        },
                        {
                            "text": "SVN_WC_SCHEDULE_REPLACE",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_IPC_NOWAIT",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_EAGAIN",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_ENOMSG",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_NOERROR",
                            "type": "constant"
                        },
                        {
                            "text": "MSG_EXCEPT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_UNKNOWN",
                            "description": "description",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_A",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_ABBR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_ACRONYM",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_ADDRESS",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_ALIGN",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_APPLET",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_AREA",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_B",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BASE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BASEFONT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BDO",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BGSOUND",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BIG",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BLINK",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BLOCKQUOTE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BODY",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_BUTTON",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_CAPTION",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_CENTER",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_CITE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_CODE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_COL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_COLGROUP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_COMMENT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DD",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DEL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DFN",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DIR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DIV",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_DT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_EM",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_EMBED",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_FIELDSET",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_FONT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_FORM",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_FRAME",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_FRAMESET",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_H1",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_H2",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_H3",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_H4",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_H5",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_H6",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_HEAD",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_HR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_HTML",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_I",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_IFRAME",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_ILAYER",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_IMG",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_INPUT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_INS",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_ISINDEX",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_KBD",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_KEYGEN",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_LABEL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_LAYER",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_LEGEND",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_LI",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_LINK",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_LISTING",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_MAP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_MARQUEE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_MENU",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_META",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_MULTICOL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_NOBR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_NOEMBED",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_NOFRAMES",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_NOLAYER",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_NOSAVE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_NOSCRIPT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_OBJECT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_OL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_OPTGROUP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_OPTION",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_P",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_PARAM",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_PLAINTEXT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_PRE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_Q",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_RB",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_RBC",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_RP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_RT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_RTC",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_RUBY",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_S",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SAMP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SCRIPT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SELECT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SERVLET",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SMALL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SPACER",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SPAN",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_STRIKE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_STRONG",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_STYLE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SUB",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_SUP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TABLE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TBODY",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TD",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TEXTAREA",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TFOOT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TH",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_THEAD",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TITLE",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_TT",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_U",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_UL",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_VAR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_WBR",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_TAG_XMP",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_ROOT",
                            "description": "root node",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_DOCTYPE",
                            "description": "doctype",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_COMMENT",
                            "description": "HTML comment",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_PROCINS",
                            "description": "Processing Instruction",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_TEXT",
                            "description": "Text",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_START",
                            "description": "start tag",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_END",
                            "description": "end tag",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_STARTEND",
                            "description": "empty tag",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_CDATA",
                            "description": "CDATA",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_SECTION",
                            "description": "XML section",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_ASP",
                            "description": "ASP code",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_JSTE",
                            "description": "JSTE code",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_PHP",
                            "description": "PHP code",
                            "type": "constant"
                        },
                        {
                            "text": "TIDY_NODETYPE_XMLDECL",
                            "description": "XML declaration",
                            "type": "constant"
                        },
                        {
                            "text": "T_POW",
                            "type": "constant"
                        },
                        {
                            "text": "T_ELLIPSIS",
                            "type": "constant"
                        },
                        {
                            "text": "T_POW_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_REQUIRE_ONCE",
                            "type": "constant"
                        },
                        {
                            "text": "T_REQUIRE",
                            "type": "constant"
                        },
                        {
                            "text": "T_EVAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_INCLUDE_ONCE",
                            "type": "constant"
                        },
                        {
                            "text": "T_INCLUDE",
                            "type": "constant"
                        },
                        {
                            "text": "T_LOGICAL_OR",
                            "type": "constant"
                        },
                        {
                            "text": "T_LOGICAL_XOR",
                            "type": "constant"
                        },
                        {
                            "text": "T_LOGICAL_AND",
                            "type": "constant"
                        },
                        {
                            "text": "T_PRINT",
                            "type": "constant"
                        },
                        {
                            "text": "T_SR_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_SL_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_XOR_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_OR_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_AND_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_MOD_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_CONCAT_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_DIV_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_MUL_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_MINUS_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_PLUS_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_BOOLEAN_OR",
                            "type": "constant"
                        },
                        {
                            "text": "T_BOOLEAN_AND",
                            "type": "constant"
                        },
                        {
                            "text": "T_IS_NOT_IDENTICAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_IS_IDENTICAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_IS_NOT_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_IS_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_IS_GREATER_OR_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_IS_SMALLER_OR_EQUAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_SR",
                            "type": "constant"
                        },
                        {
                            "text": "T_SL",
                            "type": "constant"
                        },
                        {
                            "text": "T_INSTANCEOF",
                            "type": "constant"
                        },
                        {
                            "text": "T_UNSET_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_BOOL_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_OBJECT_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_ARRAY_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_STRING_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_DOUBLE_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_INT_CAST",
                            "type": "constant"
                        },
                        {
                            "text": "T_DEC",
                            "type": "constant"
                        },
                        {
                            "text": "T_INC",
                            "type": "constant"
                        },
                        {
                            "text": "T_CLONE",
                            "type": "constant"
                        },
                        {
                            "text": "T_NEW",
                            "type": "constant"
                        },
                        {
                            "text": "T_EXIT",
                            "type": "constant"
                        },
                        {
                            "text": "T_IF",
                            "type": "constant"
                        },
                        {
                            "text": "T_ELSEIF",
                            "type": "constant"
                        },
                        {
                            "text": "T_ELSE",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENDIF",
                            "type": "constant"
                        },
                        {
                            "text": "T_LNUMBER",
                            "type": "constant"
                        },
                        {
                            "text": "T_DNUMBER",
                            "type": "constant"
                        },
                        {
                            "text": "T_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "T_STRING_VARNAME",
                            "type": "constant"
                        },
                        {
                            "text": "T_VARIABLE",
                            "type": "constant"
                        },
                        {
                            "text": "T_NUM_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "T_INLINE_HTML",
                            "type": "constant"
                        },
                        {
                            "text": "T_CHARACTER",
                            "type": "constant"
                        },
                        {
                            "text": "T_BAD_CHARACTER",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENCAPSED_AND_WHITESPACE",
                            "type": "constant"
                        },
                        {
                            "text": "T_CONSTANT_ENCAPSED_STRING",
                            "type": "constant"
                        },
                        {
                            "text": "T_ECHO",
                            "type": "constant"
                        },
                        {
                            "text": "T_DO",
                            "type": "constant"
                        },
                        {
                            "text": "T_WHILE",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENDWHILE",
                            "type": "constant"
                        },
                        {
                            "text": "T_FOR",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENDFOR",
                            "type": "constant"
                        },
                        {
                            "text": "T_FOREACH",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENDFOREACH",
                            "type": "constant"
                        },
                        {
                            "text": "T_DECLARE",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENDDECLARE",
                            "type": "constant"
                        },
                        {
                            "text": "T_AS",
                            "type": "constant"
                        },
                        {
                            "text": "T_SWITCH",
                            "type": "constant"
                        },
                        {
                            "text": "T_ENDSWITCH",
                            "type": "constant"
                        },
                        {
                            "text": "T_CASE",
                            "type": "constant"
                        },
                        {
                            "text": "T_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "T_BREAK",
                            "type": "constant"
                        },
                        {
                            "text": "T_CONTINUE",
                            "type": "constant"
                        },
                        {
                            "text": "T_GOTO",
                            "type": "constant"
                        },
                        {
                            "text": "T_FUNCTION",
                            "type": "constant"
                        },
                        {
                            "text": "T_CONST",
                            "type": "constant"
                        },
                        {
                            "text": "T_RETURN",
                            "type": "constant"
                        },
                        {
                            "text": "T_YIELD",
                            "type": "constant"
                        },
                        {
                            "text": "T_TRY",
                            "type": "constant"
                        },
                        {
                            "text": "T_CATCH",
                            "type": "constant"
                        },
                        {
                            "text": "T_FINALLY",
                            "type": "constant"
                        },
                        {
                            "text": "T_THROW",
                            "type": "constant"
                        },
                        {
                            "text": "T_USE",
                            "type": "constant"
                        },
                        {
                            "text": "T_INSTEADOF",
                            "type": "constant"
                        },
                        {
                            "text": "T_GLOBAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_PUBLIC",
                            "type": "constant"
                        },
                        {
                            "text": "T_PROTECTED",
                            "type": "constant"
                        },
                        {
                            "text": "T_PRIVATE",
                            "type": "constant"
                        },
                        {
                            "text": "T_FINAL",
                            "type": "constant"
                        },
                        {
                            "text": "T_ABSTRACT",
                            "type": "constant"
                        },
                        {
                            "text": "T_STATIC",
                            "type": "constant"
                        },
                        {
                            "text": "T_VAR",
                            "type": "constant"
                        },
                        {
                            "text": "T_UNSET",
                            "type": "constant"
                        },
                        {
                            "text": "T_ISSET",
                            "type": "constant"
                        },
                        {
                            "text": "T_EMPTY",
                            "type": "constant"
                        },
                        {
                            "text": "T_HALT_COMPILER",
                            "type": "constant"
                        },
                        {
                            "text": "T_CLASS",
                            "type": "constant"
                        },
                        {
                            "text": "T_TRAIT",
                            "type": "constant"
                        },
                        {
                            "text": "T_INTERFACE",
                            "type": "constant"
                        },
                        {
                            "text": "T_EXTENDS",
                            "type": "constant"
                        },
                        {
                            "text": "T_IMPLEMENTS",
                            "type": "constant"
                        },
                        {
                            "text": "T_OBJECT_OPERATOR",
                            "type": "constant"
                        },
                        {
                            "text": "T_DOUBLE_ARROW",
                            "type": "constant"
                        },
                        {
                            "text": "T_LIST",
                            "type": "constant"
                        },
                        {
                            "text": "T_ARRAY",
                            "type": "constant"
                        },
                        {
                            "text": "T_CALLABLE",
                            "type": "constant"
                        },
                        {
                            "text": "T_CLASS_C",
                            "type": "constant"
                        },
                        {
                            "text": "T_TRAIT_C",
                            "type": "constant"
                        },
                        {
                            "text": "T_METHOD_C",
                            "type": "constant"
                        },
                        {
                            "text": "T_FUNC_C",
                            "type": "constant"
                        },
                        {
                            "text": "T_LINE",
                            "type": "constant"
                        },
                        {
                            "text": "T_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "T_COMMENT",
                            "type": "constant"
                        },
                        {
                            "text": "T_DOC_COMMENT",
                            "type": "constant"
                        },
                        {
                            "text": "T_OPEN_TAG",
                            "type": "constant"
                        },
                        {
                            "text": "T_OPEN_TAG_WITH_ECHO",
                            "type": "constant"
                        },
                        {
                            "text": "T_CLOSE_TAG",
                            "type": "constant"
                        },
                        {
                            "text": "T_WHITESPACE",
                            "type": "constant"
                        },
                        {
                            "text": "T_START_HEREDOC",
                            "type": "constant"
                        },
                        {
                            "text": "T_END_HEREDOC",
                            "type": "constant"
                        },
                        {
                            "text": "T_DOLLAR_OPEN_CURLY_BRACES",
                            "type": "constant"
                        },
                        {
                            "text": "T_CURLY_OPEN",
                            "type": "constant"
                        },
                        {
                            "text": "T_PAAMAYIM_NEKUDOTAYIM",
                            "type": "constant"
                        },
                        {
                            "text": "T_NAMESPACE",
                            "type": "constant"
                        },
                        {
                            "text": "T_NS_C",
                            "type": "constant"
                        },
                        {
                            "text": "T_DIR",
                            "type": "constant"
                        },
                        {
                            "text": "T_NS_SEPARATOR",
                            "type": "constant"
                        },
                        {
                            "text": "T_DOUBLE_COLON",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_NO_MEMORY",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_SYNTAX",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_NO_ELEMENTS",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_INVALID_TOKEN",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_UNCLOSED_TOKEN",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_PARTIAL_CHAR",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_TAG_MISMATCH",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_DUPLICATE_ATTRIBUTE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_JUNK_AFTER_DOC_ELEMENT",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_PARAM_ENTITY_REF",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_UNDEFINED_ENTITY",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_RECURSIVE_ENTITY_REF",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_ASYNC_ENTITY",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_BAD_CHAR_REF",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_BINARY_ENTITY_REF",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_MISPLACED_XML_PI",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_UNKNOWN_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_INCORRECT_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_UNCLOSED_CDATA_SECTION",
                            "type": "constant"
                        },
                        {
                            "text": "XML_ERROR_EXTERNAL_ENTITY_HANDLING",
                            "type": "constant"
                        },
                        {
                            "text": "XML_OPTION_CASE_FOLDING",
                            "type": "constant"
                        },
                        {
                            "text": "XML_OPTION_TARGET_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "XML_OPTION_SKIP_TAGSTART",
                            "type": "constant"
                        },
                        {
                            "text": "XML_OPTION_SKIP_WHITE",
                            "type": "constant"
                        },
                        {
                            "text": "XML_SAX_IMPL",
                            "leftLabel": "string",
                            "description": "Holds the SAX implementation method.",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_CLONE_AUTO",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_CLONE_NEVER",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_CLONE_ALWAYS",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_NONE",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_READ_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_WRITE_FILE",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_CREATE_DIRECTORY",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_READ_NETWORK",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_WRITE_NETWORK",
                            "type": "constant"
                        },
                        {
                            "text": "XSL_SECPREF_DEFAULT",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXSLT_VERSION",
                            "description": "libxslt version like 10117. Available as of PHP 5.1.2.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBXSLT_DOTTED_VERSION",
                            "leftLabel": "string",
                            "description": "libxslt version like 1.1.17. Available as of PHP 5.1.2.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBEXSLT_VERSION",
                            "description": "libexslt version like 813. Available as of PHP 5.1.2.",
                            "type": "constant"
                        },
                        {
                            "text": "LIBEXSLT_DOTTED_VERSION",
                            "leftLabel": "string",
                            "description": "libexslt version like 1.1.17. Available as of PHP 5.1.2.",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_ANY_SCALAR_STYLE",
                            "description": "Start of yaml v.1.2.0",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_PLAIN_SCALAR_STYLE",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_SINGLE_QUOTED_SCALAR_STYLE",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_DOUBLE_QUOTED_SCALAR_STYLE",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_LITERAL_SCALAR_STYLE",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_FOLDED_SCALAR_STYLE",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_NULL_TAG",
                            "leftLabel": "string",
                            "description": "Common tags usable by yaml_parse() callback methods.",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_BOOL_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_STR_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_INT_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_FLOAT_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_TIMESTAMP_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_SEQ_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_MAP_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_PHP_TAG",
                            "leftLabel": "string",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_ANY_ENCODING",
                            "description": "Encoding types for yaml_emit()",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_UTF8_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_UTF16LE_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_UTF16BE_ENCODING",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_ANY_BREAK",
                            "description": "Linebreak types for yaml_emit()",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_CR_BREAK",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_LN_BREAK",
                            "type": "constant"
                        },
                        {
                            "text": "YAML_CRLN_BREAK",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_SUCCESS",
                            "description": "Start of Zend Extensions",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_WAITING",
                            "description": "Job was processed and succeeded",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_SUSPENDED",
                            "description": "Job is waiting for being processed (was not scheduled)",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_SCHEDULED",
                            "description": "Job was suspended",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_WAITING_PREDECESSOR",
                            "description": "Job is scheduled and waiting in queue",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_IN_PROCESS",
                            "description": "Job is waiting for it's predecessor to be completed",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_EXECUTION_FAILED",
                            "description": "Job is in process in Queue",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_STATUS_LOGICALLY_FAILED",
                            "description": "Job execution failed in the ZendEnabler",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_PRIORITY_LOW",
                            "description": "Job was processed and failed logically either",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_PRIORITY_NORMAL",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_PRIORITY_HIGH",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_PRIORITY_URGENT",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_POST",
                            "description": "Constants for saving global variables bit mask",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_GET",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_COOKIE",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_SESSION",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_RAW_POST",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_SERVER",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_FILES",
                            "type": "constant"
                        },
                        {
                            "text": "JOB_QUEUE_SAVE_ENV",
                            "type": "constant"
                        },
                        {
                            "text": "FORCE_GZIP",
                            "type": "constant"
                        },
                        {
                            "text": "FORCE_DEFLATE",
                            "type": "constant"
                        },
                        {
                            "text": "ZLIB_ENCODING_RAW",
                            "type": "constant"
                        },
                        {
                            "text": "ZLIB_ENCODING_GZIP",
                            "type": "constant"
                        },
                        {
                            "text": "ZLIB_ENCODING_DEFLATE",
                            "type": "constant"
                        },
                        {
                            "text": "Generator",
                            "description": "Generator objects are returned from generators, cannot be instantiated via new.",
                            "type": "class"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_this",
                            "type": "class"
                        },
                        {
                            "text": "PS_UNRESERVE_PREFIX_static",
                            "type": "class"
                        },
                        {
                            "text": "object",
                            "type": "class"
                        },
                        {
                            "text": "AMQPChannel",
                            "description": "Represents a AMQP channel between PHP and a AMQP server.",
                            "type": "class"
                        },
                        {
                            "text": "AMQPChannelException",
                            "rightLabel": "AMQPException",
                            "type": "class"
                        },
                        {
                            "text": "AMQPConnection",
                            "description": "Represents a AMQP connection between PHP and a AMQP server.",
                            "type": "class"
                        },
                        {
                            "text": "AMQPConnectionException",
                            "rightLabel": "AMQPException",
                            "type": "class"
                        },
                        {
                            "text": "AMQPEnvelope",
                            "description": "Represents a AMQP envelope",
                            "type": "class"
                        },
                        {
                            "text": "AMQPException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "AMQPExchange",
                            "description": "Represents a AMQP exchange",
                            "type": "class"
                        },
                        {
                            "text": "AMQPExchangeException",
                            "rightLabel": "AMQPException",
                            "type": "class"
                        },
                        {
                            "text": "AMQPQueue",
                            "description": "Represents a AMQP queue",
                            "type": "class"
                        },
                        {
                            "text": "AMQPQueueException",
                            "rightLabel": "AMQPException",
                            "type": "class"
                        },
                        {
                            "text": "APCUIterator",
                            "description": "The APCUIterator class",
                            "type": "class"
                        },
                        {
                            "text": "stdClass",
                            "description": "Start of Core v.5.3.6-13ubuntu3.2",
                            "type": "class"
                        },
                        {
                            "text": "Exception",
                            "description": "Exception is the base class for\nall Exceptions.",
                            "type": "class"
                        },
                        {
                            "text": "Error",
                            "description": "Error is the base class for all internal PHP error exceptions.",
                            "type": "class"
                        },
                        {
                            "text": "TypeError",
                            "rightLabel": "Error",
                            "description": "There are three scenarios where a TypeError may be thrown.",
                            "type": "class"
                        },
                        {
                            "text": "ParseError",
                            "rightLabel": "Error",
                            "description": "ParseError is thrown when an error occurs while parsing PHP code, such as when {@see eval()} is called.",
                            "type": "class"
                        },
                        {
                            "text": "AssertionError",
                            "rightLabel": "Error",
                            "description": "AssertionError is thrown when an assertion made via {@see assert()} fails.",
                            "type": "class"
                        },
                        {
                            "text": "ArithmeticError",
                            "rightLabel": "Error",
                            "description": "ArithmeticError is thrown when an error occurs while performing mathematical operations.",
                            "type": "class"
                        },
                        {
                            "text": "DivisionByZeroError",
                            "rightLabel": "Error",
                            "description": "DivisionByZeroError is thrown when an attempt is made to divide a number by zero.",
                            "type": "class"
                        },
                        {
                            "text": "ErrorException",
                            "rightLabel": "Exception",
                            "description": "An Error Exception.",
                            "type": "class"
                        },
                        {
                            "text": "Closure",
                            "description": "Class used to represent anonymous functions.",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseBucket",
                            "description": "Couchbase extension stubs\nGathered from http:\/\/docs.couchbase.com\/sdk-api\/couchbase-php-client-2.0.7\/index.html\nMaintiner: wayne530@gmail.com",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseBucketManager",
                            "description": "Class CouchbaseBucketManager",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseCluster",
                            "description": "Class CouchbaseCluster",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseClusterManager",
                            "description": "Class CouchbaseClusterManager",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseN1qlQuery",
                            "description": "Class CouchbaseN1qlQuery",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseViewQuery",
                            "description": "Class CouchbaseViewQuery",
                            "type": "class"
                        },
                        {
                            "text": "_CouchbaseDefaultViewQuery",
                            "rightLabel": "CouchbaseViewQuery",
                            "description": "Class _CouchbaseDefaultViewQuery",
                            "type": "class"
                        },
                        {
                            "text": "_CouchbaseSpatialViewQuery",
                            "rightLabel": "CouchbaseViewQuery",
                            "description": "Class _CouchbaseSpatialViewQuery",
                            "type": "class"
                        },
                        {
                            "text": "CouchbaseException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "CURLFile",
                            "type": "class"
                        },
                        {
                            "text": "DateTimeImmutable",
                            "type": "class"
                        },
                        {
                            "text": "DateTime",
                            "description": "Representation of date and time.",
                            "type": "class"
                        },
                        {
                            "text": "DateTimeZone",
                            "description": "Representation of time zone",
                            "type": "class"
                        },
                        {
                            "text": "DateInterval",
                            "description": "Representation of date interval. A date interval stores either a fixed amount of\ntime (in years, months, days, hours etc) or a relative time string in the format\nthat DateTime's constructor supports.",
                            "type": "class"
                        },
                        {
                            "text": "DatePeriod",
                            "description": "Representation of date period.",
                            "type": "class"
                        },
                        {
                            "text": "DOMNode",
                            "description": "20120405 AG synced to official docs",
                            "type": "class"
                        },
                        {
                            "text": "DOMException",
                            "rightLabel": "Exception",
                            "description": "DOM operations raise exceptions under particular circumstances, i.e.,\nwhen an operation is impossible to perform for logical reasons.",
                            "type": "class"
                        },
                        {
                            "text": "DOMStringList",
                            "type": "class"
                        },
                        {
                            "text": "DOMNameList",
                            "type": "class"
                        },
                        {
                            "text": "DOMImplementationList",
                            "type": "class"
                        },
                        {
                            "text": "DOMImplementationSource",
                            "type": "class"
                        },
                        {
                            "text": "DOMImplementation",
                            "description": "The DOMImplementation interface provides a number\nof methods for performing operations that are independent of any\nparticular instance of the document object model.",
                            "type": "class"
                        },
                        {
                            "text": "DOMNameSpaceNode",
                            "type": "class"
                        },
                        {
                            "text": "DOMDocumentFragment",
                            "rightLabel": "DOMNode",
                            "description": "The DOMDocumentFragment class",
                            "type": "class"
                        },
                        {
                            "text": "DOMDocument",
                            "rightLabel": "DOMNode",
                            "description": "The DOMDocument class represents an entire HTML or XML\ndocument; serves as the root of the document tree.",
                            "type": "class"
                        },
                        {
                            "text": "DOMNodeList",
                            "description": "The DOMNodeList class",
                            "type": "class"
                        },
                        {
                            "text": "DOMNamedNodeMap",
                            "description": "The DOMNamedNodeMap class",
                            "type": "class"
                        },
                        {
                            "text": "DOMCharacterData",
                            "rightLabel": "DOMNode",
                            "description": "The DOMCharacterData class represents nodes with character data.",
                            "type": "class"
                        },
                        {
                            "text": "DOMAttr",
                            "rightLabel": "DOMNode",
                            "description": "The DOMAttr interface represents an attribute in an DOMElement object.",
                            "type": "class"
                        },
                        {
                            "text": "DOMElement",
                            "rightLabel": "DOMNode",
                            "description": "The DOMElement class",
                            "type": "class"
                        },
                        {
                            "text": "DOMText",
                            "rightLabel": "DOMCharacterData",
                            "description": "The DOMText class inherits from <classname>DOMCharacterData<\/classname> and represents the textual content of\na <classname>DOMElement<\/classname> or <classname>DOMAttr<\/classname>.",
                            "type": "class"
                        },
                        {
                            "text": "DOMComment",
                            "rightLabel": "DOMCharacterData",
                            "description": "The DOMComment class represents comment nodes,\ncharacters delimited by lt;!-- and --&gt;.",
                            "type": "class"
                        },
                        {
                            "text": "DOMTypeinfo",
                            "type": "class"
                        },
                        {
                            "text": "DOMUserDataHandler",
                            "type": "class"
                        },
                        {
                            "text": "DOMDomError",
                            "type": "class"
                        },
                        {
                            "text": "DOMErrorHandler",
                            "type": "class"
                        },
                        {
                            "text": "DOMLocator",
                            "type": "class"
                        },
                        {
                            "text": "DOMConfiguration",
                            "type": "class"
                        },
                        {
                            "text": "DOMCdataSection",
                            "rightLabel": "DOMText",
                            "description": "The DOMCdataSection inherits from DOMText for textural representation of CData constructs.",
                            "type": "class"
                        },
                        {
                            "text": "DOMDocumentType",
                            "rightLabel": "DOMNode",
                            "description": "The DOMDocumentType class",
                            "type": "class"
                        },
                        {
                            "text": "DOMNotation",
                            "rightLabel": "DOMNode",
                            "description": "The DOMNotation class",
                            "type": "class"
                        },
                        {
                            "text": "DOMEntity",
                            "rightLabel": "DOMNode",
                            "description": "The DOMEntity class represents a known entity, either parsed or unparsed, in an XML document.",
                            "type": "class"
                        },
                        {
                            "text": "DOMEntityReference",
                            "rightLabel": "DOMNode",
                            "description": "Extends DOMNode.",
                            "type": "class"
                        },
                        {
                            "text": "DOMProcessingInstruction",
                            "rightLabel": "DOMNode",
                            "description": "The DOMProcessingInstruction class",
                            "type": "class"
                        },
                        {
                            "text": "DOMStringExtend",
                            "type": "class"
                        },
                        {
                            "text": "DOMXPath",
                            "description": "The DOMXPath class (supports XPath 1.0)",
                            "type": "class"
                        },
                        {
                            "text": "ffmpeg_movie",
                            "type": "class"
                        },
                        {
                            "text": "ffmpeg_frame",
                            "type": "class"
                        },
                        {
                            "text": "ffmpeg_animated_gif",
                            "type": "class"
                        },
                        {
                            "text": "finfo",
                            "description": "Start of fileinfo v.1.0.5",
                            "type": "class"
                        },
                        {
                            "text": "GearmanClient",
                            "description": "Class: GearmanClient",
                            "type": "class"
                        },
                        {
                            "text": "GearmanTask",
                            "description": "Class: GearmanTask",
                            "type": "class"
                        },
                        {
                            "text": "GearmanWorker",
                            "description": "Class: GearmanWorker",
                            "type": "class"
                        },
                        {
                            "text": "GearmanJob",
                            "description": "Class: GearmanJob",
                            "type": "class"
                        },
                        {
                            "text": "GearmanException",
                            "rightLabel": "Exception",
                            "description": "Class: GearmanException",
                            "type": "class"
                        },
                        {
                            "text": "Gmagick",
                            "type": "class"
                        },
                        {
                            "text": "GmagickDraw",
                            "type": "class"
                        },
                        {
                            "text": "GmagickException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "GmagickPixel",
                            "type": "class"
                        },
                        {
                            "text": "GmagickPixelException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "GMP",
                            "type": "class"
                        },
                        {
                            "text": "HttpException",
                            "rightLabel": "Exception",
                            "description": "Start of http v.1.6.6",
                            "type": "class"
                        },
                        {
                            "text": "HttpRuntimeException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpInvalidParamException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpHeaderException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpMalformedHeadersException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpRequestMethodException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpMessageTypeException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpEncodingException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpRequestException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpRequestPoolException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpSocketException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpResponseException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpUrlException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpQueryStringException",
                            "rightLabel": "HttpException",
                            "type": "class"
                        },
                        {
                            "text": "HttpDeflateStream",
                            "type": "class"
                        },
                        {
                            "text": "HttpInflateStream",
                            "type": "class"
                        },
                        {
                            "text": "HttpMessage",
                            "type": "class"
                        },
                        {
                            "text": "HttpQueryString",
                            "type": "class"
                        },
                        {
                            "text": "HttpRequest",
                            "type": "class"
                        },
                        {
                            "text": "HttpRequestDataShare",
                            "type": "class"
                        },
                        {
                            "text": "HttpRequestPool",
                            "type": "class"
                        },
                        {
                            "text": "HttpResponse",
                            "type": "class"
                        },
                        {
                            "text": "HttpUtil",
                            "type": "class"
                        },
                        {
                            "text": "ImagickException",
                            "rightLabel": "Exception",
                            "description": "Start of imagick v.3.2.0RC1",
                            "type": "class"
                        },
                        {
                            "text": "ImagickDrawException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "ImagickPixelIteratorException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "ImagickPixelException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "Imagick",
                            "type": "class"
                        },
                        {
                            "text": "ImagickDraw",
                            "type": "class"
                        },
                        {
                            "text": "ImagickPixelIterator",
                            "type": "class"
                        },
                        {
                            "text": "ImagickPixel",
                            "type": "class"
                        },
                        {
                            "text": "Collator",
                            "description": "Start of intl v.1.1.0",
                            "type": "class"
                        },
                        {
                            "text": "NumberFormatter",
                            "type": "class"
                        },
                        {
                            "text": "Normalizer",
                            "type": "class"
                        },
                        {
                            "text": "Locale",
                            "type": "class"
                        },
                        {
                            "text": "MessageFormatter",
                            "type": "class"
                        },
                        {
                            "text": "IntlDateFormatter",
                            "type": "class"
                        },
                        {
                            "text": "ResourceBundle",
                            "type": "class"
                        },
                        {
                            "text": "Transliterator",
                            "type": "class"
                        },
                        {
                            "text": "Spoofchecker",
                            "type": "class"
                        },
                        {
                            "text": "IntlGregorianCalendar",
                            "type": "class"
                        },
                        {
                            "text": "IntlCalendar",
                            "type": "class"
                        },
                        {
                            "text": "IntlIterator",
                            "type": "class"
                        },
                        {
                            "text": "IntlTimeZone",
                            "type": "class"
                        },
                        {
                            "text": "IntlBreakIterator",
                            "type": "class"
                        },
                        {
                            "text": "IntlRuleBasedBreakIterator",
                            "rightLabel": "IntlBreakIterator",
                            "type": "class"
                        },
                        {
                            "text": "IntlCodePointBreakIterator",
                            "rightLabel": "IntlBreakIterator",
                            "type": "class"
                        },
                        {
                            "text": "IntlChar",
                            "description": "<p>IntlChar provides access to a number of utility methods that can be used to access information about Unicode characters.<\/p>\n<p>The methods and constants adhere closely to the names and behavior used by the underlying ICU library.<\/p>",
                            "type": "class"
                        },
                        {
                            "text": "JsonIncrementalParser",
                            "type": "class"
                        },
                        {
                            "text": "LibXMLError",
                            "description": "Start of libxml v.",
                            "type": "class"
                        },
                        {
                            "text": "MemcachePool",
                            "description": "Start of memcache v.3.0.8",
                            "type": "class"
                        },
                        {
                            "text": "Memcache",
                            "rightLabel": "MemcachePool",
                            "description": "Represents a connection to a set of memcache servers.",
                            "type": "class"
                        },
                        {
                            "text": "Memcached",
                            "description": "Start of memcached v.2.1.0",
                            "type": "class"
                        },
                        {
                            "text": "MemcachedException",
                            "rightLabel": "RuntimeException",
                            "type": "class"
                        },
                        {
                            "text": "SWFShape",
                            "description": "Start of ming v.",
                            "type": "class"
                        },
                        {
                            "text": "SWFFill",
                            "type": "class"
                        },
                        {
                            "text": "SWFGradient",
                            "type": "class"
                        },
                        {
                            "text": "SWFBitmap",
                            "type": "class"
                        },
                        {
                            "text": "SWFText",
                            "type": "class"
                        },
                        {
                            "text": "SWFTextField",
                            "type": "class"
                        },
                        {
                            "text": "SWFFont",
                            "type": "class"
                        },
                        {
                            "text": "SWFDisplayItem",
                            "type": "class"
                        },
                        {
                            "text": "SWFMovie",
                            "type": "class"
                        },
                        {
                            "text": "SWFButton",
                            "type": "class"
                        },
                        {
                            "text": "SWFAction",
                            "type": "class"
                        },
                        {
                            "text": "SWFMorph",
                            "type": "class"
                        },
                        {
                            "text": "SWFSprite",
                            "type": "class"
                        },
                        {
                            "text": "SWFSound",
                            "type": "class"
                        },
                        {
                            "text": "SWFFontChar",
                            "type": "class"
                        },
                        {
                            "text": "SWFSoundInstance",
                            "type": "class"
                        },
                        {
                            "text": "SWFVideoStream",
                            "type": "class"
                        },
                        {
                            "text": "MongoClient",
                            "description": "*\nMongo extension stubs\nGathered from http:\/\/www.php.net\/manual\/en\/book.mongo.php\nMaintainer: Alexander Makarov, sam@rmcreative.ru, max@upgradeyour.com",
                            "type": "class"
                        },
                        {
                            "text": "Mongo",
                            "rightLabel": "MongoClient",
                            "description": "The connection point between MongoDB and PHP.",
                            "type": "class"
                        },
                        {
                            "text": "MongoDB",
                            "description": "Instances of this class are used to interact with a database.",
                            "type": "class"
                        },
                        {
                            "text": "MongoCollection",
                            "description": "Represents a database collection.",
                            "type": "class"
                        },
                        {
                            "text": "MongoCursor",
                            "description": "Result object for database query.",
                            "type": "class"
                        },
                        {
                            "text": "MongoCommandCursor",
                            "type": "class"
                        },
                        {
                            "text": "MongoGridFS",
                            "rightLabel": "MongoCollection",
                            "type": "class"
                        },
                        {
                            "text": "MongoGridFSFile",
                            "type": "class"
                        },
                        {
                            "text": "MongoGridFSCursor",
                            "rightLabel": "MongoCursor",
                            "type": "class"
                        },
                        {
                            "text": "MongoId",
                            "description": "A unique identifier created for database objects.",
                            "type": "class"
                        },
                        {
                            "text": "MongoCode",
                            "type": "class"
                        },
                        {
                            "text": "MongoRegex",
                            "type": "class"
                        },
                        {
                            "text": "MongoDate",
                            "type": "class"
                        },
                        {
                            "text": "MongoBinData",
                            "type": "class"
                        },
                        {
                            "text": "MongoDBRef",
                            "type": "class"
                        },
                        {
                            "text": "MongoWriteBatch",
                            "type": "class"
                        },
                        {
                            "text": "MongoUpdateBatch",
                            "rightLabel": "MongoWriteBatch",
                            "type": "class"
                        },
                        {
                            "text": "MongoException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "MongoCursorException",
                            "rightLabel": "MongoException",
                            "type": "class"
                        },
                        {
                            "text": "MongoCursorTimeoutException",
                            "rightLabel": "MongoCursorException",
                            "type": "class"
                        },
                        {
                            "text": "MongoConnectionException",
                            "rightLabel": "MongoException",
                            "type": "class"
                        },
                        {
                            "text": "MongoGridFSException",
                            "rightLabel": "MongoException",
                            "type": "class"
                        },
                        {
                            "text": "MongoWriteConcernException",
                            "rightLabel": "MongoCursorException",
                            "description": "<p>(PECL mongo &gt;= 1.5.0)<\/p>",
                            "type": "class"
                        },
                        {
                            "text": "MongoExecutionTimeoutException",
                            "rightLabel": "MongoException",
                            "description": "<p>(PECL mongo &gt;= 1.5.0)<\/p>",
                            "type": "class"
                        },
                        {
                            "text": "MongoProtocolException",
                            "rightLabel": "MongoException",
                            "description": "<p>(PECL mongo &gt;= 1.5.0)<\/p>",
                            "type": "class"
                        },
                        {
                            "text": "MongoDuplicateKeyException",
                            "rightLabel": "MongoWriteConcernException",
                            "description": "<p>(PECL mongo &gt;= 1.5.0)<\/p>",
                            "type": "class"
                        },
                        {
                            "text": "MongoResultException",
                            "rightLabel": "MongoException",
                            "description": "<p>(PECL mongo &gt;= 1.3.0)<\/p>",
                            "type": "class"
                        },
                        {
                            "text": "MongoTimestamp",
                            "type": "class"
                        },
                        {
                            "text": "MongoInt32",
                            "type": "class"
                        },
                        {
                            "text": "MongoInt64",
                            "type": "class"
                        },
                        {
                            "text": "MongoLog",
                            "type": "class"
                        },
                        {
                            "text": "MongoPool",
                            "type": "class"
                        },
                        {
                            "text": "MongoMaxKey",
                            "type": "class"
                        },
                        {
                            "text": "MongoMinKey",
                            "type": "class"
                        },
                        {
                            "text": "mysqli_sql_exception",
                            "rightLabel": "RuntimeException",
                            "description": "Start of mysqli extension stubs v.0.1",
                            "type": "class"
                        },
                        {
                            "text": "mysqli_driver",
                            "description": "MySQLi Driver.",
                            "type": "class"
                        },
                        {
                            "text": "mysqli",
                            "description": "Represents a connection between PHP and a MySQL database.",
                            "type": "class"
                        },
                        {
                            "text": "mysqli_warning",
                            "description": "Represents one or more MySQL warnings.",
                            "type": "class"
                        },
                        {
                            "text": "mysqli_result",
                            "description": "Represents the result set obtained from a query against the database.",
                            "type": "class"
                        },
                        {
                            "text": "mysqli_stmt",
                            "description": "Represents a prepared statement.",
                            "type": "class"
                        },
                        {
                            "text": "OAuth",
                            "description": "The OAuth extension provides a simple interface to interact with data providers using the OAuth HTTP specification to protect private resources.",
                            "type": "class"
                        },
                        {
                            "text": "OAuthException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "OAuthProvider",
                            "description": "Manages an OAuth provider class.",
                            "type": "class"
                        },
                        {
                            "text": "OCI_Lob",
                            "description": "Start of oci8 v.2.0.7",
                            "type": "class"
                        },
                        {
                            "text": "OCI_Collection",
                            "description": "OCI8 Collection functionality.",
                            "type": "class"
                        },
                        {
                            "text": "PDOException",
                            "rightLabel": "RuntimeException",
                            "description": "Start of PDO v.1.0.4dev",
                            "type": "class"
                        },
                        {
                            "text": "PDO",
                            "description": "Represents a connection between PHP and a database server.",
                            "type": "class"
                        },
                        {
                            "text": "PDOStatement",
                            "description": "Represents a prepared statement and, after the statement is executed, an\nassociated result set.",
                            "type": "class"
                        },
                        {
                            "text": "PDORow",
                            "type": "class"
                        },
                        {
                            "text": "PharException",
                            "rightLabel": "Exception",
                            "description": "Start of Phar v.2.0.1",
                            "type": "class"
                        },
                        {
                            "text": "Phar",
                            "rightLabel": "RecursiveDirectoryIterator",
                            "description": "The Phar class provides a high-level interface to accessing and creating\nphar archives.",
                            "type": "class"
                        },
                        {
                            "text": "PharData",
                            "rightLabel": "Phar",
                            "description": "The PharData class provides a high-level interface to accessing and creating\nnon-executable tar and zip archives. Because these archives do not contain\na stub and cannot be executed by the phar extension, it is possible to create\nand manipulate regular zip and tar files using the PharData class even if\nphar.readonly php.ini setting is 1.",
                            "type": "class"
                        },
                        {
                            "text": "PharFileInfo",
                            "rightLabel": "SplFileInfo",
                            "description": "The PharFileInfo class provides a high-level interface to the contents\nand attributes of a single file within a phar archive.",
                            "type": "class"
                        },
                        {
                            "text": "Pool",
                            "description": "A Pool is a container for, and controller of, an adjustable number of\nWorkers.<br\/>\nPooling provides a higher level abstraction of the Worker functionality,\nincluding the management of references in the way required by pthreads.",
                            "type": "class"
                        },
                        {
                            "text": "Threaded",
                            "description": "Threaded objects form the basis of pthreads ability to execute user code\nasynchronously; they expose and include synchronization methods and various\nuseful interfaces.",
                            "type": "class"
                        },
                        {
                            "text": "Stackable",
                            "rightLabel": "Threaded",
                            "description": "Stackable is an alias of Threaded. This class name was used in pthreads until\nversion 2.0.0",
                            "type": "class"
                        },
                        {
                            "text": "Thread",
                            "rightLabel": "Threaded",
                            "description": "When the start method of a Thread is invoked, the run method code will\nbe executed in separate Thread, asynchronously.<br\/>After the run method\nis executed the Thread will exit immediately, it will be joined with\nthe creating Thread at the approriate time.",
                            "type": "class"
                        },
                        {
                            "text": "Worker",
                            "rightLabel": "Thread",
                            "description": "Worker Threads have a persistent context, as such should be used over\nThreads in most cases.<br\/>\nWhen a Worker is started, the run method will be executed, but the Thread will\nnot leave until one of the following conditions are met:<br\/>\n- the Worker goes out of scope (no more references remain)<br\/>\n- the programmer calls shutdown<br\/>\n- the script dies<br\/>\nThis means the programmer can reuse the context throughout execution; placing\nobjects on the stack of the Worker will cause the Worker to execute the stacked\nobjects run method.",
                            "type": "class"
                        },
                        {
                            "text": "Mutex",
                            "description": "The static methods contained in the Mutex class provide direct access to Posix\nMutex functionality.",
                            "type": "class"
                        },
                        {
                            "text": "Cond",
                            "description": "The static methods contained in the Cond class provide direct access to Posix\nCondition Variables.",
                            "type": "class"
                        },
                        {
                            "text": "Redis",
                            "description": "Helper autocomplete for php redis extension",
                            "type": "class"
                        },
                        {
                            "text": "RedisException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "RedisArray",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionException",
                            "rightLabel": "Exception",
                            "description": "Start of Reflection v.$Revision: 307971 $",
                            "type": "class"
                        },
                        {
                            "text": "Reflection",
                            "description": "The reflection class.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionFunctionAbstract",
                            "description": "A parent class to <b>ReflectionFunction<\/b>, read its\ndescription for details.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionFunction",
                            "rightLabel": "ReflectionFunctionAbstract",
                            "description": "The <b>ReflectionFunction<\/b> class reports\ninformation about a function.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionParameter",
                            "description": "The <b>ReflectionParameter<\/b> class retrieves\ninformation about function's or method's parameters.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionMethod",
                            "rightLabel": "ReflectionFunctionAbstract",
                            "description": "The <b>ReflectionMethod<\/b> class reports\ninformation about a method.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionClass",
                            "description": "The <b>ReflectionClass<\/b> class reports\ninformation about a class.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionObject",
                            "rightLabel": "ReflectionClass",
                            "description": "The <b>ReflectionObject<\/b> class reports\ninformation about an object.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionProperty",
                            "description": "The <b>ReflectionProperty<\/b> class reports\ninformation about a classes properties.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionExtension",
                            "description": "The <b>ReflectionExtension<\/b> class reports\ninformation about an extension.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionZendExtension",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionGenerator",
                            "description": "The ReflectionGenerator class reports information about a generator.",
                            "type": "class"
                        },
                        {
                            "text": "ReflectionType",
                            "description": "The ReflectionType class reports information about a function's parameters.",
                            "type": "class"
                        },
                        {
                            "text": "SessionHandler",
                            "description": "<b>SessionHandler<\/b> a special class that can\nbe used to expose the current internal PHP session\nsave handler by inheritance. There are six methods\nwhich wrap the six internal session save handler\ncallbacks (open, close, read, write, destroy and gc).",
                            "type": "class"
                        },
                        {
                            "text": "SimpleXMLElement",
                            "description": "Start of SimpleXML v.0.1",
                            "type": "class"
                        },
                        {
                            "text": "SimpleXMLIterator",
                            "rightLabel": "SimpleXMLElement",
                            "description": "The SimpleXMLIterator provides recursive iteration over all nodes of a <b>SimpleXMLElement<\/b> object.",
                            "type": "class"
                        },
                        {
                            "text": "SNMP",
                            "description": "Start of snmp v.0.1",
                            "type": "class"
                        },
                        {
                            "text": "SNMPException",
                            "rightLabel": "RuntimeException",
                            "description": "Represents an error raised by SNMP. You should not throw a\n<b>SNMPException<\/b> from your own code.",
                            "type": "class"
                        },
                        {
                            "text": "SoapClient",
                            "description": "Start of soap v.",
                            "type": "class"
                        },
                        {
                            "text": "SoapVar",
                            "description": "A class representing a variable or object for use with SOAP services.",
                            "type": "class"
                        },
                        {
                            "text": "SoapServer",
                            "description": "The SoapServer class provides a server for the SOAP 1.1 and SOAP 1.2 protocols. It can be used with or without a WSDL service description.",
                            "type": "class"
                        },
                        {
                            "text": "SoapFault",
                            "rightLabel": "Exception",
                            "description": "Represents a SOAP fault.",
                            "type": "class"
                        },
                        {
                            "text": "SoapParam",
                            "description": "Represents parameter to a SOAP call.",
                            "type": "class"
                        },
                        {
                            "text": "SoapHeader",
                            "description": "Represents a SOAP header.",
                            "type": "class"
                        },
                        {
                            "text": "LogicException",
                            "rightLabel": "Exception",
                            "description": "Start of SPL v.0.2",
                            "type": "class"
                        },
                        {
                            "text": "BadFunctionCallException",
                            "rightLabel": "LogicException",
                            "description": "Exception thrown if a callback refers to an undefined function or if some\narguments are missing.",
                            "type": "class"
                        },
                        {
                            "text": "BadMethodCallException",
                            "rightLabel": "BadFunctionCallException",
                            "description": "Exception thrown if a callback refers to an undefined method or if some\narguments are missing.",
                            "type": "class"
                        },
                        {
                            "text": "DomainException",
                            "rightLabel": "LogicException",
                            "description": "Exception thrown if a value does not adhere to a defined valid data domain.",
                            "type": "class"
                        },
                        {
                            "text": "InvalidArgumentException",
                            "rightLabel": "LogicException",
                            "description": "Exception thrown if an argument does not match with the expected value.",
                            "type": "class"
                        },
                        {
                            "text": "LengthException",
                            "rightLabel": "LogicException",
                            "description": "Exception thrown if a length is invalid.",
                            "type": "class"
                        },
                        {
                            "text": "OutOfRangeException",
                            "rightLabel": "LogicException",
                            "description": "Exception thrown when an illegal index was requested. This represents\nerrors that should be detected at compile time.",
                            "type": "class"
                        },
                        {
                            "text": "RuntimeException",
                            "rightLabel": "Exception",
                            "description": "Exception thrown if an error which can only be found on runtime occurs.",
                            "type": "class"
                        },
                        {
                            "text": "OutOfBoundsException",
                            "rightLabel": "RuntimeException",
                            "description": "Exception thrown if a value is not a valid key. This represents errors\nthat cannot be detected at compile time.",
                            "type": "class"
                        },
                        {
                            "text": "OverflowException",
                            "rightLabel": "RuntimeException",
                            "description": "Exception thrown when you add an element into a full container.",
                            "type": "class"
                        },
                        {
                            "text": "RangeException",
                            "rightLabel": "RuntimeException",
                            "description": "Exception thrown to indicate range errors during program execution.",
                            "type": "class"
                        },
                        {
                            "text": "UnderflowException",
                            "rightLabel": "RuntimeException",
                            "description": "Exception thrown when you try to remove an element of an empty container.",
                            "type": "class"
                        },
                        {
                            "text": "UnexpectedValueException",
                            "rightLabel": "RuntimeException",
                            "description": "Exception thrown if a value does not match with a set of values. Typically\nthis happens when a function calls another function and expects the return\nvalue to be of a certain type or value not including arithmetic or buffer\nrelated errors.",
                            "type": "class"
                        },
                        {
                            "text": "EmptyIterator",
                            "description": "The EmptyIterator class for an empty iterator.",
                            "type": "class"
                        },
                        {
                            "text": "CallbackFilterIterator",
                            "rightLabel": "FilterIterator",
                            "description": "Filtered iterator using the callback to determine which items are accepted or rejected.",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveCallbackFilterIterator",
                            "rightLabel": "CallbackFilterIterator",
                            "description": "(PHP 5 >= 5.4.0)<br>\nRecursiveCallbackFilterIterator from a RecursiveIterator",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveIteratorIterator",
                            "description": "Can be used to iterate through recursive iterators.",
                            "type": "class"
                        },
                        {
                            "text": "IteratorIterator",
                            "description": "This iterator wrapper allows the conversion of anything that is\nTraversable into an Iterator.",
                            "type": "class"
                        },
                        {
                            "text": "FilterIterator",
                            "rightLabel": "IteratorIterator",
                            "description": "This abstract iterator filters out unwanted values. This class should be extended to\nimplement custom iterator filters. The <b>FilterIterator::accept<\/b>\nmust be implemented in the subclass.",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveFilterIterator",
                            "rightLabel": "FilterIterator",
                            "description": "This abstract iterator filters out unwanted values for a <b>RecursiveIterator<\/b>.",
                            "type": "class"
                        },
                        {
                            "text": "ParentIterator",
                            "rightLabel": "RecursiveFilterIterator",
                            "description": "This extended FilterIterator allows a recursive iteration using RecursiveIteratorIterator that only shows those elements which have children.",
                            "type": "class"
                        },
                        {
                            "text": "LimitIterator",
                            "rightLabel": "IteratorIterator",
                            "description": "The <b>LimitIterator<\/b> class allows iteration over\na limited subset of items in an <b>Iterator<\/b>.",
                            "type": "class"
                        },
                        {
                            "text": "CachingIterator",
                            "rightLabel": "IteratorIterator",
                            "description": "This object supports cached iteration over another iterator.",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveCachingIterator",
                            "rightLabel": "CachingIterator",
                            "type": "class"
                        },
                        {
                            "text": "NoRewindIterator",
                            "rightLabel": "IteratorIterator",
                            "description": "This iterator cannot be rewinded.",
                            "type": "class"
                        },
                        {
                            "text": "AppendIterator",
                            "rightLabel": "IteratorIterator",
                            "description": "An Iterator that iterates over several iterators one after the other.",
                            "type": "class"
                        },
                        {
                            "text": "InfiniteIterator",
                            "rightLabel": "IteratorIterator",
                            "description": "The <b>InfiniteIterator<\/b> allows one to\ninfinitely iterate over an iterator without having to manually\nrewind the iterator upon reaching its end.",
                            "type": "class"
                        },
                        {
                            "text": "RegexIterator",
                            "rightLabel": "FilterIterator",
                            "description": "This iterator can be used to filter another iterator based on a regular expression.",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveRegexIterator",
                            "rightLabel": "RegexIterator",
                            "description": "This recursive iterator can filter another recursive iterator via a regular expression.",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveTreeIterator",
                            "rightLabel": "RecursiveIteratorIterator",
                            "description": "Allows iterating over a <b>RecursiveIterator<\/b> to generate an ASCII graphic tree.",
                            "type": "class"
                        },
                        {
                            "text": "ArrayObject",
                            "description": "This class allows objects to work as arrays.",
                            "type": "class"
                        },
                        {
                            "text": "ArrayIterator",
                            "description": "This iterator allows to unset and modify values and keys while iterating\nover Arrays and Objects.",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveArrayIterator",
                            "rightLabel": "ArrayIterator",
                            "description": "This iterator allows to unset and modify values and keys while iterating over Arrays and Objects\nin the same way as the ArrayIterator. Additionally it is possible to iterate\nover the current iterator entry.",
                            "type": "class"
                        },
                        {
                            "text": "SplFileInfo",
                            "description": "Start of SPL v.0.2",
                            "type": "class"
                        },
                        {
                            "text": "DirectoryIterator",
                            "rightLabel": "SplFileInfo",
                            "description": "The DirectoryIterator class provides a simple interface for viewing\nthe contents of filesystem directories.",
                            "type": "class"
                        },
                        {
                            "text": "FilesystemIterator",
                            "rightLabel": "DirectoryIterator",
                            "description": "The Filesystem iterator",
                            "type": "class"
                        },
                        {
                            "text": "RecursiveDirectoryIterator",
                            "rightLabel": "FilesystemIterator",
                            "description": "The <b>RecursiveDirectoryIterator<\/b> provides\nan interface for iterating recursively over filesystem directories.",
                            "type": "class"
                        },
                        {
                            "text": "GlobIterator",
                            "rightLabel": "FilesystemIterator",
                            "description": "Iterates through a file system in a similar fashion to\n<b>glob<\/b>.",
                            "type": "class"
                        },
                        {
                            "text": "SplFileObject",
                            "rightLabel": "SplFileInfo",
                            "description": "The SplFileObject class offers an object oriented interface for a file.",
                            "type": "class"
                        },
                        {
                            "text": "SplTempFileObject",
                            "rightLabel": "SplFileObject",
                            "description": "The SplTempFileObject class offers an object oriented interface for a temporary file.",
                            "type": "class"
                        },
                        {
                            "text": "SplDoublyLinkedList",
                            "description": "The SplDoublyLinkedList class provides the main functionalities of a doubly linked list.",
                            "type": "class"
                        },
                        {
                            "text": "SplQueue",
                            "rightLabel": "SplDoublyLinkedList",
                            "description": "The SplQueue class provides the main functionalities of a queue implemented using a doubly linked list.",
                            "type": "class"
                        },
                        {
                            "text": "SplStack",
                            "rightLabel": "SplDoublyLinkedList",
                            "description": "The SplStack class provides the main functionalities of a stack implemented using a doubly linked list.",
                            "type": "class"
                        },
                        {
                            "text": "SplHeap",
                            "description": "The SplHeap class provides the main functionalities of an Heap.",
                            "type": "class"
                        },
                        {
                            "text": "SplMinHeap",
                            "rightLabel": "SplHeap",
                            "description": "The SplMinHeap class provides the main functionalities of a heap, keeping the minimum on the top.",
                            "type": "class"
                        },
                        {
                            "text": "SplMaxHeap",
                            "rightLabel": "SplHeap",
                            "description": "The SplMaxHeap class provides the main functionalities of a heap, keeping the maximum on the top.",
                            "type": "class"
                        },
                        {
                            "text": "SplPriorityQueue",
                            "description": "The SplPriorityQueue class provides the main functionalities of an\nprioritized queue, implemented using a heap.",
                            "type": "class"
                        },
                        {
                            "text": "SplFixedArray",
                            "description": "The SplFixedArray class provides the main functionalities of array. The\nmain differences between a SplFixedArray and a normal PHP array is that\nthe SplFixedArray is of fixed length and allows only integers within\nthe range as indexes. The advantage is that it allows a faster array\nimplementation.",
                            "type": "class"
                        },
                        {
                            "text": "SplObjectStorage",
                            "description": "The SplObjectStorage class provides a map from objects to data or, by\nignoring data, an object set. This dual purpose can be useful in many\ncases involving the need to uniquely identify objects.",
                            "type": "class"
                        },
                        {
                            "text": "MultipleIterator",
                            "description": "An Iterator that sequentially iterates over all attached iterators",
                            "type": "class"
                        },
                        {
                            "text": "SplType",
                            "description": "Abstract parent class for all SPL types.",
                            "type": "class"
                        },
                        {
                            "text": "SplInt",
                            "rightLabel": "SplType",
                            "description": "The SplInt class is used to enforce strong typing of the integer type.",
                            "type": "class"
                        },
                        {
                            "text": "SplFloat",
                            "rightLabel": "SplType",
                            "description": "The SplFloat class is used to enforce strong typing of the float type.",
                            "type": "class"
                        },
                        {
                            "text": "SplEnum",
                            "rightLabel": "SplType",
                            "description": "SplEnum gives the ability to emulate and create enumeration objects natively in PHP.",
                            "type": "class"
                        },
                        {
                            "text": "SplBool",
                            "rightLabel": "SplEnum",
                            "description": "The SplBool class is used to enforce strong typing of the bool type.",
                            "type": "class"
                        },
                        {
                            "text": "SplString",
                            "rightLabel": "SplType",
                            "description": "The SplString class is used to enforce strong typing of the string type.",
                            "type": "class"
                        },
                        {
                            "text": "SQLiteDatabase",
                            "description": "Start of SQLite v.2.0-dev",
                            "type": "class"
                        },
                        {
                            "text": "SQLiteResult",
                            "type": "class"
                        },
                        {
                            "text": "SQLiteUnbuffered",
                            "description": "Represents an unbuffered SQLite result set. Unbuffered results sets are sequential, forward-seeking only.",
                            "type": "class"
                        },
                        {
                            "text": "SQLiteException",
                            "rightLabel": "RuntimeException",
                            "type": "class"
                        },
                        {
                            "text": "SQLite3",
                            "description": "Start of sqlite3 v.0.7-dev",
                            "type": "class"
                        },
                        {
                            "text": "SQLite3Stmt",
                            "description": "A class that handles prepared statements for the SQLite 3 extension.",
                            "type": "class"
                        },
                        {
                            "text": "SQLite3Result",
                            "description": "A class that handles result sets for the SQLite 3 extension.",
                            "type": "class"
                        },
                        {
                            "text": "__PHP_Incomplete_Class",
                            "description": "Start of standard v.5.3.2-0.dotdeb.1",
                            "type": "class"
                        },
                        {
                            "text": "php_user_filter",
                            "type": "class"
                        },
                        {
                            "text": "Directory",
                            "description": "Instances of Directory are created by calling the dir() function, not by the new operator.",
                            "type": "class"
                        },
                        {
                            "text": "Svn",
                            "description": "Start of svn v.1.0.1",
                            "type": "class"
                        },
                        {
                            "text": "SvnWc",
                            "type": "class"
                        },
                        {
                            "text": "SvnWcSchedule",
                            "type": "class"
                        },
                        {
                            "text": "SvnNode",
                            "type": "class"
                        },
                        {
                            "text": "tidy",
                            "description": "Start of tidy v.2.0",
                            "type": "class"
                        },
                        {
                            "text": "tidyNode",
                            "description": "An HTML node in an HTML file, as detected by tidy.",
                            "type": "class"
                        },
                        {
                            "text": "XMLReader",
                            "description": "Start of xmlreader v.0.2",
                            "type": "class"
                        },
                        {
                            "text": "XMLWriter",
                            "description": "Start of xmlwriter v.0.1",
                            "type": "class"
                        },
                        {
                            "text": "XSLTProcessor",
                            "description": "Start of xsl v.0.1",
                            "type": "class"
                        },
                        {
                            "text": "ZendAPI_Queue",
                            "description": "Start of Zend Extensions",
                            "type": "class"
                        },
                        {
                            "text": "ZendAPI_Job",
                            "description": "Describing a job in a queue\nIn order to add\/modify a job in the queue, a Job class must be created\/retrieved and than saved in a queue",
                            "type": "class"
                        },
                        {
                            "text": "java",
                            "type": "class"
                        },
                        {
                            "text": "JavaException",
                            "type": "class"
                        },
                        {
                            "text": "ZipArchive",
                            "description": "Start of zip v.1.11.0",
                            "type": "class"
                        },
                        {
                            "text": "ZMQ",
                            "description": "Helper autocomplete for php zmq extension",
                            "type": "class"
                        },
                        {
                            "text": "ZMQContext",
                            "description": "Class ZMQContext",
                            "type": "class"
                        },
                        {
                            "text": "ZMQSocket",
                            "description": "Class ZMQSocket",
                            "type": "class"
                        },
                        {
                            "text": "ZMQPoll",
                            "description": "Class ZMQPoll",
                            "type": "class"
                        },
                        {
                            "text": "ZMQDevice",
                            "description": "Class ZMQDevice",
                            "type": "class"
                        },
                        {
                            "text": "ZMQException",
                            "rightLabel": "Exception",
                            "type": "class"
                        },
                        {
                            "text": "ZMQContextException",
                            "rightLabel": "ZMQException",
                            "type": "class"
                        },
                        {
                            "text": "ZMQSocketException",
                            "rightLabel": "ZMQException",
                            "type": "class"
                        },
                        {
                            "text": "ZMQPollException",
                            "rightLabel": "ZMQException",
                            "type": "class"
                        },
                        {
                            "text": "ZMQDeviceException",
                            "rightLabel": "ZMQException",
                            "type": "class"
                        }
                    ]
                }
            }
        }
    },
    ".source.php .meta.array.php": {
        "editor": {
            "decreaseIndentPattern": "(?x)\n\t    ^ (.* \\*\/)? \\s*\n\t    (\\)+)\n\t"
        }
    },
    ".source.php:not(.string)": {
        "editor": {
            "increaseIndentPattern": "(?x)\n\t    (   \\{ (?! .+ \\} ) .*\n\t    |   \\(\n\t    |   (\\[)\n\t    |   ((else)?if|else|for(each)?|while|switch) .* :\n\t    )   \\s* (\/[\/*] .*)? $",
            "decreaseIndentPattern": "(?x)\n\t    ^ (.* \\*\/)? \\s*\n\t    (\n\t        (\\})         |\n\t        (\\)+([;,]|\\s*\\{))    |\n\t        (\\]\\)*([;,]|$))     |\n\t        (else:)      |\n\t        ((end(if|for(each)?|while|switch));)\n\t    )\n\t"
        }
    },
    ".text.html.php": {
        "editor": {
            "nonWordCharacters": "\/\\()\"':,.;<>~!@#%^&*|+=[]{}`?-"
        }
    }
}